[{"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\index.js":"1","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\App.js":"3","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\header\\header.js":"4","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\home\\home.js":"5","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\map.js":"6","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapStyle.js":"7","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\footer\\footer.js":"8","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\price\\price.js":"9","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\whyUs\\whyUs.js":"10","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\news.js":"11","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\newsDetail\\newsDetail.js":"12","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\order.js":"13","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\location\\location.js":"14","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginInformation\\loginInformation.js":"15","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginOrder\\loginOrder.js":"16","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginLocation\\loginLocation.js":"17","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\payment\\payment.js":"18","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\delivery\\delivery.js":"19","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\static\\static.js":"20","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\openMobMenu.js":"21","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\queries\\queries.js":"22","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\api.js":"23","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\include.js":"24","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\newsSelf.js":"25","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\resize.js":"26","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\helper\\helper.js":"27","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\atoms\\atoms.js":"28","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderComplete.js":"29","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\signIn\\signIn.js":"30","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\token.js":"31","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\contact\\contact.js":"32","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\passwordUpdated\\passwordUpdated.js":"33","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\register\\register.js":"34","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\checkedPhoneInput.js":"35","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\i18next\\i18n.js":"36","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapCoordinate.js":"37","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\services\\services.js":"38","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\404\\404.js":"39"},{"size":1178,"mtime":1613233484858,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":5721,"mtime":1613379167849,"results":"43","hashOfConfig":"41"},{"size":6423,"mtime":1613380113307,"results":"44","hashOfConfig":"41"},{"size":5792,"mtime":1613327389088,"results":"45","hashOfConfig":"41"},{"size":4438,"mtime":1613332030091,"results":"46","hashOfConfig":"41"},{"size":2569,"mtime":1610183120996,"results":"47","hashOfConfig":"41"},{"size":2498,"mtime":1610572640217,"results":"48","hashOfConfig":"41"},{"size":3241,"mtime":1613260253430,"results":"49","hashOfConfig":"41"},{"size":4250,"mtime":1613379767871,"results":"50","hashOfConfig":"41"},{"size":2689,"mtime":1612374284014,"results":"51","hashOfConfig":"41"},{"size":3075,"mtime":1613379730957,"results":"52","hashOfConfig":"41"},{"size":12105,"mtime":1613342657318,"results":"53","hashOfConfig":"41"},{"size":25936,"mtime":1613344168936,"results":"54","hashOfConfig":"41"},{"size":4784,"mtime":1613294712327,"results":"55","hashOfConfig":"41"},{"size":7927,"mtime":1613294939033,"results":"56","hashOfConfig":"41"},{"size":20119,"mtime":1613343949061,"results":"57","hashOfConfig":"41"},{"size":8307,"mtime":1612884955620,"results":"58","hashOfConfig":"41"},{"size":4537,"mtime":1612541840221,"results":"59","hashOfConfig":"41"},{"size":3025,"mtime":1613379454203,"results":"60","hashOfConfig":"41"},{"size":1052,"mtime":1611260793262,"results":"61","hashOfConfig":"41"},{"size":915,"mtime":1612619301451,"results":"62","hashOfConfig":"41"},{"size":299,"mtime":1613313125536,"results":"63","hashOfConfig":"41"},{"size":48,"mtime":1611239818363,"results":"64","hashOfConfig":"41"},{"size":4615,"mtime":1613339004672,"results":"65","hashOfConfig":"41"},{"size":780,"mtime":1611260916086,"results":"66","hashOfConfig":"41"},{"size":1976,"mtime":1613308929174,"results":"67","hashOfConfig":"41"},{"size":427,"mtime":1613253761577,"results":"68","hashOfConfig":"41"},{"size":15438,"mtime":1613343194171,"results":"69","hashOfConfig":"41"},{"size":5516,"mtime":1613306323714,"results":"70","hashOfConfig":"41"},{"size":2021,"mtime":1612891317458,"results":"71","hashOfConfig":"41"},{"size":5205,"mtime":1612991082787,"results":"72","hashOfConfig":"41"},{"size":3733,"mtime":1612620810466,"results":"73","hashOfConfig":"41"},{"size":7710,"mtime":1612947583712,"results":"74","hashOfConfig":"41"},{"size":502,"mtime":1613032321244,"results":"75","hashOfConfig":"41"},{"size":804,"mtime":1613235094402,"results":"76","hashOfConfig":"41"},{"size":3000,"mtime":1613259643388,"results":"77","hashOfConfig":"41"},{"size":735,"mtime":1613291600360,"results":"78","hashOfConfig":"41"},{"size":291,"mtime":1613338561974,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"862sdw",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\index.js",[],["171","172"],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\App.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\header\\header.js",["173","174","175","176","177","178"],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\home\\home.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\map.js",["179"],"import React, { Component } from 'react';\r\n\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\n\r\n\r\n\r\n// // renderHtml\r\n// import renderHtml from 'react-render-html';\r\n\r\n// mapStyle\r\nimport mapStyle from './mapStyle';\r\n\r\n// propTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n// map css\r\nimport './css/_map.scss';\r\n\r\n// aos\r\nimport AOS from 'aos';\r\nimport \"aos/dist/aos.css\";\r\n\r\n\r\n\r\nlet currentZoom = 14;\r\n\r\n\r\n\r\nclass MapContainer extends Component {\r\n\r\n\r\n\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: '',\r\n        zoomMap: currentZoom,\r\n        selectedPlace: '',\r\n        center: '',\r\n        show: false,\r\n        positions: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        // or simply just AOS.init();\r\n        AOS.init({\r\n            // initialise with other settings\r\n            duration: 1000\r\n        });\r\n\r\n        window.onscroll = () => {\r\n            AOS.refresh()\r\n        }\r\n\r\n        let locate = this.props.locations !== false ? this.props.locations.map(item => (\r\n            this.setState({\r\n                center: { lat: item[0], lng: item[1] }\r\n            })\r\n        ))\r\n            :\r\n            ''\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null,\r\n                show: false,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const mapContainerStyle = {\r\n            height: '409px',\r\n            width: '100%',\r\n\r\n        }\r\n\r\n\r\n        // map style and checkking controls\r\n        const mapOptions = {\r\n            styles: mapStyle,\r\n            fullscreenControl: false,\r\n            streetViewControl: false,\r\n            mapTypeControl: false,\r\n            zoomControl: false,\r\n\r\n        };\r\n\r\n\r\n        // Clusters options\r\n\r\n        // const optionsClusters = {\r\n        //     styles: [{\r\n        //         textColor: 'white',\r\n        //         height: 53,\r\n        //         url: require('../../images/clusters.svg'),\r\n        //         'width': 50,\r\n        //         'line-height': 42\r\n        //     }]\r\n        // }\r\n\r\n\r\n\r\n        return (\r\n            <div data-aos=\"fade-up\">\r\n                <LoadScript\r\n                    googleMapsApiKey='AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw'>\r\n                    <GoogleMap\r\n                        id='mapWithClusters'\r\n                        mapContainerStyle={mapContainerStyle}\r\n                        zoom={this.state.zoomMap}\r\n                        center={this.state.center}\r\n                        options={mapOptions}\r\n                    >\r\n                        <Marker>\r\n                            {\r\n                                this.props.locations !== false ? this.props.locations.map((item, index) => (\r\n                                    <Marker\r\n                                        key={index}\r\n                                        onClick={this.onMarkerClick = () => {\r\n                                            this.setState({\r\n                                                selectedPlace: item[0],\r\n                                                center: { lat: item[0], lng: item[1] },\r\n                                                showingInfoWindow: true,\r\n                                                positions: this.props.locations,\r\n                                                show: true,\r\n                                            });\r\n                                        }}\r\n                                        icon={{\r\n                                            url: require('../../images/pin.png').default,\r\n                                            // size: { width: 30, height: 30, }\r\n                                        }}\r\n\r\n                                        position={{ lat: item[0], lng: item[1] }}\r\n                                        animation={2}\r\n                                    />\r\n\r\n                                ))\r\n                                    :\r\n                                    ''\r\n                            }\r\n                        </Marker>\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div >\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nMapContainer.propTypes = {\r\n    pathName: PropTypes.object,\r\n    locations: PropTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default MapContainer","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapStyle.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\footer\\footer.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\price\\price.js",["180","181","182","183"],"import React, { useLayoutEffect } from 'react';\r\n\r\n\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from 'reactstrap';\r\n\r\n// react router dom\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// aos\r\nimport AOS from 'aos';\r\nimport \"aos/dist/aos.css\";\r\n\r\n// propTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n// tabs\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\n\r\n// atoms\r\nimport { myTab } from '../../atoms/atoms';\r\n\r\n// recoil\r\nimport {\r\n    useRecoilState,\r\n} from 'recoil';\r\n\r\n// jquery\r\n\r\nimport $ from 'jquery';\r\n\r\n\r\nconst Price = React.memo(function Price({\r\n    ...props\r\n}) {\r\n\r\n    useLayoutEffect(() => {\r\n        AOS.init({\r\n            duration: 2000\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n    let { data } = props.data\r\n\r\n\r\n    let [tabKey, setTabKey] = useRecoilState(myTab)\r\n\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        $('.itemsCom').click(function () {\r\n\r\n            let eventKey = $(this).attr('data-id');\r\n\r\n            setTabKey(eventKey)\r\n\r\n        })\r\n\r\n\r\n    }, [data])\r\n\r\n\r\n    return (\r\n        <div className='home__price' data-aos=\"fade-up\">\r\n            <Container>\r\n                <div className='home__priceBox '>\r\n                    <Row>\r\n                        {\r\n                            data.map(item => (\r\n                                <Col lg='6' className='p-0 itemsCom' key={item.id} data-id={item.name}>\r\n                                    <NavLink to={'/order/' + item.name.toLowerCase()}>\r\n                                        <div className='home__priceBox--item'>\r\n                                            <div className='layout'>\r\n                                                <img src={require('../../images/layer.png').default} alt='' />\r\n                                            </div>\r\n                                            <img src={item.img !== null ? item.img.original : ''} alt='' />\r\n\r\n                                            <h4>\r\n                                                {\r\n                                                    item.name\r\n                                                }\r\n                                                {\r\n                                                    item.description !== undefined && item.description !== null ?\r\n                                                        <strong>\r\n                                                            {\r\n                                                                item.description\r\n                                                            }\r\n                                                        </strong>\r\n                                                        :\r\n                                                        ''\r\n                                                }\r\n                                            </h4>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                </Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nPrice.propTypes = {\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Price;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\whyUs\\whyUs.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\news.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\newsDetail\\newsDetail.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\order.js",["184","185","186","187"],"import React, { useLayoutEffect, useState } from 'react';\r\n\r\n// css\r\n\r\nimport './css/_order.scss';\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from 'reactstrap';\r\n\r\n// react router dom\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// map\r\n\r\nimport Map from '../map/map';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n// tabs\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\n\r\n// query\r\nimport { useQuery } from 'react-query';\r\nimport { categories } from '../../queries/queries';\r\n\r\n// recoil\r\nimport {\r\n    useRecoilState,\r\n    useRecoilValue\r\n} from 'recoil';\r\n\r\n// atoms\r\nimport { basket, myTab } from '../../atoms/atoms';\r\n\r\n// baseUrl\r\nimport { baseUrl } from '../../api/api';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// helper\r\nimport { decimalAdjust } from '../../helper/helper';\r\n\r\n\r\n// import { faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// jquery\r\nimport $ from 'jquery';\r\n\r\n\r\nconst Order = () => {\r\n\r\n    // settings\r\n    let settings = useQuery(['settings', ''], async () => {\r\n\r\n        const res = await axios.get(baseUrl + 'setting')\r\n\r\n        return res.data\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n\r\n\r\n    const locate = settings.isLoading === false && (\r\n        settings.data.data.map_location.map(item => (\r\n            [\r\n                Number(item.lat),\r\n                Number(item.long)\r\n            ]\r\n        ))\r\n    )\r\n\r\n\r\n    let { data, isLoading } = useQuery(['category', ''], categories, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n    let [product, setProduct] = useState([])\r\n\r\n    let [myBasket, setMyBasket] = useRecoilState(basket)\r\n\r\n    let [changeTab, setChangeTab] = useRecoilState(myTab)\r\n\r\n\r\n\r\n    let myTabName = useRecoilValue(myTab)\r\n\r\n\r\n    let [total] = useState([])\r\n\r\n\r\n    if (JSON.parse(localStorage.getItem('items')) !== null) {\r\n        product = JSON.parse(localStorage.getItem('items'))\r\n        total = JSON.parse(localStorage.getItem('total'));\r\n    }\r\n\r\n\r\n\r\n    function sendMinus(value, event) {\r\n\r\n        const endRes = product.filter(id => id.id === value.id)\r\n\r\n\r\n        if (endRes[0] !== undefined) {\r\n            if (endRes[0].count > 0) {\r\n\r\n                endRes[0].count--\r\n                localStorage.setItem('items', JSON.stringify(product.filter(count => count.count > 0)))\r\n                event.target.nextElementSibling.nextElementSibling.style.display = 'block'\r\n                event.target.nextElementSibling.nextElementSibling.textContent = endRes[0].count\r\n\r\n                setMyBasket(JSON.parse(localStorage.getItem('items')))\r\n\r\n                const index = total.indexOf(Number(value.price));\r\n\r\n                if (index > -1) {\r\n                    total.splice(index, 1);\r\n\r\n                    window.localStorage.setItem('total', JSON.stringify(total))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function sendPlus(value, event) {\r\n        const res = product.some(id => id.id === value.id)\r\n\r\n        if (res === false) {\r\n\r\n            product.push(value)\r\n\r\n            const endFinish = product.filter(id => id.id === value.id)\r\n\r\n            localStorage.setItem('items', JSON.stringify(product))\r\n\r\n            setMyBasket(JSON.parse(localStorage.getItem('items')))\r\n\r\n            if (endFinish !== 0) {\r\n                event.target.nextElementSibling.style.display = 'block'\r\n                event.target.nextElementSibling.textContent = endFinish[0].count\r\n            }\r\n\r\n        } else {\r\n            const endRes = product.filter(id => id.id === value.id)\r\n            endRes[0].count++\r\n            localStorage.setItem('items', JSON.stringify(product))\r\n            setMyBasket(JSON.parse(localStorage.getItem('items')))\r\n\r\n            if (endRes !== 0) {\r\n                event.target.nextElementSibling.style.display = 'block'\r\n                event.target.nextElementSibling.textContent = endRes[0].count\r\n            }\r\n        }\r\n\r\n        total.push(Number(value.price))\r\n\r\n        window.localStorage.setItem('total', JSON.stringify(total))\r\n\r\n    }\r\n\r\n    const round10 = (value, exp) => decimalAdjust('round', value, exp);\r\n\r\n    const reducer = (accumulator, currentValue) => round10(accumulator + currentValue, -1);\r\n\r\n\r\n\r\n    window.addEventListener('beforeunload', function (e) {\r\n        localStorage.removeItem(\"items\")\r\n        localStorage.removeItem(\"total\")\r\n    });\r\n\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        $('.oder__content nav').css({\r\n            position: 'sticky',\r\n            top: 20,\r\n            zIndex: 5555\r\n        })\r\n\r\n    }, [data])\r\n\r\n    return (\r\n        <main className='order home__price'>\r\n            <div className='rules__banner'>\r\n                <img src={require('../../images/rules.png').default} alt='' />\r\n                <Container>\r\n                    <h4 className='rules__title'>\r\n                        ONLİNE SİFARİŞ\r\n                    </h4>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <div className='order__breadCrumbs'>\r\n                    <span className='activCrumbs'>\r\n                        SİFARİŞ\r\n                    </span>\r\n                </div>\r\n                <div className='oder__content home__priceBox'>\r\n                    {\r\n                        isLoading === false && (\r\n                            <Tabs defaultActiveKey={myTabName !== null ? myTabName : data.data[0].name} transition={false} id=\"noanim-tab-example\">\r\n                                {\r\n                                    data.data.map(item => (\r\n\r\n                                        <Tab eventKey={item.name} title={item.name} key={item.id}>\r\n                                            <Row>\r\n                                                {\r\n                                                    item.products.data.map(pro => (\r\n                                                        <Col md='6' lg='2' key={pro.id}>\r\n                                                            <div className='order__itemBox'>\r\n                                                                <div className='order__itemBox--img'>\r\n                                                                    <img src={pro.img !== null && pro.img.length !== 0 ? pro.img.order : ''} alt='' />\r\n                                                                    <button className='minus' data-id={pro.id} onClick={(event) => {\r\n                                                                        sendMinus({\r\n                                                                            id: pro.id,\r\n                                                                            img: pro.img !== null ? pro.img.order : '',\r\n                                                                            name: pro.name,\r\n                                                                            price: pro.price,\r\n                                                                            count: 0\r\n                                                                        }, event)\r\n                                                                    }}>\r\n                                                                        -\r\n                                                                    </button>\r\n                                                                    <button className='plus' data-id={pro.id} onClick={(event) => {\r\n                                                                        sendPlus({\r\n                                                                            id: pro.id,\r\n                                                                            img: pro.img !== null ? pro.img.order : '',\r\n                                                                            price: pro.price,\r\n                                                                            name: pro.name,\r\n                                                                            count: 1\r\n                                                                        }, event)\r\n                                                                    }}>\r\n                                                                        +\r\n                                                                     </button>\r\n                                                                    <div className=\"show\" style={{\r\n                                                                        display: product.filter(id => id.id === pro.id).length !== 0 ? 'block' : 'none'\r\n                                                                    }}>\r\n                                                                        {\r\n                                                                            product.filter(id => id.id === pro.id).length !== 0\r\n                                                                                ? product.filter(id => id.id === pro.id)[0].count : ''\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <strong>{pro.name}</strong>\r\n                                                                <span>{item.name}</span>\r\n                                                                <div className='flex'>\r\n                                                                    <p className='priceBtn'>\r\n                                                                        <span>\r\n                                                                            {\r\n                                                                                pro.price\r\n                                                                            }\r\n                                                                        </span>\r\n                                                                        {/* <i>\r\n                                                                              13%\r\n                                                                </i> */}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    ))\r\n                                                }\r\n                                            </Row >\r\n                                        </Tab>\r\n                                    ))\r\n                                }\r\n                            </Tabs>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n                <div className='order__result'>\r\n                    <p>\r\n                        ÜMUMİ MƏBLƏĞ:\r\n                        <span className='res'>\r\n                            {\r\n                                total.length !== 0 ?\r\n                                    total.reduce(reducer) + ' AZN'\r\n                                    :\r\n                                    0 + ' AZN'\r\n                            }\r\n                        </span>\r\n                    </p>\r\n                    <div className='btnBoxs'>\r\n                        <NavLink to={total.length !== 0 && total.reduce(reducer) !== 0 ? `/ordercomplete` : '/order'}>\r\n                            <button className='success'>\r\n                                Next\r\n                            </button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            <div id='map'>\r\n                {\r\n                    settings.isLoading === false && (\r\n                        <Map locations={locate} />\r\n                    )\r\n                }\r\n            </div>\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default Order;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\location\\location.js",["188","189","190","191","192"],"import React, { useLayoutEffect, useState } from 'react';\r\n\r\n// css\r\nimport \"./css/_location.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container, Input } from 'reactstrap';\r\n\r\n// react router dom\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// map\r\n\r\nimport Map from '../map/map';\r\n\r\n// react router dom\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n\r\n// query\r\nimport { useQuery, useMutation } from 'react-query';\r\n\r\n// baseUrl\r\nimport { baseUrl } from '../../api/api';\r\n\r\n// axios\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//  jquery\r\nimport $ from 'jquery';\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\n\r\n// atoms\r\n\r\nimport { order } from '../../atoms/atoms';\r\n\r\n// sweet alert\r\nimport swal from 'sweetalert';\r\n\r\n// map\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\n// mapStyle\r\nimport mapStyle from '../map/mapStyle';\r\n\r\nconst Location = () => {\r\n\r\n\r\n    let history = useHistory()\r\n\r\n\r\n    if (JSON.parse(localStorage.getItem('items')) === null) {\r\n        history.push({\r\n            pathname: '/order'\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // settings\r\n    let settings = useQuery(['settings', ''], async () => {\r\n\r\n        const res = await axios.get(baseUrl + 'setting')\r\n\r\n        return res.data\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n\r\n\r\n    const locate = settings.isLoading === false && (\r\n        settings.data.data.map_location.map(item => (\r\n            [\r\n                Number(item.lat),\r\n                Number(item.long)\r\n            ]\r\n        ))\r\n    )\r\n\r\n\r\n    let [updatedPage, setUpdatedPage] = useState(true)\r\n\r\n\r\n\r\n\r\n    let { data, isLoading } = useQuery(['infoLocation'], async (key) => {\r\n\r\n        const res = axios.get(baseUrl + 'selectable?include=cities')\r\n\r\n        return res;\r\n\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n\r\n\r\n    let [id, setId] = useState(null)\r\n    let [name, setName] = useState()\r\n    let [phone, setPhone] = useState()\r\n    let [address, setAddress] = useState()\r\n    let [city_id, setCity] = useState(isLoading === false && (data.data.data.cities.data[0].name))\r\n    let [lati, setLati] = useState(40.34126114625568)\r\n    let [lang, setLang] = useState(48.83849702929688)\r\n\r\n\r\n\r\n    let params = {\r\n        name: name,\r\n        phone: phone,\r\n        address: address,\r\n        city_id: city_id,\r\n        lat: lati,\r\n        lang: lang,\r\n        id: id\r\n    }\r\n\r\n\r\n    // register\r\n    const mutationAdd = useMutation(up => axios.post(baseUrl + 'address/add', up))\r\n\r\n    const mutationUpdated = useMutation(update => axios.put(baseUrl + 'address', update), {\r\n        onSuccess: function (succ) {\r\n\r\n            if (succ.status===200)\r\n            {\r\n                $('.formItem input').val('')\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n\r\n    let addressApi = useQuery(['addressApi', mutationUpdated.data, mutationAdd.data], async (key) => {\r\n\r\n        const res = axios.get(baseUrl + 'address')\r\n\r\n        return res;\r\n\r\n    }, {\r\n        refetchOnWindowFocus: false,\r\n        cacheTime: localStorage.getItem('token') && localStorage.getItem('user') === null ? 0 : 5000\r\n    })\r\n\r\n\r\n    let [allOder, setOrder] = useRecoilState(order)\r\n\r\n    let orderValue = useRecoilValue(order)\r\n\r\n\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        $('.changeInfo').on('click', function () {\r\n\r\n            setOrder({\r\n                address_id: $(this).attr('data-id'),\r\n                payment_method: orderValue!==null ? orderValue.payment_method:null,\r\n                amount: JSON.parse(localStorage.getItem('total')) != null ? JSON.parse(localStorage.getItem('total')).reduce(reducer) : null,\r\n                is_exspress: null,\r\n                items: JSON.parse(localStorage.getItem('items'))\r\n            })\r\n\r\n\r\n            $('.changeInfo').show();\r\n            $('.changeInfo').find('input').prop('checked', false);\r\n            $('.changeInfo').next().css({\r\n                opacity: 0\r\n            })\r\n\r\n            $(this).find('input').prop('checked', true);\r\n\r\n            $(this).hide();\r\n\r\n            $(this).next().css({\r\n                opacity: 1\r\n            })\r\n\r\n        })\r\n\r\n\r\n        $.each($('.changeInfo'),function(index,item){\r\n\r\n            if(orderValue!==null)\r\n            {\r\n                if ($(item).attr('data-id')===orderValue.address_id)\r\n                {\r\n                    $(item).hide()\r\n                    $(item).next().css({\r\n                        opacity:1\r\n                    })\r\n                    \r\n                }\r\n            }\r\n            \r\n        })\r\n\r\n\r\n        $('.sendInfo').on('click',function(){\r\n\r\n            $('.openAddPopup').hide()\r\n\r\n            $('.openUpdatedPopup').hide()\r\n\r\n        })\r\n\r\n        $('.sendInfoMap').on('click', function () {\r\n\r\n            $('.infoPopup').css({\r\n                opacity: 1,\r\n                zIndex: 55555\r\n            })\r\n\r\n            $('.openMapPopup').hide();\r\n\r\n        })\r\n\r\n        $('.showPin').on('click', function () {\r\n\r\n            $('.openMapPopup').show();\r\n\r\n            $('.infoPopup').css({\r\n                opacity: 0,\r\n                zIndex: -1\r\n            })\r\n\r\n            $('.openMapPopup').css({\r\n                opacity: 1,\r\n                zIndex: 5555\r\n            })\r\n        })\r\n\r\n        $('.closeModalMap').on('click', function () {\r\n\r\n            $('.infoPopup').css({\r\n                opacity: 1,\r\n                zIndex: 55555\r\n            })\r\n\r\n            $('.openMapPopup').hide();\r\n\r\n        })\r\n\r\n\r\n    }, [addressApi.data])\r\n\r\n\r\n\r\n    // myMap\r\n\r\n    const [state, setState] = useState({\r\n        showingInfoWindow: false,\r\n        activeMarker: '',\r\n        zoomMap: 8,\r\n        selectedPlace: '',\r\n        center:\r\n        {\r\n            lat: Number(lati),\r\n            lng: Number(lang)\r\n        },\r\n        show: false,\r\n        positions: '',\r\n        langlat: null\r\n    });\r\n\r\n\r\n\r\n    const mapContainerStyle = {\r\n        height: '409px',\r\n        width: '100%',\r\n\r\n    }\r\n\r\n\r\n    // map style and checkking controls\r\n    const mapOptions = {\r\n        styles: mapStyle,\r\n        fullscreenControl: false,\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n        zoomControl: false,\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <main className='location locationCon loginLocation'>\r\n            <div className='rules__banner'>\r\n                <img src={require('../../images/rules.png').default} alt='' />\r\n                <Container>\r\n                    <h4 className='rules__title'>\r\n                        ONLİNE SİFARİŞ\r\n                    </h4>\r\n                </Container>\r\n            </div>\r\n            <div className='locationWrapper'>\r\n                <Container>\r\n                    <div className='order__breadCrumbs'>\r\n                        <span>\r\n                            SİFARİŞ\r\n                         </span>\r\n                        <span>\r\n                            SİFARİŞLƏRİM\r\n                        </span>\r\n                        <span className='activCrumbs'>\r\n                            ÜNVAN SEÇ\r\n                        </span>\r\n                    </div>\r\n                    <div className='info__content'>\r\n                        {/* map popup */}\r\n                        <div className='infoPopup openMapPopup'>\r\n                            <div className='info__WrapperModal'>\r\n                                <button className='closeModal closeModalMap' onClick={(event) => {\r\n                                    document.querySelector('.openMapPopup').style.display = 'none'\r\n                                }}>\r\n                                    x\r\n                            </button>\r\n                                <h4>Xəritə</h4>\r\n                                <LoadScript\r\n                                    googleMapsApiKey='AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw'>\r\n                                    <GoogleMap\r\n                                        id='mapCoordinate'\r\n                                        mapContainerStyle={mapContainerStyle}\r\n                                        zoom={state.zoomMap}\r\n                                        center={state.center}\r\n                                        options={mapOptions}\r\n                                    >\r\n                                        <Marker\r\n                                            draggable={true}\r\n                                            onDrag={(event) => {\r\n                                                setLang(event.latLng.lng())\r\n                                                setLati(event.latLng.lat())\r\n                                            }}\r\n                                            icon={{\r\n                                                url: require('../../images/pin.png').default,\r\n                                                // size: { width: 30, height: 30, }\r\n                                            }}\r\n\r\n                                            position={\r\n                                                {\r\n                                                    lat: Number(lati),\r\n                                                    lng: Number(lang)\r\n                                                }\r\n                                            }\r\n                                            animation={2}\r\n                                        />\r\n                                    </GoogleMap>\r\n                                </LoadScript>\r\n                                <div className='mapInp'>\r\n                                    <div>\r\n                                        <p>Lat</p>\r\n                                        <Input value={lati} onChange={(event) => {\r\n                                            setLati(event.target.value)\r\n                                        }} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <p>Lang</p>\r\n                                        <Input value={lang}\r\n                                            onChange={(event) => {\r\n                                                setLang(event.target.value)\r\n                                            }} />\r\n                                    </div>\r\n                                </div>\r\n                                <button className='sendInfoMap'>\r\n                                    Yadda Saxla\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='infoFlexFull'>\r\n                            <div className='infoPopup openUpdatedPopup'>\r\n                                <div className='info__WrapperModal'>\r\n                                    <button className='closeModal' onClick={(event) => {\r\n\r\n                                        document.querySelector('.openUpdatedPopup').style.display = 'none'\r\n\r\n                                    }}>\r\n                                        x\r\n                                    </button>\r\n                                    <h4>YENILE</h4>\r\n                                    <div className='formBox'>\r\n                                        <div className='formItem'>\r\n                                            <span>Ad:</span>\r\n                                            <Input type='text'\r\n                                                value={name}\r\n                                                onChange={(event) => {\r\n                                                    setName(event.target.value)\r\n                                                }} />\r\n                                        </div>\r\n                                        <div className='formItem'>\r\n                                            <span>Telefon:</span>\r\n                                            <Input type='phone'\r\n                                                value={phone}\r\n                                                onChange={(event) => {\r\n                                                    setPhone(event.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='formItem fromLocate'>\r\n                                            <span>Ünvan:</span>\r\n                                            <Input type='text'\r\n                                                value={address}\r\n                                                onChange={(event) => {\r\n                                                    setAddress(event.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='formItem'>\r\n                                            <span>Xəritədə göstər:</span>\r\n                                            <p className='showPin'>\r\n                                                <img src={require('../../images/newPin.png').default} alt='' />\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className='formItem'>\r\n                                            <span>Şəhər:</span>\r\n                                            <select\r\n                                                onChange={(event) => {\r\n                                                    setCity(event.target.value)\r\n\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    isLoading === false && data !== undefined && (\r\n\r\n                                                        data.data.data.length !== 0 && (\r\n                                                            data.data.data.cities.data.map(item => (\r\n                                                                <option key={item.id}\r\n                                                                >\r\n                                                                    {\r\n                                                                        item.name\r\n                                                                    }\r\n                                                                </option>\r\n                                                            ))\r\n                                                        )\r\n\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className='sendInfo'\r\n                                        onClick={() => {\r\n                                            setUpdatedPage(true)\r\n                                            mutationUpdated.mutate(params)\r\n                                        }}\r\n                                    >\r\n                                        ƏLAVƏ ET\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* add */}\r\n                            <div className='infoPopup openAddPopup'>\r\n                                <div className='info__WrapperModal'>\r\n                                    <button className='closeModal' onClick={(event) => {\r\n\r\n                                        document.querySelector('.openAddPopup').style.display = 'none'\r\n\r\n                                    }}>\r\n                                        x\r\n                            </button>\r\n                                    <h4>YENILE</h4>\r\n                                    <div className='formBox'>\r\n                                        <div className='formItem'>\r\n                                            <span>Ad:</span>\r\n                                            <Input type='text'\r\n                                                onChange={(event) => {\r\n                                                    setName(event.target.value)\r\n                                                }} />\r\n                                        </div>\r\n                                        <div className='formItem'>\r\n                                            <span>Telefon:</span>\r\n                                            <Input type='phone'\r\n                                                onChange={(event) => {\r\n                                                    setPhone(event.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='formItem fromLocate'>\r\n                                            <span>Ünvan:</span>\r\n                                            <Input type='text'\r\n                                                onChange={(event) => {\r\n                                                    setAddress(event.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='formItem'>\r\n                                            <span>Xəritədə göstər:</span>\r\n                                            <p className='showPin'>\r\n                                                <img src={require('../../images/newPin.png').default} alt='' />\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className='formItem'>\r\n                                            <span>Şəhər:</span>\r\n                                            <select\r\n                                                onChange={(event) => {\r\n                                                    setCity(event.target.value)\r\n\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    isLoading === false && data !== undefined && (\r\n\r\n                                                        data.data.data.length !== 0 && (\r\n                                                            data.data.data.cities.data.map(item => (\r\n                                                                <option key={item.id}\r\n                                                                >\r\n                                                                    {\r\n                                                                        item.name\r\n                                                                    }\r\n                                                                </option>\r\n                                                            ))\r\n                                                        )\r\n\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className='sendInfo'\r\n                                        onClick={() => {\r\n                                            setUpdatedPage(true)\r\n                                            mutationAdd.mutate(params)\r\n                                        }}\r\n                                    >\r\n                                        ƏLAVƏ ET\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='formBox'>\r\n                                {\r\n                                    addressApi.isLoading === false && addressApi.data !== undefined && addressApi.data.data.data.length !== 0 && (\r\n                                        addressApi.data.data.data.map((item,index) => (\r\n                                            <div className='location__content' key={item.id}>\r\n                                                <div className='location__contentLeft'>\r\n                                                    <p>\r\n                                                        Ev ünvanım:\r\n                                                        <span>\r\n                                                            {\r\n                                                                item.address\r\n                                                            }\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p className='editIcon' data-id={item.id} data-index={index} onClick={(event) => {\r\n                                                        document.querySelector('.openUpdatedPopup').style.display = 'block';\r\n                                                        setId(Number(event.target.getAttribute('data-id')))\r\n                                                        setName(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].name : '')\r\n                                                        setPhone(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].phone : '')\r\n                                                        setAddress(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].address : '')\r\n                                                        setCity(isLoading === false ? data.data.data.cities.data[1].name : '')\r\n                                                        setLang(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].lang : '')\r\n                                                        setLati(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].lat : '')\r\n\r\n                                                        console.log(lati)\r\n                                                    }}>\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div className='location__contentRight'>\r\n                                                    <span className='changeInfo' data-id={item.id}>\r\n                                                        SEÇ\r\n                                                        <input name='address_id' type='radio' />\r\n                                                    </span>\r\n                                                    <i style={{ opacity: 0 }} className='checkedI'>\r\n                                                        <FontAwesomeIcon icon={faCheck} />\r\n                                                    </i>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='order__result'>\r\n                        <div className='login__sendBtn infoSend'>\r\n                            <button\r\n                                onClick={() => {\r\n                                    document.querySelector('.openAddPopup').style.display = 'block';\r\n                                    setUpdatedPage(false)\r\n\r\n                                }}\r\n                            >\r\n                                ÜNVAN ƏLAVƏ ET\r\n                                </button>\r\n                        </div>\r\n\r\n                        <div className='btnBoxs'>\r\n                            <NavLink to={'/ordercomplete'}>\r\n                                <button className='success'>\r\n                                    Prev\r\n                                </button>\r\n                            </NavLink>\r\n                            <NavLink to={orderValue !== null ? (orderValue.address_id === null ? '/location' : '/payment') :'/location'}>\r\n                                <button className='success' onClick={()=>{\r\n                                    if (orderValue === null) {\r\n                                        swal({\r\n                                            title: \"Seçim etməmisiniz!\",\r\n                                            icon: \"error\",\r\n                                            button: \"Bağla\",\r\n                                        });\r\n                                    }\r\n                                }}>\r\n                                    Next\r\n                                    \r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n            {\r\n                settings.isLoading === false && (\r\n                    <Map locations={locate} />\r\n                )\r\n            }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Location;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginInformation\\loginInformation.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginOrder\\loginOrder.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginLocation\\loginLocation.js",["193"],"import React, { useLayoutEffect, useState } from 'react';\r\n\r\n// css\r\n\r\nimport './css/_loginLocation.scss';\r\n\r\n\r\n// tools\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// reactstrap\r\nimport { Container, Input } from 'reactstrap';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n\r\n// react query\r\nimport { useQuery, useMutation } from 'react-query';\r\n\r\n\r\n// api\r\nimport { baseUrl } from '../../api/api';\r\n\r\n\r\n// jquery\r\nimport $ from 'jquery';\r\n\r\n// map\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\n// mapStyle\r\nimport mapStyle from '../map/mapStyle';\r\n\r\n\r\n\r\nconst LoginLocation = () => {\r\n\r\n\r\n    let { data, isLoading } = useQuery(['infoLocation'], async (key) => {\r\n\r\n        const res = axios.get(baseUrl + 'selectable?include=cities')\r\n\r\n        return res;\r\n\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // register\r\n    const mutationAdd = useMutation(add => axios.post(baseUrl + 'address/add', add))\r\n\r\n    const mutationUpdated = useMutation(update => axios.put(baseUrl + 'address', update), {\r\n        onSuccess: function () {\r\n\r\n            $('.formItem input').val('')\r\n        }\r\n    })\r\n\r\n\r\n\r\n    // address\r\n\r\n\r\n    let addressApi = useQuery(['addressApi', mutationAdd.data, mutationUpdated.data], async (key) => {\r\n\r\n        const res = axios.get(baseUrl + 'address')\r\n\r\n        return res;\r\n\r\n\r\n    }, {\r\n        refetchOnWindowFocus: false,\r\n        cacheTime: localStorage.getItem('token') && localStorage.getItem('user') === null ? 0 : 5000\r\n    })\r\n\r\n    let [id, setId] = useState(null)\r\n    let [name, setName] = useState()\r\n    let [phone, setPhone] = useState()\r\n    let [address, setAddress] = useState()\r\n    let [lati, setLati] = useState(40.34126114625568)\r\n    let [lang, setLang] = useState(48.83849702929688)\r\n    let [city_id, setCity] = useState()\r\n\r\n\r\n\r\n    let params = {\r\n        name: name,\r\n        phone: phone,\r\n        address: address,\r\n        city_id: city_id,\r\n        id: id,\r\n        lat: lati,\r\n        lang: lang\r\n\r\n    }\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        $('.sendInfo').on('click', function () {\r\n\r\n            $('.infoPopup').hide()\r\n\r\n        })\r\n\r\n\r\n        $('.sendInfoMap').on('click', function () {\r\n\r\n            $('.infoPopup').css({\r\n                opacity: 1,\r\n                zIndex: 55555\r\n            })\r\n\r\n            $('.openMapPopup').hide();\r\n\r\n        })\r\n\r\n        $('.showPin').on('click', function () {\r\n\r\n            $('.openMapPopup').show();\r\n\r\n            $('.infoPopup').css({\r\n                opacity: 0,\r\n                zIndex: -1\r\n            })\r\n\r\n            $('.openMapPopup').css({\r\n                opacity: 1,\r\n                zIndex: 5555\r\n            })\r\n        })\r\n\r\n        $('.closeModalMap').on('click', function () {\r\n\r\n            $('.infoPopup').css({\r\n                opacity: 1,\r\n                zIndex: 55555\r\n            })\r\n\r\n            $('.openMapPopup').hide();\r\n\r\n        })\r\n\r\n    }, [addressApi.data])\r\n\r\n\r\n    // myMap\r\n\r\n    const [state, setState] = useState({\r\n        showingInfoWindow: false,\r\n        activeMarker: '',\r\n        zoomMap: 8,\r\n        selectedPlace: '',\r\n        center:\r\n        {\r\n            lat: Number(lati),\r\n            lng: Number(lang)\r\n        },\r\n        show: false,\r\n        positions: '',\r\n        langlat: null\r\n    });\r\n\r\n\r\n\r\n    const mapContainerStyle = {\r\n        height: '409px',\r\n        width: '100%',\r\n\r\n    }\r\n\r\n\r\n    // map style and checkking controls\r\n    const mapOptions = {\r\n        styles: mapStyle,\r\n        fullscreenControl: false,\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n        zoomControl: false,\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <main className='info loginLocation'>\r\n            <div className='rules__banner'>\r\n                <img src={require('../../images/rules.png').default} alt='' />\r\n                <Container>\r\n                    <h4 className='rules__title'>\r\n                        ONLİNE SİFARİŞ\r\n                    </h4>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <div className='info__top'>\r\n                    <div className='info__topItem'>\r\n                        <NavLink to={'/loginorder'}>\r\n                            Sifarişlərim\r\n                        </NavLink>\r\n                        <NavLink to={'/loginlocation'} className='activeMenu'>\r\n                            Ünvanlarım\r\n                        </NavLink>\r\n                        <NavLink to={'/logininformation'}>\r\n                            Məlumatlarım\r\n                        </NavLink>\r\n                        <NavLink to={'/passwordupdate'}>\r\n                            Şifrəni yenilə\r\n                        </NavLink>\r\n                        <NavLink to={'/index'} onClick={() => {\r\n                            localStorage.removeItem('token')\r\n                            localStorage.removeItem('user')\r\n                        }}>\r\n                            Çıxış\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className='info__content'>\r\n                    {/* map popup */}\r\n                    <div className='infoPopup openMapPopup'>\r\n                        <div className='info__WrapperModal'>\r\n                            <button className='closeModal closeModalMap' onClick={(event) => {\r\n                                document.querySelector('.openMapPopup').style.display = 'none'\r\n                            }}>\r\n                                x\r\n                            </button>\r\n                            <h4>Xəritə</h4>\r\n                            <LoadScript\r\n                                googleMapsApiKey='AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw'>\r\n                                <GoogleMap\r\n                                    id='mapCoordinate'\r\n                                    mapContainerStyle={mapContainerStyle}\r\n                                    zoom={state.zoomMap}\r\n                                    center={state.center}\r\n                                    options={mapOptions}\r\n                                >\r\n                                    <Marker\r\n                                        draggable={true}\r\n                                        onDrag={(event) => {\r\n                                            setLang(event.latLng.lng())\r\n                                            setLati(event.latLng.lat())\r\n                                        }}\r\n                                        icon={{\r\n                                            url: require('../../images/pin.png').default,\r\n                                            // size: { width: 30, height: 30, }\r\n                                        }}\r\n\r\n                                        position={\r\n                                            {\r\n                                                lat: Number(lati),\r\n                                                lng: Number(lang)\r\n                                            }\r\n                                        }\r\n                                        animation={2}\r\n                                    />\r\n                                </GoogleMap>\r\n                            </LoadScript>\r\n                            <div className='mapInp'>\r\n                                <div>\r\n                                    <p>Lat</p>\r\n                                    <Input value={lati} onChange={(event) => {\r\n                                        setLati(event.target.value)\r\n                                    }} />\r\n                                </div>\r\n                                <div>\r\n                                    <p>Lang</p>\r\n                                    <Input value={lang}\r\n                                        onChange={(event) => {\r\n                                            setLang(event.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <button className='sendInfoMap'>\r\n                                Yadda Saxla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {/* mupdated popup */}\r\n                    <div className='infoPopup openUpdatedPopup'>\r\n                        <div className='info__WrapperModal'>\r\n                            <button className='closeModal' onClick={(event) => {\r\n                                document.querySelector('.openUpdatedPopup').style.display = 'none'\r\n                            }}>\r\n                                x\r\n                            </button>\r\n                            <h4>YENILE</h4>\r\n                            <div className='formBox'>\r\n                                <div className='formItem'>\r\n                                    <span>Ad:</span>\r\n                                    <Input type='text'\r\n                                        value={name}\r\n                                        onChange={(event) => {\r\n                                            setName(event.target.value)\r\n                                        }} />\r\n                                </div>\r\n                                <div className='formItem'>\r\n                                    <span>Telefon:</span>\r\n                                    <Input type='phone'\r\n                                        value={phone}\r\n                                        onChange={(event) => {\r\n                                            setPhone(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='formItem fromLocate'>\r\n                                    <span>Ünvan:</span>\r\n                                    <Input type='text'\r\n                                        value={address}\r\n                                        onChange={(event) => {\r\n                                            setAddress(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='formItem'>\r\n                                    <span>Xəritədə göstər:</span>\r\n                                    <p className='showPin'>\r\n                                        <img src={require('../../images/newPin.png').default} alt='' />\r\n                                    </p>\r\n                                </div>\r\n                                <div className='formItem'>\r\n                                    <span>Şəhər:</span>\r\n                                    <select\r\n                                        onChange={(event) => {\r\n                                            setCity(event.target.value)\r\n\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            isLoading === false && data !== undefined && (\r\n\r\n                                                data.data.data.length !== 0 && (\r\n                                                    data.data.data.cities.data.map(item => (\r\n                                                        <option key={item.id}\r\n                                                        >\r\n                                                            {\r\n                                                                item.name\r\n                                                            }\r\n                                                        </option>\r\n                                                    ))\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <button className='sendInfo'\r\n                                onClick={(event) => {\r\n                                    mutationUpdated.mutate(params)\r\n                                }}\r\n                            >\r\n                                ƏLAVƏ ET\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* add */}\r\n                    <div className='infoPopup openAddPopup'>\r\n                        <div className='info__WrapperModal'>\r\n                            <button className='closeModal' onClick={(event) => {\r\n\r\n                                document.querySelector('.openAddPopup').style.display = 'none'\r\n\r\n                            }}>\r\n                                x\r\n                            </button>\r\n                            <h4>YENILE</h4>\r\n                            <div className='formBox'>\r\n                                <div className='formItem'>\r\n                                    <span>Ad:</span>\r\n                                    <Input type='text'\r\n                                        onChange={(event) => {\r\n                                            setName(event.target.value)\r\n                                        }} />\r\n                                </div>\r\n                                <div className='formItem'>\r\n                                    <span>Telefon:</span>\r\n                                    <Input type='phone'\r\n                                        onChange={(event) => {\r\n                                            setPhone(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='formItem fromLocate'>\r\n                                    <span>Ünvan:</span>\r\n                                    <Input type='text'\r\n                                        onChange={(event) => {\r\n                                            setAddress(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='formItem'>\r\n                                    <span>Xəritədə göstər:</span>\r\n                                    <p className='showPin'>\r\n                                        <img src={require('../../images/newPin.png').default} alt='' />\r\n                                    </p>\r\n                                </div>\r\n                                <div className='formItem'>\r\n                                    <span>Şəhər:</span>\r\n                                    <select\r\n                                        onChange={(event) => {\r\n                                            setCity(event.target.value)\r\n\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            isLoading === false && data !== undefined && (\r\n\r\n                                                data.data.data.length !== 0 && (\r\n                                                    data.data.data.cities.data.map(item => (\r\n                                                        <option key={item.id}\r\n                                                        >\r\n                                                            {\r\n                                                                item.name\r\n                                                            }\r\n                                                        </option>\r\n                                                    ))\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <button className='sendInfo'\r\n                                onClick={() => {\r\n                                    mutationAdd.mutate(params)\r\n                                }}\r\n                            >\r\n                                ƏLAVƏ ET\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='formBox'>\r\n                        {\r\n                            addressApi.isLoading === false && addressApi.data !== undefined && addressApi.data.data.data.length !== 0 && (\r\n                                addressApi.data.data.data.map((item, index) => (\r\n                                    <div className='location__content' key={item.id}>\r\n                                        <div className='location__contentLeft'>\r\n                                            <p>\r\n                                                Ev ünvanım:\r\n                                                <span>\r\n                                                    {\r\n                                                        item.address\r\n                                                    }\r\n                                                </span>\r\n                                            </p>\r\n                                            {/* <p>\r\n                                                <img src={require('../../images/newPin.png').default} alt='' />\r\n                                            </p> */}\r\n                                        </div>\r\n                                        <div className='location__contentRight'>\r\n                                            <span className='changeInfo' data-id={item.id} data-index={index} onClick={(event) => {\r\n                                                document.querySelector('.openUpdatedPopup').style.display = 'block';\r\n                                                setId(Number(event.target.getAttribute('data-id')))\r\n                                                setName(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].name : '')\r\n                                                setPhone(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].phone : '')\r\n                                                setAddress(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].address : '')\r\n                                                setCity(isLoading === false ? data.data.data.cities.data[1].name : '')\r\n                                                setLang(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].lang : '')\r\n                                                setLati(addressApi.isLoading === false ? addressApi.data.data.data[event.target.getAttribute('data-index')].lat : '')\r\n\r\n                                            }}>\r\n                                                DÜZƏLİŞ ET\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <div className='login__sendBtn infoSend'>\r\n                        <button\r\n                            onClick={() => {\r\n                                document.querySelector('.openAddPopup').style.display = 'block';\r\n                                setCity(isLoading === false ? data.data.data.cities.data[0].name : '')\r\n                            }}\r\n                        >\r\n                            ÜNVAN ƏLAVƏ ET\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default LoginLocation;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\payment\\payment.js",["194","195"],"import React, { useLayoutEffect } from 'react';\r\n\r\n// css\r\nimport \"./css/_payment.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container } from 'reactstrap';\r\n\r\n// react router dom\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// map\r\n\r\nimport Map from '../map/map';\r\n\r\n// react router dom\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n// query\r\nimport { useQuery } from 'react-query';\r\n\r\n// baseUrl\r\nimport { baseUrl } from '../../api/api';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n\r\n//  jquery\r\nimport $ from 'jquery';\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\n\r\n// atoms\r\nimport { order } from '../../atoms/atoms';\r\n\r\n// fontawesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// helper\r\nimport { decimalAdjust } from '../../helper/helper';\r\n\r\n// sweet alert\r\nimport swal from 'sweetalert';\r\n\r\nconst Payment = () => {\r\n\r\n\r\n    // settings\r\n    let settings = useQuery(['settings', ''], async () => {\r\n\r\n        const res = await axios.get(baseUrl + 'setting')\r\n\r\n        return res.data\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n\r\n\r\n    const locate = settings.isLoading === false && (\r\n        settings.data.data.map_location.map(item => (\r\n            [\r\n                Number(item.lat),\r\n                Number(item.long)\r\n            ]\r\n        ))\r\n    )\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const round10 = (value, exp) => decimalAdjust('round', value, exp);\r\n\r\n    const reducer = (accumulator, currentValue) => round10(accumulator + currentValue, -1);\r\n\r\n    if (JSON.parse(localStorage.getItem('items')) === null) {\r\n        history.push({\r\n            pathname: '/order'\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    let [allOder, setOrder] = useRecoilState(order)\r\n\r\n    let orderValue = useRecoilValue(order)\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        if (orderValue === null) {\r\n            history.push({\r\n                pathname: '/location'\r\n            })\r\n        }\r\n\r\n\r\n        $('.changeInfo').on('click', function () {\r\n\r\n            setOrder({\r\n                address_id: orderValue.address_id,\r\n                payment_method: $(this).attr('data-id'),\r\n                amount: JSON.parse(localStorage.getItem('total')) != null ? JSON.parse(localStorage.getItem('total')).reduce(reducer) : null,\r\n                is_express: 1,\r\n                items: JSON.parse(localStorage.getItem('items'))\r\n            })\r\n\r\n\r\n\r\n            $('.changeInfo').show();\r\n            $('.changeInfo').find('input').prop('checked', false);\r\n            $('.changeInfo').next().css({\r\n                opacity: 0\r\n            })\r\n\r\n            $(this).find('input').prop('checked', true);\r\n\r\n            $(this).hide();\r\n\r\n            $(this).next().css({\r\n                opacity: 1\r\n            })\r\n\r\n        })\r\n\r\n\r\n        $.each($('.changeInfo'), function (index, item) {\r\n\r\n            if (orderValue !== null) {\r\n                if ($(item).attr('data-id') === orderValue.payment_method) {\r\n                    $(item).hide()\r\n                    $(item).next().css({\r\n                        opacity: 1\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    let sendOder = async (params) => {\r\n\r\n        const res = axios.post(baseUrl + 'order/create', params);\r\n\r\n\r\n        return res.data;\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <main className='location payment'>\r\n            <div className='rules__banner'>\r\n                <img src={require('../../images/rules.png').default} alt='' />\r\n                <Container>\r\n                    <h4 className='rules__title'>\r\n                        ONLİNE SİFARİŞ\r\n                    </h4>\r\n                </Container>\r\n            </div>\r\n            <div className='locationWrapper'>\r\n                <div className='order__breadCrumbs'>\r\n                    <span>\r\n                        SİFARİŞ\r\n                    </span>\r\n                    <span>\r\n                        SİFARİŞLƏRİM\r\n                    </span>\r\n                    <span>\r\n                        ÜNVAN SEÇ\r\n                    </span>\r\n                    <span className='activCrumbs'>\r\n                        ÖDƏNİŞ ET\r\n                    </span>\r\n                </div>\r\n                <Container>\r\n                    <div className='payment__content'>\r\n\r\n                        <div className='location__content'>\r\n                            <div className='location__contentLeft'>\r\n                                <p>\r\n                                    Qapida odenis\r\n                                </p>\r\n                            </div>\r\n                            <div className='location__contentRight'>\r\n                                <span className='changeInfo' data-id={1}>\r\n                                    SEÇ\r\n                                <input name='address_id' type='radio' />\r\n                                </span>\r\n                                <i style={{ opacity: 0 }} className='checkedI'>\r\n                                    <FontAwesomeIcon icon={faCheck} />\r\n                                </i>\r\n                            </div>\r\n                        </div>\r\n                        <div className='location__content'>\r\n                            <div className='location__contentLeft'>\r\n                                <p>\r\n                                    Online Odenis\r\n                                </p>\r\n                            </div>\r\n                            <div className='location__contentRight'>\r\n                                <span className='changeInfo' data-id={2}>\r\n                                    SEÇ\r\n                                <input name='payment_id' type='radio' />\r\n                                </span>\r\n                                <i style={{ opacity: 0 }} className='checkedI'>\r\n                                    <FontAwesomeIcon icon={faCheck} />\r\n                                </i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='order__result'>\r\n                        <p>\r\n                            ÜMUMİ MƏBLƏĞ:\r\n                         <span className='res'>\r\n                                {\r\n                                    JSON.parse(localStorage.getItem('total')) !== null && (\r\n\r\n                                        JSON.parse(localStorage.getItem('total')).reduce(reducer) + ' AZN'\r\n                                    )\r\n                                }\r\n                            </span>\r\n                        </p>\r\n                        <div className='btnBoxs' style={{ marginTop: 15 }}>\r\n                            <NavLink to={'/location'}>\r\n                                <button className='success'>\r\n                                    Prev\r\n                            </button>\r\n                            </NavLink>\r\n                            <NavLink to={orderValue !== null ? (orderValue.payment_method !== null ? '/loginorder' : '/payment') : '/payment'}\r\n                                onClick={() => {\r\n                                    sendOder(orderValue)\r\n                                }}\r\n                            >\r\n                                <button className='success' onClick={() => {\r\n                                    if (orderValue.payment_method === null) {\r\n                                        swal({\r\n                                            title: \"Seçim etməmisiniz!\",\r\n                                            icon: \"error\",\r\n                                            button: \"Bağla\",\r\n                                        });\r\n                                    }\r\n                                }}>\r\n                                    Next\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n            {\r\n                settings.isLoading === false && (\r\n                    <Map locations={locate} />\r\n                )\r\n            }\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\delivery\\delivery.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\static\\static.js",["196"],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\openMobMenu.js",["197"],"import React, { useLayoutEffect } from 'react';\r\n\r\nimport $ from 'jquery';\r\n\r\nconst OpenMobMenu = () => {\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        document.querySelector('.openMob').onclick = function () {\r\n\r\n            if (document.querySelector('.headerMobWrap').classList.contains('openMenu') === false) {\r\n                document.querySelector('.headerMobWrap').classList.add('openMenu')\r\n            } else {\r\n                document.querySelector('.headerMobWrap').classList.remove('openMenu')\r\n            }\r\n\r\n        }\r\n\r\n\r\n        document.querySelector('.closeMob').onclick = function () {\r\n\r\n            document.querySelector('.headerMobWrap').classList.remove('openMenu')\r\n\r\n        }\r\n\r\n\r\n        document.querySelectorAll('.headerMobileMenu a').forEach(element => {\r\n\r\n            element.onclick = function () {\r\n\r\n                document.querySelector('.headerMobWrap').classList.remove('openMenu')\r\n            }\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OpenMobMenu;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\queries\\queries.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\api.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\include.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\newsSelf.js",["198"],"import React, { useLayoutEffect, useState } from 'react';\r\n\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from 'reactstrap';\r\n\r\n// react router dom\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\n// queries\r\nimport { blogs } from '../../queries/queries';\r\n\r\n// react query\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../api/api';\r\n\r\nconst NewsSelf = () => {\r\n\r\n\r\n\r\n    let { pathname } = useLocation();\r\n\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        setPage(1)\r\n        setBlog([])\r\n\r\n    }, [pathname])\r\n\r\n\r\n    let [page, setPage] = useState(1)\r\n\r\n    let [blog, setBlog] = useState([])\r\n\r\n\r\n    let { data, isLoading } = useQuery(['blog', pathname, page], async () => {\r\n\r\n        const res = await axios.get(baseUrl + 'blog', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                page: page,\r\n                number: 3\r\n            }\r\n        })\r\n\r\n\r\n        return res.data\r\n\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n    window.onscroll = function () {\r\n\r\n        if (isLoading === false) {\r\n\r\n            if (data.data.length !== 0) {\r\n                setPage(page = page + 1)\r\n                if (isLoading === false) {\r\n                    if (blog.includes(...data.data) === false) {\r\n                        setBlog(oldArray => [...oldArray, ...data.data])\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <main className='newsSelf'>\r\n\r\n            <div className='home__newsContent'>\r\n                <Container>\r\n                    <Row>\r\n                        {\r\n                            isLoading === false && blog.length === 0 ?\r\n                                data.data.map((item, index) => (\r\n                                    <Col lg='4' className='mb-4' key={index}>\r\n                                        <NavLink to={'/blogs/' + item.slug}>\r\n                                            <div className='home__newsInfo'>\r\n                                                <img src={item.cover.cover} alt='' />\r\n                                                <div className='layout'>\r\n                                                    <img src={require('../../images/layouts.png').default} alt='' />\r\n                                                </div>\r\n                                                <div className='text'>\r\n                                                    <span>15 DEKABR</span>\r\n                                                    <h4>\r\n                                                        {\r\n                                                            item.title\r\n                                                        }\r\n                                                    </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        </NavLink>\r\n                                    </Col>\r\n                                ))\r\n                                :\r\n                                blog.map((item, index) => (\r\n                                    <Col lg='4' className='mb-4' key={index}>\r\n                                        <NavLink to={'/blogs/' + item.slug}>\r\n                                            <div className='home__newsInfo' style={{ marginTop: 0 }}>\r\n                                                <img src={item.cover.cover} alt='' />\r\n                                                <div className='layout'>\r\n                                                    <img src={require('../../images/layouts.png').default} alt='' />\r\n                                                </div>\r\n                                                <div className='text'>\r\n                                                    <span>15 DEKABR</span>\r\n                                                    <h4>\r\n                                                        {\r\n                                                            item.title\r\n                                                        }\r\n                                                    </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        </NavLink>\r\n                                    </Col>\r\n                                ))\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default NewsSelf;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\resize.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\helper\\helper.js",["199"],"\r\nimport renderHTML from \"react-render-html\"\r\n\r\n// moment\r\nimport * as moment from 'moment';\r\nimport 'moment/locale/az';\r\n\r\n\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const checkType = (data) => {\r\n\r\n\r\n\r\n    // endResult.push(data.replace(myRegex, `<img src=${item} />`))\r\n\r\n    let myRegex = /<img.*?src=\"(.*?)\"[^>]+>/g;\r\n\r\n\r\n    let result = data.search(myRegex)\r\n\r\n\r\n    if (result > -1) {\r\n\r\n        let myData = data.replaceAll('/storage/', 'http://apiecoline.gocreative.az/storage/')\r\n\r\n        return renderHTML(myData)\r\n    } else {\r\n        return renderHTML(data)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function decimalAdjust(type, value, exp) {\r\n    if (typeof exp === 'undefined' || +exp === 0) {\r\n        return Math[type](value);\r\n    }\r\n\r\n    value = +value;\r\n    exp = +exp;\r\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\r\n        return NaN;\r\n    }\r\n\r\n\r\n    value = value.toString().split('e');\r\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\r\n\r\n\r\n    value = value.toString().split('e');\r\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\r\n}\r\n\r\n\r\nlet date = moment();\r\n\r\nlet month = date.format('MMMM');\r\n\r\nlet year = date.format('YYYY');\r\n\r\n\r\n\r\nexport function createDate(date) {\r\n\r\n    let day = date.split(' ')[0].split('-')[2];\r\n\r\n    let newDate = (() => {\r\n        if (day.split('')[0] === '0') {\r\n            return day.split('')[1]\r\n        } else {\r\n            return day\r\n        }\r\n    })();\r\n\r\n    return {\r\n        newDate,\r\n        month,\r\n        year\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function capitalize(word) {\r\n    if (typeof word !== 'string') return '';\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n}\r\n\r\n\r\n\r\nexport const checkedUrl = (type) => {\r\n\r\n    if (type.type === 'url') {\r\n        return type.url\r\n    }\r\n    else if (type.type === 'static-page') {\r\n        return `/${type.reference}`\r\n    } else {\r\n        return ''\r\n    }\r\n\r\n\r\n}\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\atoms\\atoms.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderComplete.js",["200","201","202"],"import React, { useLayoutEffect, useRef, useState } from 'react';\r\n\r\n\r\n\r\n// rectstrap\r\nimport { Col, Container, Row, Input } from 'reactstrap';\r\n\r\n// map\r\nimport Map from '../map/map';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n\r\n// recoil\r\nimport {\r\n    useRecoilState,\r\n} from 'recoil';\r\n\r\n\r\n// atoms\r\nimport { basket, order } from '../../atoms/atoms';\r\n\r\n\r\n// query\r\nimport { useQuery, useMutation } from 'react-query';\r\n\r\n// baseUrl\r\nimport { baseUrl, loginApi } from '../../api/api';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// helper\r\nimport { decimalAdjust } from '../../helper/helper';\r\n\r\n\r\nconst OrderComplete = () => {\r\n\r\n\r\n\r\n    // settings\r\n    let settings = useQuery(['settings', ''], async () => {\r\n\r\n        const res = await axios.get(baseUrl + 'setting')\r\n\r\n        return res.data\r\n    }, {\r\n        refetchOnWindowFocus: false\r\n    })\r\n\r\n\r\n\r\n\r\n    const locate = settings.isLoading === false && (\r\n        settings.data.data.map_location.map(item => (\r\n            [\r\n                Number(item.lat),\r\n                Number(item.long)\r\n            ]\r\n        ))\r\n    )\r\n\r\n\r\n    let [product, setProduct] = useState([])\r\n\r\n    let [myBasket, setMyBasket] = useRecoilState(basket);\r\n\r\n    let [allOder, setOrder] = useRecoilState(order)\r\n\r\n\r\n    let [total] = useState([])\r\n\r\n\r\n    // determinet  basket value\r\n\r\n    let history = useHistory()\r\n\r\n\r\n\r\n\r\n    if (JSON.parse(localStorage.getItem('items')) !== null) {\r\n        product = JSON.parse(localStorage.getItem('items'));\r\n        total = JSON.parse(localStorage.getItem('total'));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function sendMinus(value, event) {\r\n\r\n        const endRes = product.filter(id => id.id === value.id)\r\n\r\n\r\n        if (endRes[0] !== undefined) {\r\n            if (endRes[0].count > 0) {\r\n                endRes[0].count--\r\n                localStorage.setItem('items', JSON.stringify(product.filter(count => count.count > 0)))\r\n                event.target.nextElementSibling.nextElementSibling.style.display = 'block'\r\n                event.target.nextElementSibling.nextElementSibling.textContent = endRes[0].count\r\n\r\n                setMyBasket(JSON.parse(localStorage.getItem('items')))\r\n\r\n\r\n                const index = total.indexOf(Number(value.price));\r\n                if (index > -1) {\r\n                    total.splice(index, 1);\r\n                    window.localStorage.setItem('total', JSON.stringify(total))\r\n\r\n                    setOrder({\r\n                        address_id: null,\r\n                        payment_method: null,\r\n                        amount: total.reduce(reducer),\r\n                        is_exspress: null,\r\n                        items: JSON.parse(localStorage.getItem('items'))\r\n                    })\r\n\r\n                }\r\n\r\n                event.target.parentNode.parentNode.children[2].children[1].textContent = endRes[0].count * Number(endRes[0].price)\r\n            }\r\n        }\r\n    }\r\n\r\n    function sendPlus(value, event) {\r\n        const res = product.some(id => id.id === value.id)\r\n\r\n\r\n        if (res === false) {\r\n\r\n            product.push(value)\r\n\r\n            const endFinish = product.filter(id => id.id === value.id)\r\n\r\n            localStorage.setItem('items', JSON.stringify(product))\r\n            setMyBasket(JSON.parse(localStorage.getItem('items')))\r\n\r\n            if (endFinish !== 0) {\r\n                event.target.nextElementSibling.style.display = 'block'\r\n                event.target.nextElementSibling.textContent = endFinish[0].count\r\n            }\r\n\r\n        } else {\r\n            const endRes = product.filter(id => id.id === value.id)\r\n            endRes[0].count++\r\n            localStorage.setItem('items', JSON.stringify(product))\r\n            setMyBasket(JSON.parse(localStorage.getItem('items')))\r\n            event.target.parentNode.parentNode.children[2].children[1].textContent = endRes[0].count * Number(endRes[0].price)\r\n\r\n            if (endRes !== 0) {\r\n                event.target.nextElementSibling.style.display = 'block'\r\n                event.target.nextElementSibling.textContent = endRes[0].count\r\n            }\r\n        }\r\n\r\n        total.push(Number(value.price))\r\n        window.localStorage.setItem('total', JSON.stringify(total))\r\n\r\n        setOrder({\r\n            address_id: null,\r\n            payment_method: null,\r\n            amount: total.reduce(reducer),\r\n            is_exspress: null,\r\n            items: JSON.parse(localStorage.getItem('items'))\r\n        })\r\n\r\n    }\r\n\r\n    const round10 = (value, exp) => decimalAdjust('round', value, exp);\r\n\r\n    const reducer = (accumulator, currentValue) => round10(accumulator + currentValue, -1);\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        if (total.length === 0) {\r\n            history.push({\r\n                pathname: '/order'\r\n            })\r\n        }\r\n    })\r\n\r\n\r\n\r\n    // checked token\r\n\r\n\r\n    let loginPopup = useRef()\r\n\r\n\r\n    function checkedToken() {\r\n\r\n        if (localStorage.getItem('token') !== null && localStorage.getItem('user') !== null) {\r\n            return '/location'\r\n        } else {\r\n\r\n            return '/ordercomplete'\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function nextPageButton() {\r\n\r\n        if (loginPopup.current !== undefined) {\r\n            loginPopup.current.style.display = 'block'\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    let [email, setEmail] = useState();\r\n    let [password, setPassword] = useState();\r\n\r\n\r\n    let params = {\r\n        email: email,\r\n        password: password\r\n    }\r\n\r\n\r\n    // register\r\n    const mutation = useMutation(regi => axios.post(loginApi, params),\r\n        {\r\n            onSuccess: (login) => {\r\n                window.localStorage.setItem('user', JSON.stringify(login.data.user));\r\n                window.localStorage.setItem('token', JSON.stringify(login.data.token));\r\n\r\n                if (login.status === 200) {\r\n\r\n                    history.push({\r\n                        pathname: '/ordercomplete'\r\n                    })\r\n\r\n                    document.querySelector('.openUpdatedPopup').style.display = 'none'\r\n                }\r\n            },\r\n            onError: (error) => {\r\n                history.push({\r\n                    pathname: '/ordercomplete'\r\n                })\r\n\r\n                document.querySelector('.loginAlertBox').style.display = 'block'\r\n            }\r\n        })\r\n\r\n\r\n\r\n    return (\r\n        <main className='complete loginLocation'>\r\n            <div className='checkedLoginPopup info__content'>\r\n                <div className='infoPopup openUpdatedPopup' ref={loginPopup}>\r\n                    <div className='info__WrapperModal'>\r\n                        <button className='closeModal' onClick={(event) => {\r\n\r\n                            document.querySelector('.openUpdatedPopup').style.display = 'none'\r\n\r\n                        }}>\r\n                            x\r\n                        </button>\r\n                        <div className='complete__popupItems'>\r\n                            <div className='login__info'>\r\n                                <h4 className='complete__popupItems--title'>DAXİL OL</h4>\r\n                                <div className='login__formBox'>\r\n                                    <Input placeholder='EMAIL' type='text'\r\n                                        onChange={(event) => {\r\n                                            setEmail(event.target.value)\r\n                                        }} />\r\n                                    <Input placeholder='ŞİFRƏ' type='password'\r\n                                        onChange={(event) => {\r\n                                            setPassword(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                    <p className='loginAlertBox'>\r\n                                        Parol və login məlumatları səhvdir\r\n                                    </p>\r\n                                </div>\r\n                                <div className='login__formBoxEnd'>\r\n                                    {/* <NavLink to={''}>\r\n                                    ŞİFRƏMİ UNUTDUM\r\n                                </NavLink> */}\r\n                                    <NavLink to={'/login'}>\r\n                                        QEYDİYYATDAN KEÇ\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className='login__sendBtn'>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            mutation.mutate(params)\r\n                                        }}\r\n                                    >\r\n                                        DAXİL OL\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='rules__banner'>\r\n                <img src={require('../../images/rules.png').default} alt='' />\r\n                <Container>\r\n                    <h4 className='rules__title'>\r\n                        ONLİNE SİFARİŞ\r\n                    </h4>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <div className='order__breadCrumbs'>\r\n                    <span>\r\n                        SİFARİŞ\r\n                    </span>\r\n                    <span className='activCrumbs' >\r\n                        SİFARİŞLƏRİM\r\n                    </span>\r\n                </div>\r\n                <div className='oder__content home__priceBox'>\r\n                    <Row>\r\n                        {\r\n                            JSON.parse(window.localStorage.getItem('items')) !== null && (\r\n                                JSON.parse(window.localStorage.getItem('items')).map(pro => (\r\n\r\n                                    <Col md='6' lg='2' key={pro.id}>\r\n                                        <div className='order__itemBox'>\r\n                                            <div className='order__itemBox--img'>\r\n                                                <img src={pro.img !== null && pro.img.length !== 0 ? pro.img : ''} alt='' />\r\n                                                <button className='minus' data-id={pro.id} onClick={(event) => {\r\n                                                    sendMinus({\r\n                                                        id: pro.id,\r\n                                                        name: pro.name,\r\n                                                        price: pro.price,\r\n                                                        img: pro.img,\r\n                                                        count: 0\r\n                                                    }, event)\r\n                                                }}>\r\n                                                    -\r\n                                                            </button>\r\n                                                <button className='plus' data-id={pro.id} onClick={(event) => {\r\n                                                    sendPlus({\r\n                                                        id: pro.id,\r\n                                                        price: pro.price,\r\n                                                        name: pro.name,\r\n                                                        img: pro.img.cover,\r\n                                                        count: 1\r\n                                                    }, event)\r\n                                                }}>\r\n                                                    +\r\n                                                </button>\r\n                                                <div className=\"show\" style={{\r\n                                                    display: product.filter(id => id.id === pro.id).length !== 0 ? 'block' : 'none'\r\n                                                }}>\r\n                                                    {\r\n                                                        product.filter(id => id.id === pro.id).length !== 0\r\n                                                            ? product.filter(id => id.id === pro.id)[0].count : ''\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <strong>{pro.name}</strong>\r\n                                            {/* <span>{item.name}</span> */}\r\n                                            <div className='flex'>\r\n                                                <p className='priceBtn'>\r\n                                                    <span style={{ width: 100 + '%' }}>\r\n                                                        {\r\n                                                            pro.price\r\n                                                        }\r\n                                                    </span>\r\n                                                    {/* <i>\r\n                                                        13%\r\n                                                    </i> */}\r\n                                                </p>\r\n                                                <p className='setCount'>\r\n                                                    {\r\n                                                        round10(pro.price * Number(product.filter(id => id.id === pro.id)[0].count), -2) + ' AZN'\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))\r\n                            )\r\n                        }\r\n                    </Row >\r\n                </div>\r\n                <div className='order__result'>\r\n                    <p>\r\n                        ÜMUMİ MƏBLƏĞ:\r\n                        <span className='res'>\r\n                            {\r\n                                total.length !== 0 && (\r\n\r\n                                    total.reduce(reducer) + ' AZN'\r\n                                )\r\n                            }\r\n                        </span>\r\n                    </p>\r\n                    <div className='btnBoxs'>\r\n                        <NavLink to={'/order'}>\r\n                            <button className='success'>\r\n                                Prev\r\n                            </button>\r\n                        </NavLink>\r\n                        <NavLink to={total.reduce(reducer) !== 0 ? checkedToken() : '/order'} onClick={nextPageButton}>\r\n                            <button className='success'>\r\n                                Next\r\n                            </button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            <div id='map'>\r\n                {\r\n                    settings.isLoading === false && (\r\n                        <Map locations={locate} />\r\n                    )\r\n                }\r\n            </div>\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default OrderComplete;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\signIn\\signIn.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\token.js",["203"],"\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// router dom\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\n// recoil\r\nimport { useRecoilState } from 'recoil';\r\n\r\n\r\n// atoms\r\nimport { error } from '../atoms/atoms';\r\n\r\n\r\nexport function SetToken() {\r\n\r\n\r\n    let [err, setError] = useRecoilState(error)\r\n\r\n    let history = useHistory();\r\n\r\n    let { pathname } = useLocation();\r\n\r\n    axios.interceptors.request.use(function (config) {\r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        if (token) {\r\n            config.headers['Authorization'] = 'Bearer ' + JSON.parse(token)\r\n        } else {\r\n            delete config.headers['Authorization']\r\n        }\r\n        return config\r\n    });\r\n\r\n\r\n    axios.interceptors.response.use(function (response) {\r\n\r\n        return response;\r\n\r\n    }, function (error) {\r\n\r\n        setError(error)\r\n\r\n        if (error.response !== undefined) {\r\n            if (error.response.status === 401) {\r\n                window.localStorage.removeItem('token');\r\n                window.localStorage.removeItem('user');\r\n\r\n                if (pathname === 'loginorder' ||\r\n                    pathname === 'loginlocation' ||\r\n                    pathname === 'logininformation' ||\r\n                    pathname === 'passwordupdate'\r\n\r\n                ) {\r\n                    history.push({\r\n                        pathname: '/signin'\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (error.response.status === 400) {\r\n                window.localStorage.removeItem('token');\r\n                window.localStorage.removeItem('user');\r\n\r\n                if (pathname === 'loginorder' ||\r\n                    pathname === 'loginlocation' ||\r\n                    pathname === 'logininformation' ||\r\n                    pathname === 'passwordupdate'\r\n\r\n                ) {\r\n                    history.push({\r\n                        pathname: '/signin'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    });\r\n\r\n}","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\contact\\contact.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\passwordUpdated\\passwordUpdated.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\register\\register.js",["204","205","206"],"import React, { useLayoutEffect, useState } from 'react';\r\n\r\n\r\n// css\r\n\r\nimport './css/_login.scss';\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container, Input } from 'reactstrap';\r\n\r\n// components\r\nimport WhyUs from '../whyUs/whyUs';\r\nimport News from '../news/news';\r\nimport Map from '../map/map';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faEnvelope, faGlassMartiniAlt } from '@fortawesome/free-solid-svg-icons';\r\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n// ract router dom\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n// react query\r\nimport { useMutation } from 'react-query';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n\r\n// apis\r\n\r\nimport { registerApi } from '../../api/api';\r\n\r\n\r\n// token\r\nimport { error } from '../../atoms/atoms';\r\n\r\n// recoil\r\nimport { useRecoilValue } from 'recoil';\r\n\r\n\r\n// sweet alert\r\nimport swal from 'sweetalert';\r\nimport { func } from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst mapLocate = [\r\n    [41.015137, 28.979530]\r\n];\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n\r\n\r\n    let [name, setName] = useState()\r\n    let [surname, setSurname] = useState()\r\n    let [email, setEmail] = useState()\r\n    let [phone, setPhone] = useState()\r\n    let [password, setPassword] = useState()\r\n    let [passwordRepeat, setPasswordRepeat] = useState()\r\n\r\n    let isValid = true;\r\n\r\n    let history = useHistory()\r\n\r\n    let params = {\r\n        name: name,\r\n        phone: phone,\r\n        surname: surname,\r\n        email: email,\r\n        password: password,\r\n        password_confirmation: passwordRepeat\r\n    }\r\n\r\n\r\n    const err = useRecoilValue(error)\r\n\r\n\r\n\r\n    // // register\r\n    const mutation = useMutation(regi => axios.post(registerApi, regi), {\r\n        onSuccess: function (token) {\r\n\r\n            window.localStorage.setItem('token', JSON.stringify(token.data.token))\r\n\r\n            window.localStorage.setItem('user', JSON.stringify(token.data.user))\r\n\r\n            history.push({\r\n                pathname: '/logininformation'\r\n            })\r\n\r\n        }\r\n    })\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        if (err !== null && mutation.isError === true) {\r\n            swal({\r\n                title: err.response.data.error,\r\n                icon: \"error\",\r\n                button: \"Bağla\",\r\n            })\r\n        }\r\n    }, [mutation.isError])\r\n\r\n\r\n\r\n    return (\r\n        <main className='rules login'>\r\n            <div className='rules__banner'>\r\n                <img src={require('../../images/rules.png').default} alt='' />\r\n                <Container>\r\n                    <h4 className='rules__title'>\r\n                        Login\r\n                    </h4>\r\n                </Container>\r\n            </div>\r\n            <div className='rules__content login__content'>\r\n                <Container>\r\n                    <h4>QEYDİYYATDAN KEÇ VƏ YA DAXİL OL</h4>\r\n                    <div className='login__info'>\r\n                        {/* <div className='login__social'>\r\n                            <a href='2#'>\r\n                                <FontAwesomeIcon icon={faEnvelope} />\r\n                                Log in Email\r\n                            </a>\r\n                            <a href='2#'>\r\n                                <FontAwesomeIcon icon={faFacebookF} />\r\n                                Connect to facebook\r\n                            </a>\r\n                        </div> */}\r\n                        <div className='login__info'>\r\n                            <h4>XÜSUSİ QEYDİYYAT</h4>\r\n                            <div className='login__formBox'>\r\n                                <Input placeholder='AD' type='text'\r\n                                    onChange={(event) => {\r\n                                        setName(event.target.value)\r\n                                    }}\r\n                                />\r\n                                <p className='alertLogin'>Ad Daxil Edin</p>\r\n                                <Input placeholder='SOYAD' type='text'\r\n                                    onChange={(event) => {\r\n                                        setSurname(event.target.value)\r\n                                    }}\r\n                                />\r\n                                <p className='alertLogin'>Soyad Daxil Edin</p>\r\n                                <Input placeholder='EMAIL' type='text'\r\n                                    onChange={(event) => {\r\n                                        setEmail(event.target.value)\r\n                                    }} />\r\n                                <p className='alertLogin'>Emaili Daxil Edin</p>\r\n                                <Input placeholder='ŞİFRƏ' type='password'\r\n                                    onChange={(event) => {\r\n                                        setPassword(event.target.value)\r\n                                    }}\r\n                                />\r\n                                <p className='alertLogin'>Şifrə Daxil Edin</p>\r\n                                <Input placeholder='ŞİFRƏ TƏKRAR' type='password'\r\n                                    onChange={(event) => {\r\n                                        setPasswordRepeat(event.target.value)\r\n                                    }}\r\n                                />\r\n                                <p className='alertLogin'>Şifrəni Təkrar Daxil Edin</p>\r\n                            </div>\r\n                            <div className='login__formBoxEnd'>\r\n                                {/* <NavLink to={''}>\r\n                                    ŞİFRƏMİ UNUTDUM\r\n                                </NavLink> */}\r\n                                <NavLink to={''}>\r\n                                    DAXİL OL\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className='login__sendBtn'>\r\n                                <button\r\n                                    onClick={() => {\r\n\r\n                                        document.querySelectorAll('.login__formBox input').forEach(item => {\r\n\r\n                                            if (item.value !== '') {\r\n                                                item.nextElementSibling.style.display = 'none';\r\n                                                item.nextElementSibling.classList.remove('framesAlert')\r\n\r\n                                            } else {\r\n                                                item.nextElementSibling.style.display = 'block';\r\n                                                item.nextElementSibling.classList.remove('framesAlert')\r\n\r\n                                                setTimeout(() => {\r\n                                                    item.nextElementSibling.classList.add('framesAlert')\r\n                                                }, 100)\r\n\r\n                                                isValid = false\r\n                                            }\r\n\r\n                                        })\r\n\r\n                                        if (isValid === true) {\r\n                                            mutation.mutate(params)\r\n                                        }\r\n\r\n                                    }}\r\n                                >\r\n                                    QEYDİYYAT\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n            <WhyUs />\r\n            <News />\r\n            <div id='map'>\r\n                <Map locations={mapLocate} />\r\n            </div>\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\checkedPhoneInput.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\i18next\\i18n.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapCoordinate.js",["207","208","209","210","211","212","213","214"],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\services\\services.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\404\\404.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":43,"column":16,"nodeType":"221","messageId":"222","endLine":43,"endColumn":20},{"ruleId":"223","severity":1,"message":"224","line":67,"column":8,"nodeType":"225","endLine":67,"endColumn":14,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":89,"column":25,"nodeType":"229","endLine":89,"endColumn":36},{"ruleId":"227","severity":1,"message":"228","line":90,"column":25,"nodeType":"229","endLine":90,"endColumn":36},{"ruleId":"227","severity":1,"message":"228","line":91,"column":25,"nodeType":"229","endLine":91,"endColumn":36},{"ruleId":"227","severity":1,"message":"228","line":92,"column":25,"nodeType":"229","endLine":92,"endColumn":36},{"ruleId":"219","severity":1,"message":"230","line":55,"column":13,"nodeType":"221","messageId":"222","endLine":55,"endColumn":19},{"ruleId":"219","severity":1,"message":"231","line":21,"column":8,"nodeType":"221","messageId":"222","endLine":21,"endColumn":11},{"ruleId":"219","severity":1,"message":"232","line":22,"column":8,"nodeType":"221","messageId":"222","endLine":22,"endColumn":12},{"ruleId":"219","severity":1,"message":"233","line":52,"column":10,"nodeType":"221","messageId":"222","endLine":52,"endColumn":16},{"ruleId":"223","severity":1,"message":"234","line":66,"column":8,"nodeType":"225","endLine":66,"endColumn":14,"suggestions":"235"},{"ruleId":"219","severity":1,"message":"236","line":84,"column":19,"nodeType":"221","messageId":"222","endLine":84,"endColumn":29},{"ruleId":"219","severity":1,"message":"237","line":86,"column":10,"nodeType":"221","messageId":"222","endLine":86,"endColumn":18},{"ruleId":"219","severity":1,"message":"238","line":88,"column":10,"nodeType":"221","messageId":"222","endLine":88,"endColumn":19},{"ruleId":"219","severity":1,"message":"239","line":88,"column":21,"nodeType":"221","messageId":"222","endLine":88,"endColumn":33},{"ruleId":"219","severity":1,"message":"240","line":31,"column":19,"nodeType":"221","messageId":"222","endLine":31,"endColumn":25},{"ruleId":"219","severity":1,"message":"241","line":89,"column":10,"nodeType":"221","messageId":"222","endLine":89,"endColumn":21},{"ruleId":"219","severity":1,"message":"242","line":155,"column":10,"nodeType":"221","messageId":"222","endLine":155,"endColumn":17},{"ruleId":"223","severity":1,"message":"243","line":255,"column":8,"nodeType":"225","endLine":255,"endColumn":25,"suggestions":"244"},{"ruleId":"219","severity":1,"message":"245","line":261,"column":19,"nodeType":"221","messageId":"222","endLine":261,"endColumn":27},{"ruleId":"219","severity":1,"message":"245","line":158,"column":19,"nodeType":"221","messageId":"222","endLine":158,"endColumn":27},{"ruleId":"219","severity":1,"message":"242","line":91,"column":10,"nodeType":"221","messageId":"222","endLine":91,"endColumn":17},{"ruleId":"223","severity":1,"message":"246","line":145,"column":8,"nodeType":"225","endLine":145,"endColumn":10,"suggestions":"247"},{"ruleId":"219","severity":1,"message":"248","line":28,"column":10,"nodeType":"221","messageId":"222","endLine":28,"endColumn":19},{"ruleId":"219","severity":1,"message":"249","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":9},{"ruleId":"219","severity":1,"message":"250","line":11,"column":10,"nodeType":"221","messageId":"222","endLine":11,"endColumn":15},{"ruleId":"219","severity":1,"message":"251","line":10,"column":10,"nodeType":"221","messageId":"222","endLine":10,"endColumn":21},{"ruleId":"219","severity":1,"message":"236","line":63,"column":19,"nodeType":"221","messageId":"222","endLine":63,"endColumn":29},{"ruleId":"219","severity":1,"message":"237","line":65,"column":10,"nodeType":"221","messageId":"222","endLine":65,"endColumn":18},{"ruleId":"219","severity":1,"message":"242","line":67,"column":10,"nodeType":"221","messageId":"222","endLine":67,"endColumn":17},{"ruleId":"219","severity":1,"message":"252","line":20,"column":10,"nodeType":"221","messageId":"222","endLine":20,"endColumn":13},{"ruleId":"219","severity":1,"message":"253","line":46,"column":10,"nodeType":"221","messageId":"222","endLine":46,"endColumn":14},{"ruleId":"219","severity":1,"message":"254","line":64,"column":17,"nodeType":"221","messageId":"222","endLine":64,"endColumn":25},{"ruleId":"223","severity":1,"message":"255","line":110,"column":8,"nodeType":"225","endLine":110,"endColumn":26,"suggestions":"256"},{"ruleId":"219","severity":1,"message":"257","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":13},{"ruleId":"219","severity":1,"message":"258","line":3,"column":15,"nodeType":"221","messageId":"222","endLine":3,"endColumn":25},{"ruleId":"219","severity":1,"message":"259","line":3,"column":27,"nodeType":"221","messageId":"222","endLine":3,"endColumn":33},{"ruleId":"219","severity":1,"message":"260","line":3,"column":35,"nodeType":"221","messageId":"222","endLine":3,"endColumn":51},{"ruleId":"219","severity":1,"message":"261","line":40,"column":11,"nodeType":"221","messageId":"222","endLine":40,"endColumn":18},{"ruleId":"219","severity":1,"message":"262","line":51,"column":11,"nodeType":"221","messageId":"222","endLine":51,"endColumn":28},{"ruleId":"219","severity":1,"message":"263","line":59,"column":11,"nodeType":"221","messageId":"222","endLine":59,"endColumn":21},{"ruleId":"219","severity":1,"message":"264","line":83,"column":11,"nodeType":"221","messageId":"222","endLine":83,"endColumn":21},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'i18n' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'pathname'. Either include it or remove the dependency array.","ArrayExpression",["267"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'locate' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'tabKey' is assigned a value but never used.","React Hook useLayoutEffect has a missing dependency: 'setTabKey'. Either include it or remove the dependency array.",["268"],"'setProduct' is assigned a value but never used.","'myBasket' is assigned a value but never used.","'changeTab' is assigned a value but never used.","'setChangeTab' is assigned a value but never used.","'faEdit' is defined but never used.","'updatedPage' is assigned a value but never used.","'allOder' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'orderValue' and 'setOrder'. Either include them or remove the dependency array.",["269"],"'setState' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'history', 'orderValue', 'reducer', and 'setOrder'. Either include them or remove the dependency array.",["270"],"'checkType' is defined but never used.","'$' is defined but never used.","'blogs' is defined but never used.","'useLocation' is defined but never used.","'err' is assigned a value but never used.","'func' is defined but never used.","'setPhone' is assigned a value but never used.","React Hook useLayoutEffect has a missing dependency: 'err'. Either include it or remove the dependency array.",["271"],"'Map' is defined but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","'GoogleApiWrapper' is defined but never used.","'onClose' is assigned a value but never used.","'mapContainerStyle' is assigned a value but never used.","'mapOptions' is assigned a value but never used.","'changeCoor' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [data, pathname]",{"range":"282","text":"283"},"Update the dependencies array to be: [data, setTabKey]",{"range":"284","text":"285"},"Update the dependencies array to be: [addressApi.data, orderValue, setOrder]",{"range":"286","text":"287"},"Update the dependencies array to be: [history, orderValue, reducer, setOrder]",{"range":"288","text":"289"},"Update the dependencies array to be: [err, mutation.isError]",{"range":"290","text":"291"},[1453,1459],"[data, pathname]",[1024,1030],"[data, setTabKey]",[5717,5734],"[addressApi.data, orderValue, setOrder]",[3247,3249],"[history, orderValue, reducer, setOrder]",[2318,2336],"[err, mutation.isError]"]