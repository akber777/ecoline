[{"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\index.js":"1","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\App.js":"3","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\header\\header.js":"4","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\home\\home.js":"5","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\map.js":"6","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapStyle.js":"7","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\footer\\footer.js":"8","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\price\\price.js":"9","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\whyUs\\whyUs.js":"10","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\news.js":"11","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\newsDetail\\newsDetail.js":"12","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\order.js":"13","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\location\\location.js":"14","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginInformation\\loginInformation.js":"15","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginOrder\\loginOrder.js":"16","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginLocation\\loginLocation.js":"17","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\payment\\payment.js":"18","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\delivery\\delivery.js":"19","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\static\\static.js":"20","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\openMobMenu.js":"21","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\queries\\queries.js":"22","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\api.js":"23","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\include.js":"24","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\newsSelf.js":"25","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\resize.js":"26","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\helper\\helper.js":"27","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\atoms\\atoms.js":"28","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderComplete.js":"29","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\signIn\\signIn.js":"30","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\token.js":"31","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\contact\\contact.js":"32","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\passwordUpdated\\passwordUpdated.js":"33","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\register\\register.js":"34","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\checkedPhoneInput.js":"35","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\i18next\\i18n.js":"36","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapCoordinate.js":"37","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\services\\services.js":"38","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\404\\404.js":"39","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\helmet\\helmet.js":"40","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderCheck.js":"41","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderCheckCash.js":"42"},{"size":1282,"mtime":1616680874873,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":6505,"mtime":1618397381608,"results":"46","hashOfConfig":"44"},{"size":11008,"mtime":1616750510453,"results":"47","hashOfConfig":"44"},{"size":5649,"mtime":1617581138783,"results":"48","hashOfConfig":"44"},{"size":4546,"mtime":1616711969136,"results":"49","hashOfConfig":"44"},{"size":2569,"mtime":1610183120996,"results":"50","hashOfConfig":"44"},{"size":3214,"mtime":1617578994782,"results":"51","hashOfConfig":"44"},{"size":3241,"mtime":1615574825802,"results":"52","hashOfConfig":"44"},{"size":4452,"mtime":1616759646179,"results":"53","hashOfConfig":"44"},{"size":2896,"mtime":1617578760634,"results":"54","hashOfConfig":"44"},{"size":2794,"mtime":1616587487502,"results":"55","hashOfConfig":"44"},{"size":12156,"mtime":1617581818923,"results":"56","hashOfConfig":"44"},{"size":22741,"mtime":1617580755378,"results":"57","hashOfConfig":"44"},{"size":10695,"mtime":1617581595998,"results":"58","hashOfConfig":"44"},{"size":12370,"mtime":1616746024685,"results":"59","hashOfConfig":"44"},{"size":18404,"mtime":1617581564034,"results":"60","hashOfConfig":"44"},{"size":7943,"mtime":1617580549466,"results":"61","hashOfConfig":"44"},{"size":4537,"mtime":1612541840221,"results":"62","hashOfConfig":"44"},{"size":3355,"mtime":1615641346812,"results":"63","hashOfConfig":"44"},{"size":1027,"mtime":1615239180600,"results":"64","hashOfConfig":"44"},{"size":915,"mtime":1613685809476,"results":"65","hashOfConfig":"44"},{"size":464,"mtime":1616689073800,"results":"66","hashOfConfig":"44"},{"size":48,"mtime":1611239818363,"results":"67","hashOfConfig":"44"},{"size":3068,"mtime":1615579613605,"results":"68","hashOfConfig":"44"},{"size":674,"mtime":1615238508227,"results":"69","hashOfConfig":"44"},{"size":2013,"mtime":1616625121170,"results":"70","hashOfConfig":"44"},{"size":713,"mtime":1616705878554,"results":"71","hashOfConfig":"44"},{"size":14698,"mtime":1617579425210,"results":"72","hashOfConfig":"44"},{"size":6617,"mtime":1617578761372,"results":"73","hashOfConfig":"44"},{"size":2907,"mtime":1617582028128,"results":"74","hashOfConfig":"44"},{"size":7446,"mtime":1617581447088,"results":"75","hashOfConfig":"44"},{"size":2934,"mtime":1617581628080,"results":"76","hashOfConfig":"44"},{"size":7745,"mtime":1616750438924,"results":"77","hashOfConfig":"44"},{"size":502,"mtime":1613032321244,"results":"78","hashOfConfig":"44"},{"size":696,"mtime":1616751284315,"results":"79","hashOfConfig":"44"},{"size":3000,"mtime":1613259643388,"results":"80","hashOfConfig":"81"},{"size":735,"mtime":1613291600360,"results":"82","hashOfConfig":"44"},{"size":291,"mtime":1613338561974,"results":"83","hashOfConfig":"44"},{"size":531,"mtime":1618397467650,"results":"84","hashOfConfig":"44"},{"size":4364,"mtime":1615654818114,"results":"85","hashOfConfig":"44"},{"size":1926,"mtime":1615652257686,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1wg3aby",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"89"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"862sdw",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"89"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"89"},"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\index.js",[],["190","191"],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\App.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\header\\header.js",["192","193","194","195","196","197","198"],"import React, { useLayoutEffect } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_header.scss\";\r\n\r\n// Tools\r\nimport { Container } from \"reactstrap\";\r\n\r\n// react router dom\r\n\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\n// font awesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faFacebookF,\r\n  faLinkedinIn,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// i18\r\nimport i18n from \"../i18next/i18n\";\r\n\r\n// react query\r\nimport { useQuery } from \"react-query\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// helper\r\nimport { checkedUrl } from \"../helper/helper\";\r\n\r\n// jquery\r\nimport $ from \"jquery\";\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\n// atoms\r\nimport { titleHelmet, userInfo } from \"../atoms/atoms\";\r\n\r\nimport { baseUrl } from \"../api/api\";\r\n\r\nconst Header = () => {\r\n  let { pathname } = useLocation();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  let { data, isLoading } = useQuery(\r\n    [\"header\", \"\"],\r\n    async () => {\r\n      const res = axios.get(baseUrl + \"menu/header\");\r\n\r\n      return (await res).data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    if (pathname === \"/\") {\r\n      $(\".header__navList a:first\").addClass(\"activeItem\");\r\n    } else if (pathname === \"/index\") {\r\n      $(\".header__navList a:first\").addClass(\"activeItem\");\r\n    } else {\r\n      $(\".header__navList a:first\").removeClass(\"activeItem\");\r\n    }\r\n\r\n    $.each($(\"header__navList .header__subItem\"), function (index, item) {\r\n      $(item).parents(\"a\").addClass(\"noHover\");\r\n\r\n      if ($(item).find(\"a\").hasClass(\"active\") === true) {\r\n        $(item).parents(\"a\").css({\r\n          color: \"#8cbd29\",\r\n        });\r\n      } else {\r\n        $(item).parents(\"a\").css({\r\n          color: \"#3d3d3d\",\r\n        });\r\n      }\r\n\r\n      $(item).parents(\"a\").removeClass(\"activeItem\");\r\n    });\r\n\r\n    $(\".headerMobileMenu a\").removeClass(\"noHover\");\r\n\r\n    // $('.headerMobileMenu > a').on('click', function () {\r\n    //     $('.headerMobWrap ').removeClass('openMenu');\r\n    // })\r\n\r\n    $(window).scroll(function () {\r\n      if (\r\n        $(window).scrollTop() + $(window).height() >\r\n        $(document).height() - $(\".footer__end\").height()\r\n      ) {\r\n        $(\".header__navGetMobile\").css({\r\n          bottom: $(\".footer__end\").height() + 50,\r\n        });\r\n      } else {\r\n        $(\".header__navGetMobile\").css({\r\n          bottom: 25,\r\n        });\r\n      }\r\n    });\r\n\r\n    if (localStorage.getItem(\"i18nextLng\") === null) {\r\n      i18n.changeLanguage(\"az\");\r\n    }\r\n  }, [data]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (pathname === \"/\") {\r\n      $(\".header__navList a:first\").addClass(\"activeItem\");\r\n    } else if (pathname === \"/index\") {\r\n      $(\".header__navList a:first\").addClass(\"activeItem\");\r\n    } else {\r\n      $(\".header__navList a:first\").removeClass(\"activeItem\");\r\n    }\r\n\r\n    $.each($(\" .header__subItem\"), function (index, item) {\r\n      $(item).parents(\"a\").addClass(\"noHover\");\r\n\r\n      if ($(item).find(\"a\").hasClass(\"active\") === true) {\r\n        $(item).parents(\"a\").css({\r\n          color: \"#8cbd29\",\r\n        });\r\n      } else {\r\n        $(item).parents(\"a\").css({\r\n          color: \"#3d3d3d\",\r\n        });\r\n      }\r\n\r\n      $(item).parents(\"a\").removeClass(\"activeItem\");\r\n    });\r\n\r\n    $(\".headerMobileMenu a\").removeClass(\"noHover\");\r\n  });\r\n\r\n  let [titleHel, setTitle] = useRecoilState(titleHelmet);\r\n\r\n  useLayoutEffect(() => {\r\n    $(\".headerMobWrap\").removeClass(\"openMenu\");\r\n  }, [pathname]);\r\n\r\n  const changeLang = (lang) => {\r\n    i18n.changeLanguage(lang);\r\n    window.location.reload();\r\n  };\r\n\r\n  // userData\r\n  let userData = useRecoilValue(userInfo);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\" headerMobWrap\">\r\n        <div className=\"closeMob\">\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n        <div className=\"headerMobileMenu\">\r\n          {isLoading === false &&\r\n            data !== undefined &&\r\n            data.map((item, index) => (\r\n              <NavLink\r\n                to={checkedUrl(item)}\r\n                key={index}\r\n                className={\r\n                  checkedUrl(item) === \"/\" + pathname.split(\"/\")[1]\r\n                    ? \"activeItem\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                {item.title}\r\n                {item.items !== undefined ? (\r\n                  <div className=\"header__subItem\">\r\n                    {item.items.map((subitem, indexSub) => (\r\n                      <NavLink to={checkedUrl(subitem)} key={indexSub}>\r\n                        {subitem.title}\r\n                      </NavLink>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </NavLink>\r\n            ))}\r\n          <div className=\"footer__social\">\r\n            <a href=\"\">\r\n              <FontAwesomeIcon icon={faTwitter} />\r\n            </a>\r\n            <a href=\"\">\r\n              <FontAwesomeIcon icon={faFacebookF} />\r\n            </a>\r\n            <a href=\"\">\r\n              <FontAwesomeIcon icon={faPlay} />\r\n            </a>\r\n            <a href=\"\">\r\n              <FontAwesomeIcon icon={faLinkedinIn} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__top\">\r\n        <Container>\r\n          <div className=\"header__topFlex\">\r\n            <div className=\"header__topLeft\">\r\n              <p>\r\n                {settings.isLoading === false &&\r\n                  settings.data !== undefined &&\r\n                  settings.data.data.header_open}\r\n              </p>\r\n            </div>\r\n            <div className=\"header__topRight\">\r\n              <a href=\"tel:\">\r\n                {settings.isLoading === false &&\r\n                  settings.data !== undefined &&\r\n                  settings.data.data.header_phone}\r\n              </a>\r\n              <div className=\"flexAllNav\">\r\n                {window.localStorage.getItem(\"token\") === null ? (\r\n                  <NavLink to={\"/signin\"}>\r\n                    <img src={require(\"../images/phone.png\").default} alt=\"\" />\r\n                    {t(\"Daxil ol\")}\r\n                    <span>/</span>\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink to={\"/loginorder\"}>\r\n                    {userData !== null && userData.name}\r\n                  </NavLink>\r\n                )}\r\n                {window.localStorage.getItem(\"token\") === null ? (\r\n                  <NavLink to={\"/register\"}>{t(\"Qeydiyyat\")}</NavLink>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <div className=\"header__menuBox\">\r\n        <Container>\r\n          <nav className=\"header__nav\">\r\n            <NavLink to={\"/index\"} className=\"navLogo\">\r\n              <img\r\n                src={\r\n                  settings.isLoading === false && settings.data !== undefined\r\n                    ? settings.data.data.header_logo.original\r\n                    : \"\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </NavLink>\r\n            <div className=\"header__navItem\">\r\n              <div className=\"openMob\">\r\n                <FontAwesomeIcon icon={faBars} />\r\n              </div>\r\n              <div className=\"header__navList\">\r\n                {isLoading === false &&\r\n                  data !== undefined &&\r\n                  data.map((item, index) => (\r\n                    <NavLink\r\n                      to={checkedUrl(item)}\r\n                      key={index}\r\n                      className={\r\n                        checkedUrl(item) === \"/\" + pathname.split(\"/\")[1]\r\n                          ? \"activeItem\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      {item.title}\r\n                      {item.items !== undefined ? (\r\n                        <div className=\"header__subItem\">\r\n                          {item.items.map((subitem, indexSub) => (\r\n                            <NavLink to={checkedUrl(subitem)} key={indexSub}>\r\n                              {subitem.title}\r\n                            </NavLink>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n              <div className=\"header__langBox\">\r\n                <button\r\n                  className={\r\n                    localStorage.getItem(\"i18nextLng\") === \"az\"\r\n                      ? \"activeLang\"\r\n                      : \"\"\r\n                  }\r\n                  onClick={() => {\r\n                    changeLang(\"az\");\r\n                  }}\r\n                >\r\n                  Az\r\n                </button>\r\n                <span>|</span>\r\n                <button\r\n                  className={\r\n                    localStorage.getItem(\"i18nextLng\") === \"en\"\r\n                      ? \"activeLang\"\r\n                      : \"\"\r\n                  }\r\n                  onClick={() => {\r\n                    changeLang(\"en\");\r\n                  }}\r\n                >\r\n                  En\r\n                </button>\r\n                <span>|</span>\r\n                <button\r\n                  className={\r\n                    localStorage.getItem(\"i18nextLng\") === \"ru\"\r\n                      ? \"activeLang\"\r\n                      : \"\"\r\n                  }\r\n                  onClick={() => {\r\n                    changeLang(\"ru\");\r\n                  }}\r\n                >\r\n                  Ru\r\n                </button>\r\n              </div>\r\n              <div className=\"header__navGet\">\r\n                <NavLink to={\"/order\"}>\r\n                  {t(\"QİYMƏTLƏR VƏ ONLINE SİFARİŞ\")}\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </Container>\r\n      </div>\r\n      <div\r\n        className=\"header__navGetMobile zIndex header__navGet\"\r\n        style={{\r\n          display:\r\n            pathname.split(\"/\")[1] === \"order\" ||\r\n            pathname.split(\"/\")[1] === \"ordercomplete\" ||\r\n            pathname.split(\"/\")[1] === \"location\" ||\r\n            pathname.split(\"/\")[1] === \"payment\"\r\n              ? \"none\"\r\n              : \"block\",\r\n        }}\r\n      >\r\n        <NavLink to={\"/order\"}>{t(\"QİYMƏTLƏR VƏ ONLINE SİFARİŞ\")}</NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\home\\home.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\map.js",["199"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\n// // renderHtml\r\n// import renderHtml from 'react-render-html';\r\n\r\n// mapStyle\r\nimport mapStyle from \"./mapStyle\";\r\n\r\n// propTypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// map css\r\nimport \"./css/_map.scss\";\r\n\r\n// aos\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nlet currentZoom = 14;\r\n\r\nclass MapContainer extends Component {\r\n  state = {\r\n    showingInfoWindow: false,\r\n    activeMarker: \"\",\r\n    zoomMap: currentZoom,\r\n    selectedPlace: \"\",\r\n    center: \"\",\r\n    show: false,\r\n    positions: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // or simply just AOS.init();\r\n    AOS.init({\r\n      // initialise with other settings\r\n      duration: 1000,\r\n    });\r\n\r\n    window.onscroll = () => {\r\n      AOS.refresh();\r\n    };\r\n\r\n    let locate =\r\n      this.props.locations !== false\r\n        ? this.props.locations.map((item) =>\r\n            this.setState({\r\n              center: { lat: item[0], lng: item[1] },\r\n            })\r\n          )\r\n        : \"\";\r\n  }\r\n\r\n  onClose = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null,\r\n        show: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const mapContainerStyle = {\r\n      height: \"409px\",\r\n      width: \"100%\",\r\n    };\r\n\r\n    // map style and checkking controls\r\n    const mapOptions = {\r\n      styles: mapStyle,\r\n      fullscreenControl: false,\r\n      streetViewControl: false,\r\n      mapTypeControl: false,\r\n      zoomControl: false,\r\n    };\r\n\r\n    // Clusters options\r\n\r\n    // const optionsClusters = {\r\n    //     styles: [{\r\n    //         textColor: 'white',\r\n    //         height: 53,\r\n    //         url: require('../../images/clusters.svg'),\r\n    //         'width': 50,\r\n    //         'line-height': 42\r\n    //     }]\r\n    // }\r\n\r\n    return (\r\n      <div data-aos=\"fade-up\">\r\n        <LoadScript googleMapsApiKey=\"AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw\">\r\n          <GoogleMap\r\n            id=\"mapWithClusters\"\r\n            mapContainerStyle={mapContainerStyle}\r\n            zoom={this.state.zoomMap}\r\n            center={this.state.center}\r\n            options={mapOptions}\r\n          >\r\n            {this.props.locations !== false\r\n              ? this.props.locations.map((item, index) => (\r\n                  <Marker\r\n                    key={index}\r\n                    onClick={\r\n                      (this.onMarkerClick = () => {\r\n                        this.setState({\r\n                          selectedPlace: item[0],\r\n                          center: { lat: item[0], lng: item[1] },\r\n                          showingInfoWindow: true,\r\n                          positions: this.props.locations,\r\n                          show: true,\r\n                        });\r\n                      })\r\n                    }\r\n                    icon={{\r\n                      url: require(\"../../images/pin.png\").default,\r\n                      // size: { width: 30, height: 30, }\r\n                    }}\r\n                    position={{ lat: item[0], lng: item[1] }}\r\n                    animation={2}\r\n                  >\r\n                    <InfoWindow position={{ lat: item[0], lng: item[1] }}>\r\n                      <div className=\"contact__footer\">\r\n                        <h4> Həsən Əliyev 7C</h4>\r\n                        <p>\r\n                          <a href=\"tel:+994 12 430 55 99 / +994 50 265 55 99\">\r\n                            +994 12 430 55 99 / +994 50 265 55 99\r\n                          </a>\r\n                        </p>\r\n                        <p className=\"sosial\">\r\n                          <a href=\"https://www.instagram.com/ecoline.az/\">\r\n                            <i className=\"fab fa-instagram\"></i>\r\n                          </a>\r\n                          <a href=\"https://www.facebook.com/ecoline.az/?hc_ref=ARSKrt1lRAa3NzpP5m5rW1ms_NAWleLp5a7ceIGhuVYv43MdUWQ37hp4hzCeY2UCZWk&ref=nf_target&__tn__=kC-R\">\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                          </a>\r\n                        </p>\r\n                      </div>\r\n                    </InfoWindow>\r\n                  </Marker>\r\n                ))\r\n              : \"\"}\r\n          </GoogleMap>\r\n        </LoadScript>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMapContainer.propTypes = {\r\n  pathName: PropTypes.object,\r\n  locations: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MapContainer;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapStyle.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\footer\\footer.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\price\\price.js",["200","201","202","203"],"import React, { useLayoutEffect } from 'react';\r\n\r\n\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from 'reactstrap';\r\n\r\n// react router dom\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// aos\r\nimport AOS from 'aos';\r\nimport \"aos/dist/aos.css\";\r\n\r\n// propTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n// tabs\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\n\r\n// atoms\r\nimport { myTab } from '../../atoms/atoms';\r\n\r\n// recoil\r\nimport {\r\n    useRecoilState,\r\n} from 'recoil';\r\n\r\n// jquery\r\n\r\nimport $ from 'jquery';\r\n\r\n\r\nconst Price = React.memo(function Price({\r\n    ...props\r\n}) {\r\n\r\n    useLayoutEffect(() => {\r\n        AOS.init({\r\n            duration: 2000\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n    let { data } = props.data\r\n\r\n\r\n    let [tabKey, setTabKey] = useRecoilState(myTab)\r\n\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        $('.itemsCom').click(function () {\r\n\r\n            let eventKey = $(this).attr('data-id');\r\n\r\n            setTabKey(eventKey)\r\n\r\n        })\r\n\r\n\r\n    }, [data])\r\n\r\n\r\n    return (\r\n        <div className='home__price' data-aos=\"fade-up\">\r\n            <Container>\r\n                <div className='home__priceBox '>\r\n                    <Row>\r\n                        {\r\n                            data.map(item => (\r\n                                <Col lg='6' className='p-0 itemsCom' key={item.id} data-id={item.name}>\r\n                                    <NavLink to={'/order/' + item.name.toLowerCase()}>\r\n                                        <div className='home__priceBox--item'>\r\n                                            <div className='layout'>\r\n                                                <img src={require('../../images/layer.png').default} alt='' />\r\n                                            </div>\r\n                                            <img src={item.img !== null ? item.img.original : ''} alt='' />\r\n\r\n                                            <h4>\r\n                                                {\r\n                                                    item.name\r\n                                                }\r\n                                                {\r\n                                                    item.description !== undefined && item.description !== null ?\r\n                                                        <strong>\r\n                                                            {\r\n                                                                item.description\r\n                                                            }\r\n                                                        </strong>\r\n                                                        :\r\n                                                        ''\r\n                                                }\r\n                                            </h4>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                </Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nPrice.propTypes = {\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Price;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\whyUs\\whyUs.js",["204","205"],"import React, { useLayoutEffect } from \"react\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\n// react router dom\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\n// aos\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\n// imgPath\r\nimport { baseUrl, imgPath } from \"../../api/api\";\r\n\r\n// query\r\nimport { useQuery } from \"react-query\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// react splide\r\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\r\n\r\nconst WhyUs = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  useLayoutEffect(() => {\r\n    AOS.init({\r\n      duration: 2000,\r\n    });\r\n  }, []);\r\n\r\n  let { pathname } = useLocation();\r\n\r\n  let updatedPath = pathname === \"/\" ? \"index\" : pathname.split(\"/\")[1];\r\n\r\n  let { data, isLoading } = useQuery([\"advantage\", pathname], async () => {\r\n    const res = axios.get(baseUrl + \"page/\" + updatedPath);\r\n\r\n    return (await res).data;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isLoading === false &&\r\n      data !== undefined &&\r\n      data.data.viewBag !== undefined &&\r\n      data.data.viewBag.advantage !== undefined ? (\r\n        <div className=\"home__whyUs\" data-aos=\"fade-down\">\r\n          <h4>{t(\"BİZİ SEÇMƏYİNİZ ÜÇÜN BİR NEÇƏ SƏBƏB\")}</h4>\r\n          <div\r\n            className=\"home__whyUsWrapper\"\r\n            style={{\r\n              backgroundImage: `url(${\r\n                require(\"../../images/bacj.png\").default\r\n              })`,\r\n            }}\r\n          >\r\n            {/* <img src={require('../../images/bacj.png').default} alt='' /> */}\r\n            <Container>\r\n              <div className=\"home__whyUsContent\">\r\n                <Splide\r\n                  options={{\r\n                    width: \"auto\",\r\n                    gap: \"1rem\",\r\n                    autoplay: true,\r\n                    interval: 4000,\r\n                    type: \"loop\",\r\n                    perPage: 3,\r\n                    arrows: false,\r\n                    perMove: 1,\r\n                    pagination: false,\r\n                    breakpoints: {\r\n                      1052: {\r\n                        perPage: 2,\r\n                      },\r\n                      775: {\r\n                        perPage: 1,\r\n                      },\r\n                    }\r\n                  }}\r\n                >\r\n                  {isLoading === false &&\r\n                    data.data.length !== 0 &&\r\n                    (data.data.viewBag.advantage !== undefined ? (\r\n                      data.data.viewBag.advantage.map((item, index) => (\r\n                        <SplideSlide>\r\n                          <NavLink to={\"\"}>\r\n                            <div className=\"home__whyUsItems\">\r\n                              <div className=\"home__whyUsItems--imgBox\">\r\n                                <img\r\n                                  src={\r\n                                    item.img !== undefined && item.img !== null\r\n                                      ? imgPath + item.img\r\n                                      : \"\"\r\n                                  }\r\n                                  alt=\"\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"home__whyUsItems--text\">\r\n                                <h4>{item.title}</h4>\r\n                                <p>{item.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </NavLink>\r\n                        </SplideSlide>\r\n                      ))\r\n                    ) : (\r\n                      <div\r\n                        style={{\r\n                          height: 500,\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          id=\"preloader\"\r\n                          aria-busy=\"true\"\r\n                          aria-label=\"Loading, please wait.\"\r\n                          role=\"progressbar\"\r\n                        ></div>\r\n                      </div>\r\n                    ))}\r\n                </Splide>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WhyUs;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\news.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\newsDetail\\newsDetail.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\order.js",["206","207","208","209","210","211","212","213"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_order.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\n// react router dom\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// map\r\n\r\nimport Map from \"../map/map\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// tabs\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\n\r\n// query\r\nimport { useQuery } from \"react-query\";\r\nimport { categories } from \"../../queries/queries\";\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\n// atoms\r\nimport { basket, myTab, orderTotal } from \"../../atoms/atoms\";\r\n\r\n// baseUrl\r\nimport { baseUrl } from \"../../api/api\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// helper\r\nimport { decimalAdjust } from \"../../helper/helper\";\r\n\r\n// jquery\r\nimport $ from \"jquery\";\r\n\r\n// sweet alert\r\nimport swal from \"sweetalert\";\r\n\r\n// react i18 next\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Order = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const history = useHistory();\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const locate =\r\n    settings.isLoading === false &&\r\n    settings.data.data.map_location.map((item) => [\r\n      Number(item.lat),\r\n      Number(item.long),\r\n    ]);\r\n\r\n  const minAmount =\r\n    settings.isLoading === false && settings.data.data.min_amount;\r\n\r\n  let { data, isLoading } = useQuery([\"category\", \"\"], categories, {\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  let [product, setProduct] = useState([]);\r\n\r\n  let [myBasket, setMyBasket] = useRecoilState(basket);\r\n\r\n  let [allOrder, setAllOrder] = useRecoilState(orderTotal);\r\n\r\n  let [changeTab, setChangeTab] = useRecoilState(myTab);\r\n\r\n  let myTabName = useRecoilValue(myTab);\r\n\r\n  let [total] = useState([]);\r\n\r\n  if (\r\n    localStorage.getItem(\"items\") !== \"\" &&\r\n    localStorage.getItem(\"items\") !== null\r\n  ) {\r\n    if (JSON.parse(localStorage.getItem(\"items\")) !== null) {\r\n      product = JSON.parse(localStorage.getItem(\"items\"));\r\n      total = JSON.parse(localStorage.getItem(\"total\"));\r\n    }\r\n  }\r\n\r\n  function sendMinus(value, event) {\r\n    const endRes = product.filter((id) => id.id === value.id);\r\n\r\n    if (endRes[0] !== undefined) {\r\n      if (endRes[0].count > 0) {\r\n        endRes[0].count--;\r\n        localStorage.setItem(\r\n          \"items\",\r\n          JSON.stringify(product.filter((count) => count.count > 0))\r\n        );\r\n        event.target.nextElementSibling.nextElementSibling.style.display =\r\n          \"block\";\r\n        event.target.nextElementSibling.nextElementSibling.textContent =\r\n          endRes[0].count;\r\n\r\n        setMyBasket(JSON.parse(localStorage.getItem(\"items\")));\r\n\r\n        const index = total.indexOf(Number(value.price));\r\n\r\n        if (index > -1) {\r\n          total.splice(index, 1);\r\n\r\n          window.localStorage.setItem(\"total\", JSON.stringify(total));\r\n\r\n          setAllOrder(JSON.stringify(total));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function sendPlus(value, event) {\r\n    const res = product.some((id) => id.id === value.id);\r\n\r\n    if (res === false) {\r\n      product.push(value);\r\n\r\n      const endFinish = product.filter((id) => id.id === value.id);\r\n\r\n      localStorage.setItem(\"items\", JSON.stringify(product));\r\n\r\n      setMyBasket(JSON.parse(localStorage.getItem(\"items\")));\r\n\r\n      if (endFinish !== 0) {\r\n        event.target.nextElementSibling.style.display = \"block\";\r\n        event.target.nextElementSibling.textContent = endFinish[0].count;\r\n      }\r\n    } else {\r\n      const endRes = product.filter((id) => id.id === value.id);\r\n      endRes[0].count++;\r\n      localStorage.setItem(\"items\", JSON.stringify(product));\r\n      setMyBasket(JSON.parse(localStorage.getItem(\"items\")));\r\n\r\n      if (endRes !== 0) {\r\n        event.target.nextElementSibling.style.display = \"block\";\r\n        event.target.nextElementSibling.textContent = endRes[0].count;\r\n      }\r\n    }\r\n\r\n    total.push(Number(value.price));\r\n\r\n    window.localStorage.setItem(\"total\", JSON.stringify(total));\r\n\r\n    setAllOrder(JSON.stringify(total));\r\n  }\r\n\r\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\r\n\r\n  const reducer = (accumulator, currentValue) =>\r\n    round10(accumulator + currentValue, -1);\r\n\r\n  window.addEventListener(\"beforeunload\", function (e) {\r\n    localStorage.removeItem(\"items\");\r\n    localStorage.removeItem(\"total\");\r\n  });\r\n\r\n  let mathEmp = [];\r\n\r\n  useLayoutEffect(() => {\r\n    $(\".oder__content nav\").css({\r\n      position: \"sticky\",\r\n      top: 20,\r\n      zIndex: 5555,\r\n    });\r\n\r\n    $(\".order__result \").css({\r\n      position: \"sticky\",\r\n      bottom: 0,\r\n      zIndex: 5555,\r\n      backgroundColor: \"#fff\",\r\n      padding: 15,\r\n    });\r\n  }, [data]);\r\n\r\n  function checkedAmount() {\r\n    if (total.length !== 0) {\r\n      if (total.reduce(reducer) < minAmount) {\r\n        swal({\r\n          title:\r\n            t(\"Sifariş Məbləği\") +\r\n            \" \" +\r\n            minAmount +\r\n            \" \" +\r\n            t(\"Azn-dan az ola bilməz\"),\r\n          icon: \"error\",\r\n          button: \"Bağla\",\r\n        });\r\n      }\r\n    }\r\n\r\n    return \"/order\";\r\n  }\r\n\r\n  function checkedThief() {\r\n    if (total.length !== 0) {\r\n      if (localStorage.getItem(\"total\") === \"\") {\r\n        window.location.reload();\r\n      }\r\n\r\n      if (JSON.stringify(myBasket) !== localStorage.getItem(\"items\")) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"order home__price\">\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t('ONLİNE SİFARİŞ')}</h4>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <div className=\"order__breadCrumbs\">\r\n          <span className=\"activCrumbs\">{t('SİFARİŞ')}</span>\r\n        </div>\r\n        <div className=\"oder__content home__priceBox\">\r\n          {isLoading === false && data !== undefined ? (\r\n            <Tabs\r\n              defaultActiveKey={\r\n                myTabName !== null ? myTabName : data.data[0].name\r\n              }\r\n              transition={false}\r\n              id=\"noanim-tab-example\"\r\n            >\r\n              {data.data.map((item) => (\r\n                <Tab eventKey={item.name} title={item.name} key={item.id}>\r\n                  <Row>\r\n                    {item.products.data.map((pro) => (\r\n                      <Col xs=\"4\" lg=\"2\" key={pro.id}>\r\n                        <div className=\"order__itemBox\">\r\n                          <div className=\"order__itemBox--img\">\r\n                            <img\r\n                              src={\r\n                                pro.img !== null && pro.img.length !== 0\r\n                                  ? pro.img.order\r\n                                  : \"\"\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n                            <button\r\n                              className=\"minus\"\r\n                              data-id={pro.id}\r\n                              onClick={(event) => {\r\n                                sendMinus(\r\n                                  {\r\n                                    id: pro.id,\r\n                                    app_id: pro.app_id,\r\n                                    app_name: pro.app_name,\r\n                                    img: pro.img !== null ? pro.img.order : \"\",\r\n                                    name: pro.name,\r\n                                    price: pro.price,\r\n                                    category: item.name,\r\n                                    count: 0,\r\n                                  },\r\n                                  event\r\n                                );\r\n                              }}\r\n                            >\r\n                              -\r\n                            </button>\r\n                            <button\r\n                              className=\"plus\"\r\n                              data-id={pro.id}\r\n                              onClick={(event) => {\r\n                                sendPlus(\r\n                                  {\r\n                                    id: pro.id,\r\n                                    app_id: pro.app_id,\r\n                                    app_name: pro.app_name,\r\n                                    img: pro.img !== null ? pro.img.order : \"\",\r\n                                    price: pro.price,\r\n                                    name: pro.name,\r\n                                    category: item.name,\r\n                                    count: 1,\r\n                                  },\r\n                                  event\r\n                                );\r\n                              }}\r\n                            >\r\n                              +\r\n                            </button>\r\n                            <div\r\n                              className=\"show\"\r\n                              style={{\r\n                                display:\r\n                                  product.filter((id) => id.id === pro.id)\r\n                                    .length !== 0\r\n                                    ? \"block\"\r\n                                    : \"none\",\r\n                              }}\r\n                            >\r\n                              {product.filter((id) => id.id === pro.id)\r\n                                .length !== 0\r\n                                ? product.filter((id) => id.id === pro.id)[0]\r\n                                    .count\r\n                                : \"\"}\r\n                            </div>\r\n                          </div>\r\n                          <strong>{pro.name}</strong>\r\n                          {/* <span>{item.name}</span> */}\r\n                          <div className=\"flex\">\r\n                            <p className=\"priceBtn\">\r\n                              <span>{pro.price}</span>\r\n                              {/* <i>\r\n                                                                              13%\r\n                                                                </i> */}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </Tab>\r\n              ))}\r\n            </Tabs>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                height: 500,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                id=\"preloader\"\r\n                aria-busy=\"true\"\r\n                aria-label=\"Loading, please wait.\"\r\n                role=\"progressbar\"\r\n              ></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Container>\r\n      <div className=\"order__result\">\r\n          <p>\r\n          {t('ÜMUMİ MƏBLƏĞ')}:\r\n            <span className=\"res\">\r\n              {total.length !== 0 && total.length !== 0\r\n                ? total.reduce(reducer) + \" AZN\"\r\n                : 0 + \" AZN\"}\r\n            </span>\r\n          </p>\r\n          <div className=\"btnBoxs\">\r\n            <NavLink\r\n              to={\r\n                total !== undefined &&\r\n                total.length !== 0 &&\r\n                total.reduce(reducer) >= minAmount\r\n                  ? \"/ordercomplete\"\r\n                  : \"/order\"\r\n              }\r\n              onClick={() => {\r\n                checkedAmount();\r\n                checkedThief();\r\n              }}\r\n            >\r\n              <button className=\"success\">{t('İrəli')}</button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      {/* <div id=\"map\">\r\n        {settings.isLoading === false && <Map locations={locate} />}\r\n      </div> */}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\location\\location.js",["214","215","216","217"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// css\r\nimport \"./css/_location.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container, Input } from \"reactstrap\";\r\n\r\n// react router dom\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// map\r\n\r\nimport Map from \"../map/map\";\r\n\r\n// react router dom\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// query\r\nimport { useQuery, useMutation } from \"react-query\";\r\n\r\n// baseUrl\r\nimport { baseUrl } from \"../../api/api\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n//  jquery\r\nimport $ from \"jquery\";\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\n// atoms\r\n\r\nimport { order } from \"../../atoms/atoms\";\r\n\r\n// sweet alert\r\nimport swal from \"sweetalert\";\r\n\r\n// map\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\n// mapStyle\r\nimport mapStyle from \"../map/mapStyle\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Location = () => {\r\n  let history = useHistory();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  if (JSON.parse(localStorage.getItem(\"items\")) === null) {\r\n    history.push({\r\n      pathname: \"/order\",\r\n    });\r\n  }\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const locate =\r\n    settings.isLoading === false &&\r\n    settings.data.data.map_location.map((item) => [\r\n      Number(item.lat),\r\n      Number(item.long),\r\n    ]);\r\n\r\n  let [updatedPage, setUpdatedPage] = useState(true);\r\n\r\n  let { data, isLoading } = useQuery(\r\n    [\"infoLocation\"],\r\n    async (key) => {\r\n      const res = axios.get(baseUrl + \"selectable?include=cities\");\r\n\r\n      return res;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  let [id, setId] = useState(null);\r\n  let [name, setName] = useState();\r\n  let [phone, setPhone] = useState();\r\n  let [address, setAddress] = useState();\r\n  let [city_id, setCity] = useState();\r\n  let [lati, setLati] = useState(40.34126114625568);\r\n  let [lang, setLang] = useState(48.83849702929688);\r\n  let [checkedCity, setCheckedCity] = useState();\r\n\r\n  let params = {\r\n    name: name,\r\n    phone: phone,\r\n    address: address,\r\n    city_id: city_id,\r\n    lat: lati,\r\n    lang: lang,\r\n    id: id,\r\n  };\r\n\r\n  // register\r\n  const mutationAdd = useMutation(\r\n    (add) => axios.post(baseUrl + \"address/add\", add),\r\n    {\r\n      onSuccess: function (succ) {\r\n        if (succ.status === 200) {\r\n          setId();\r\n          setName();\r\n          setPhone();\r\n          setAddress();\r\n          $(\".openAddPopup input\").val(\"\");\r\n        }\r\n      },\r\n      onError: function (error) {\r\n        swal({\r\n          title: t(\"Inputlari Doldurmaniz Lazimdir!\"),\r\n          icon: \"error\",\r\n          button: \"Bağla\",\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const mutationUpdated = useMutation(\r\n    (update) => axios.put(baseUrl + \"address\", update),\r\n    {\r\n      onSuccess: function (succ) {\r\n        if (succ.status === 200) {\r\n          $(\".formItem input\").val(\"\");\r\n          setId();\r\n          setName();\r\n          setPhone();\r\n          setAddress();\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  let addressApi = useQuery(\r\n    [\"addressApi\", mutationUpdated.data, mutationAdd.data],\r\n    async (key) => {\r\n      const res = axios.get(baseUrl + \"address\");\r\n\r\n      return res;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      cacheTime:\r\n        localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n          ? 0\r\n          : 5000,\r\n    }\r\n  );\r\n\r\n  let [allOder, setOrder] = useRecoilState(order);\r\n\r\n  let orderValue = useRecoilValue(order);\r\n\r\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n  useLayoutEffect(() => {\r\n    setCity(\r\n      isLoading === false &&\r\n        data !== undefined &&\r\n        data.data.data.cities.data[0].id\r\n    );\r\n\r\n    $(\".changeInfo\").on(\"click\", function () {\r\n      setOrder({\r\n        address_id: $(this).attr(\"data-id\"),\r\n        payment_method: orderValue !== null ? orderValue.payment_method : null,\r\n        amount:\r\n          JSON.parse(localStorage.getItem(\"total\")) != null\r\n            ? JSON.parse(localStorage.getItem(\"total\")).reduce(reducer)\r\n            : null,\r\n        is_exspress: null,\r\n        items: JSON.parse(localStorage.getItem(\"items\")),\r\n      });\r\n\r\n      $(\".changeInfo\").show();\r\n\r\n      $(\".changeInfo\").find(\"input\").prop(\"checked\", false);\r\n\r\n      $(\".changeInfo\").next().css({\r\n        opacity: 0,\r\n      });\r\n\r\n      $(this).find(\"input\").prop(\"checked\", true);\r\n\r\n      $(this).hide();\r\n\r\n      $(this).next().css({\r\n        opacity: 1,\r\n      });\r\n    });\r\n\r\n    $.each($(\".changeInfo\"), function (index, item) {\r\n      if (orderValue !== null) {\r\n        if ($(item).attr(\"data-id\") === orderValue.address_id) {\r\n          $(item).hide();\r\n          $(item).next().css({\r\n            opacity: 1,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    $(\".sendInfo\").on(\"click\", function () {\r\n      $(\".openAddPopup\").hide();\r\n\r\n      $(\".openUpdatedPopup\").hide();\r\n    });\r\n\r\n    $(\".sendInfoMap\").on(\"click\", function () {\r\n      $(\".infoPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 55555,\r\n      });\r\n\r\n      $(\".openMapPopup\").hide();\r\n    });\r\n\r\n    $(\".showPin\").on(\"click\", function () {\r\n      $(\".openMapPopup\").show();\r\n\r\n      $(\".infoPopup\").css({\r\n        opacity: 0,\r\n        zIndex: -1,\r\n      });\r\n\r\n      $(\".openMapPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 5555,\r\n      });\r\n    });\r\n\r\n    $(\".closeModalMap\").on(\"click\", function () {\r\n      $(\".infoPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 55555,\r\n      });\r\n\r\n      $(\".openMapPopup\").hide();\r\n    });\r\n  }, [addressApi.data]);\r\n\r\n  // myMap\r\n\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: \"\",\r\n    zoomMap: 7,\r\n    selectedPlace: \"\",\r\n    center: {\r\n      lat: Number(lati),\r\n      lng: Number(lang),\r\n    },\r\n    show: false,\r\n    positions: \"\",\r\n    langlat: null,\r\n  });\r\n\r\n  const mapContainerStyle = {\r\n    height: \"409px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  // map style and checkking controls\r\n  const mapOptions = {\r\n    styles: mapStyle,\r\n    fullscreenControl: false,\r\n    streetViewControl: false,\r\n    mapTypeControl: false,\r\n    zoomControl: false,\r\n  };\r\n\r\n  return (\r\n    <main className=\"location locationCon loginLocation\">\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t(\"ONLİNE SİFARİŞ\")}</h4>\r\n        </Container>\r\n      </div>\r\n      <div className=\"locationWrapper\">\r\n        <Container>\r\n          <div className=\"order__breadCrumbs\">\r\n            <span>{t(\"SİFARİŞ\")}</span>\r\n            <span>{t(\"Sifarişlərim\")}</span>\r\n            <span className=\"activCrumbs\">{t(\"ÜNVAN SEÇ\")}</span>\r\n          </div>\r\n          <div className=\"info__content\">\r\n            {/* map popup */}\r\n            <div className=\"infoPopup openMapPopup\">\r\n              <div className=\"info__WrapperModal\">\r\n                <button\r\n                  className=\"closeModal closeModalMap\"\r\n                  onClick={(event) => {\r\n                    document.querySelector(\".openMapPopup\").style.display =\r\n                      \"none\";\r\n                  }}\r\n                >\r\n                  x\r\n                </button>\r\n                <h4>{t(\"Xəritə\")}</h4>\r\n                <LoadScript googleMapsApiKey=\"AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw\">\r\n                  <GoogleMap\r\n                    id=\"mapCoordinate\"\r\n                    mapContainerStyle={mapContainerStyle}\r\n                    zoom={state.zoomMap}\r\n                    center={state.center}\r\n                    options={mapOptions}\r\n                  >\r\n                    <Marker\r\n                      draggable={true}\r\n                      onDrag={(event) => {\r\n                        setLang(event.latLng.lng());\r\n                        setLati(event.latLng.lat());\r\n                      }}\r\n                      icon={{\r\n                        url: require(\"../../images/pin.png\").default,\r\n                        // size: { width: 30, height: 30, }\r\n                      }}\r\n                      position={{\r\n                        lat: Number(lati),\r\n                        lng: Number(lang),\r\n                      }}\r\n                      animation={2}\r\n                    />\r\n                  </GoogleMap>\r\n                </LoadScript>\r\n                <div className=\"mapInp\">\r\n                  <div>\r\n                    <p>Lat</p>\r\n                    <Input\r\n                      value={lati}\r\n                      onChange={(event) => {\r\n                        setLati(event.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <p>Lang</p>\r\n                    <Input\r\n                      value={lang}\r\n                      onChange={(event) => {\r\n                        setLang(event.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button className=\"sendInfoMap\">{t(\"YADDA SAXLA\")}</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"infoFlexFull\">\r\n              <div className=\"infoPopup openUpdatedPopup\">\r\n                <div className=\"info__WrapperModal\">\r\n                  <button\r\n                    className=\"closeModal\"\r\n                    onClick={(event) => {\r\n                      document.querySelector(\r\n                        \".openUpdatedPopup\"\r\n                      ).style.display = \"none\";\r\n                    }}\r\n                  >\r\n                    x\r\n                  </button>\r\n                  <h4>{t(\"YENILE\")}</h4>\r\n                  <div className=\"formBox\">\r\n                    <div className=\"formItem\">\r\n                      <span>Ad:</span>\r\n                      <Input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(event) => {\r\n                          setName(event.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Telefon\")}:</span>\r\n                      <Input\r\n                        type=\"phone\"\r\n                        value={phone}\r\n                        onChange={(event) => {\r\n                          setPhone(event.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"formItem fromLocate\">\r\n                      <span>{t(\"Ünvan\")}:</span>\r\n                      <Input\r\n                        type=\"text\"\r\n                        value={address}\r\n                        onChange={(event) => {\r\n                          setAddress(event.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Xəritədə göstər\")}:</span>\r\n                      <p className=\"showPin\">\r\n                        <img\r\n                          src={require(\"../../images/newPin.png\").default}\r\n                          alt=\"\"\r\n                        />\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Şəhər\")}:</span>\r\n                      <select\r\n                        onChange={(event) => {\r\n                          setCity(parseInt(event.target.value));\r\n                        }}\r\n                      >\r\n                        {isLoading === false &&\r\n                          data !== undefined &&\r\n                          data.data.data.length !== 0 &&\r\n                          data.data.data.cities.data.map((item, index) => (\r\n                            <option\r\n                              key={item.id}\r\n                              value={item.id}\r\n                              defaultValue={city_id}\r\n                              selected={\r\n                                checkedCity !== undefined &&\r\n                                item.id === checkedCity.city.data.id\r\n                                  ? \"selected\"\r\n                                  : \"\"\r\n                              }\r\n                            >\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"sendInfo\"\r\n                    onClick={() => {\r\n                      setUpdatedPage(true);\r\n                      mutationUpdated.mutate(params);\r\n                    }}\r\n                  >\r\n                    {t(\"ƏLAVƏ ET\")}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* add */}\r\n              <div className=\"infoPopup openAddPopup\">\r\n                <div className=\"info__WrapperModal\">\r\n                  <button\r\n                    className=\"closeModal\"\r\n                    onClick={(event) => {\r\n                      document.querySelector(\".openAddPopup\").style.display =\r\n                        \"none\";\r\n                    }}\r\n                  >\r\n                    x\r\n                  </button>\r\n                  <h4>{t(\"YENILE\")}</h4>\r\n                  <div className=\"formBox\">\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Ad\")}:</span>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={(event) => {\r\n                          setName(event.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Telefon\")}:</span>\r\n                      <Input\r\n                        type=\"phone\"\r\n                        onChange={(event) => {\r\n                          setPhone(event.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"formItem fromLocate\">\r\n                      <span>{t(\"Ünvan\")}:</span>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={(event) => {\r\n                          setAddress(event.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Xəritədə göstər\")}:</span>\r\n                      <p className=\"showPin\">\r\n                        <img\r\n                          src={require(\"../../images/newPin.png\").default}\r\n                          alt=\"\"\r\n                        />\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"formItem\">\r\n                      <span>{t(\"Şəhər\")}:</span>\r\n                      <select\r\n                        onChange={(event) => {\r\n                          setCity(parseInt(event.target.value));\r\n                        }}\r\n                      >\r\n                        {isLoading === false &&\r\n                          data !== undefined &&\r\n                          data.data.data.length !== 0 &&\r\n                          data.data.data.cities.data.map((item) => (\r\n                            <option key={item.id} value={item.id}>\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"sendInfo\"\r\n                    onClick={() => {\r\n                      if (address !== undefined) {\r\n                        setUpdatedPage(true);\r\n                        mutationAdd.mutate(params);\r\n                      } else {\r\n                        swal({\r\n                          title: t(\"Inputlari Doldurmaniz Lazimdir!\"),\r\n                          icon: \"error\",\r\n                          button: t(\"Bağla\"),\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {t(\"ƏLAVƏ ET\")}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"formBox\">\r\n                {addressApi.isLoading === false && addressApi !== undefined ? (\r\n                  addressApi.data.data.data.map((item, index) => (\r\n                    <div className=\"location__content\" key={item.id}>\r\n                      <div className=\"location__contentLeft\">\r\n                        <p>\r\n                          {t(\"Ev ünvanım\")}:<span>{item.address}</span>\r\n                        </p>\r\n                        <p\r\n                          className=\"editIcon\"\r\n                          data-id={item.id}\r\n                          data-index={index}\r\n                          onClick={(event) => {\r\n                            document.querySelector(\r\n                              \".openUpdatedPopup\"\r\n                            ).style.display = \"block\";\r\n                            setId(Number(event.target.getAttribute(\"data-id\")));\r\n                            setName(\r\n                              addressApi.isLoading === false\r\n                                ? addressApi.data.data.data[\r\n                                    event.target.getAttribute(\"data-index\")\r\n                                  ].name\r\n                                : \"\"\r\n                            );\r\n                            setPhone(\r\n                              addressApi.isLoading === false\r\n                                ? addressApi.data.data.data[\r\n                                    event.target.getAttribute(\"data-index\")\r\n                                  ].phone\r\n                                : \"\"\r\n                            );\r\n                            setAddress(\r\n                              addressApi.isLoading === false\r\n                                ? addressApi.data.data.data[\r\n                                    event.target.getAttribute(\"data-index\")\r\n                                  ].address\r\n                                : \"\"\r\n                            );\r\n                            setCheckedCity(\r\n                              isLoading === false\r\n                                ? addressApi.data.data.data[\r\n                                    event.target.getAttribute(\"data-index\")\r\n                                  ]\r\n                                : \"\"\r\n                            );\r\n                            setLang(\r\n                              addressApi.isLoading === false\r\n                                ? addressApi.data.data.data[\r\n                                    event.target.getAttribute(\"data-index\")\r\n                                  ].lang\r\n                                : \"\"\r\n                            );\r\n                            setLati(\r\n                              addressApi.isLoading === false\r\n                                ? addressApi.data.data.data[\r\n                                    event.target.getAttribute(\"data-index\")\r\n                                  ].lat\r\n                                : \"\"\r\n                            );\r\n                          }}\r\n                        ></p>\r\n                      </div>\r\n                      <div className=\"location__contentRight\">\r\n                        <span className=\"changeInfo\" data-id={item.id}>\r\n                          {t(\"SEÇ\")}\r\n                          <input name=\"address_id\" type=\"radio\" />\r\n                        </span>\r\n                        <i style={{ opacity: 0 }} className=\"checkedI\">\r\n                          <FontAwesomeIcon icon={faCheck} />\r\n                        </i>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      height: 500,\r\n                      width: \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      id=\"preloader\"\r\n                      aria-busy=\"true\"\r\n                      aria-label=\"Loading, please wait.\"\r\n                      role=\"progressbar\"\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"order__result noBoxShadow\">\r\n            <div className=\"login__sendBtn infoSend\">\r\n              <button\r\n                onClick={() => {\r\n                  document.querySelector(\".openAddPopup\").style.display =\r\n                    \"block\";\r\n                  setUpdatedPage(false);\r\n                  setAddress();\r\n                }}\r\n              >\r\n                {t(\"ÜNVAN ƏLAVƏ ET\")}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"btnBoxs\">\r\n              <NavLink to={\"/ordercomplete\"}>\r\n                <button className=\"success\">{t(\"Geri\")}</button>\r\n              </NavLink>\r\n              <NavLink\r\n                to={\r\n                  orderValue !== null\r\n                    ? orderValue.address_id === null\r\n                      ? \"/location\"\r\n                      : \"/payment\"\r\n                    : \"/location\"\r\n                }\r\n              >\r\n                <button\r\n                  className=\"success\"\r\n                  onClick={() => {\r\n                    if (orderValue === null) {\r\n                      swal({\r\n                        title: t(\"Seçim etməmisiniz!\"),\r\n                        icon: \"error\",\r\n                        button: t(\"Bağla\"),\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  {t(\"İrəli\")}\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      {settings.isLoading === false && <Map locations={locate} />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginInformation\\loginInformation.js",["218","219","220"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_info.scss\";\r\n\r\n// tools\r\n\r\n// react router dom\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// reactstrap\r\nimport { Container, Input } from \"reactstrap\";\r\n\r\n// component\r\nimport Map from \"../map/map\";\r\n\r\n// query\r\nimport { useQuery, useMutation } from \"react-query\";\r\n\r\n// baseUrl\r\nimport { baseUrl } from \"../../api/api\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// queries\r\n\r\nimport { user } from \"../../queries/queries\";\r\n\r\n// swal\r\nimport swal from \"sweetalert\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// atoms\r\nimport { userInfo } from \"../../atoms/atoms\";\r\n\r\n// recoil\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nconst LoginInformation = () => {\r\n  let history = useHistory();\r\n\r\n  let [refresh, setRefresh] = useState();\r\n\r\n  let { t } = useTranslation();\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const locate =\r\n    settings.isLoading === false &&\r\n    settings.data !== undefined &&\r\n    settings.data.data.map_location.map((item) => [\r\n      Number(item.lat),\r\n      Number(item.long),\r\n    ]);\r\n\r\n  // user information\r\n\r\n  const mutation = useMutation(\r\n    (update) => axios.put(baseUrl + \"user\", update),\r\n    {\r\n      onSuccess: function (succ) {\r\n        if (succ.status === 200) {\r\n          swal({\r\n            title: t(\"Profil Məlumatlarınız Yeniləndi\"),\r\n            icon: \"success\",\r\n            button: \"Bağla\",\r\n          });\r\n\r\n          document\r\n            .querySelector(\".perloaderOrder\")\r\n            .classList.remove(\"showPerloader\");\r\n          localStorage.removeItem(\"user\");\r\n          localStorage.setItem(\"user\", JSON.stringify(params));\r\n        }\r\n      },\r\n      onError: function (err) {\r\n        if (err) {\r\n          document\r\n            .querySelector(\".perloaderOrder\")\r\n            .classList.remove(\"showPerloader\");\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  let [name, setName] = useState();\r\n  let [surname, setSurname] = useState();\r\n  let [phone, setPhone] = useState();\r\n  let [email, setEmail] = useState();\r\n\r\n  let params = {\r\n    name: name,\r\n    surname: surname,\r\n    phone: phone,\r\n    email: email,\r\n  };\r\n\r\n  let [userData, setUserData] = useRecoilState(userInfo);\r\n\r\n  let { data, isLoading } = useQuery([\"user\", \"\", mutation.data], user, {\r\n    refetchOnWindowFocus: false,\r\n    cacheTime:\r\n      localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n        ? 0\r\n        : 5000,\r\n    onSuccess: function (succ) {\r\n      if (succ) {\r\n        setUserData(succ.data);\r\n      }\r\n    },\r\n    onError: function (err) {\r\n      if (err) {\r\n        history.push({\r\n          pathname: \"/signin\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  if (localStorage.getItem(\"token\") === null) {\r\n    history.push({\r\n      pathname: \"/signin\",\r\n    });\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (data !== undefined) {\r\n      setName(data.data.name);\r\n      setSurname(data.data.surname);\r\n      setPhone(data.data.phone);\r\n      setEmail(data.data.email);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <main className=\"info\">\r\n      <div className=\"perloaderOrder\">\r\n        <div\r\n          style={{\r\n            height: 300,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            id=\"preloader\"\r\n            aria-busy=\"true\"\r\n            aria-label=\"Loading, please wait.\"\r\n            role=\"progressbar\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t(\"ONLİNE SİFARİŞ\")}</h4>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <div className=\"info__top\">\r\n          <div className=\"info__topItem\">\r\n            <NavLink to={\"/loginorder\"}>{t(\"Sifarişlərim\")}</NavLink>\r\n            <NavLink to={\"/loginlocation\"}>{t(\"Ünvanlarım\")}</NavLink>\r\n            <NavLink to={\"/logininformation\"} className=\"activeMenu\">\r\n              {t(\"Məlumatlarım\")}\r\n            </NavLink>\r\n            <NavLink to={\"/passwordupdate\"}>{t(\"Şifrəni yenilə\")}</NavLink>\r\n            <NavLink\r\n              to={\"/index\"}\r\n              onClick={() => {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"user\");\r\n              }}\r\n            >\r\n              {t(\"Çıxış\")}\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className=\"info__content\">\r\n          <div className=\"formBox\">\r\n            <div className=\"formItem\">\r\n              <span>{t(\"Ad\")}</span>\r\n              {isLoading === false ? (\r\n                <Input\r\n                  value={name}\r\n                  onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    height: 60,\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      right: 0,\r\n                      width: 20,\r\n                      height: 20,\r\n                    }}\r\n                    id=\"preloader\"\r\n                    aria-busy=\"true\"\r\n                    aria-label=\"Loading, please wait.\"\r\n                    role=\"progressbar\"\r\n                  ></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"formItem\">\r\n              <span>{t(\"SOYAD\")}</span>\r\n              {isLoading === false ? (\r\n                <Input\r\n                  value={surname}\r\n                  onChange={(event) => {\r\n                    setSurname(event.target.value);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    height: 60,\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      right: 0,\r\n                      width: 20,\r\n                      height: 20,\r\n                    }}\r\n                    id=\"preloader\"\r\n                    aria-busy=\"true\"\r\n                    aria-label=\"Loading, please wait.\"\r\n                    role=\"progressbar\"\r\n                  ></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"formItem\">\r\n              <span>{t(\"Telefon\")}</span>\r\n              {isLoading === false ? (\r\n                <Input\r\n                  value={phone}\r\n                  onChange={(event) => {\r\n                    setPhone(event.target.value);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    height: 60,\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      right: 0,\r\n                      width: 20,\r\n                      height: 20,\r\n                    }}\r\n                    id=\"preloader\"\r\n                    aria-busy=\"true\"\r\n                    aria-label=\"Loading, please wait.\"\r\n                    role=\"progressbar\"\r\n                  ></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"formItem\">\r\n              <span>{t(\"Email\")}</span>\r\n              {isLoading === false ? (\r\n                <Input\r\n                  value={email}\r\n                  onChange={(event) => {\r\n                    setEmail(event.target.value);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    height: 60,\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      right: 0,\r\n                      width: 20,\r\n                      height: 20,\r\n                    }}\r\n                    id=\"preloader\"\r\n                    aria-busy=\"true\"\r\n                    aria-label=\"Loading, please wait.\"\r\n                    role=\"progressbar\"\r\n                  ></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/* <div className='formItem'>\r\n                            <span>Dogum tarixi:</span>\r\n                            <p>13/09/1997</p>\r\n                        </div>\r\n                        <div className='formItem'>\r\n                            <span>Cinsiyyet:</span>\r\n                            <p>Kişi</p>\r\n                        </div> */}\r\n          </div>\r\n          <div className=\"login__sendBtn infoSend\">\r\n            <button\r\n              onClick={() => {\r\n                mutation.mutate(params);\r\n                document\r\n                  .querySelector(\".perloaderOrder\")\r\n                  .classList.add(\"showPerloader\");\r\n              }}\r\n            >\r\n              {t(\"YADDA SAXLA\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n\r\n      <div id=\"map\">\r\n        {settings.isLoading === false ? (\r\n          <Map locations={locate} />\r\n        ) : (\r\n          <div\r\n            style={{\r\n              height: 300,\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              id=\"preloader\"\r\n              aria-busy=\"true\"\r\n              aria-label=\"Loading, please wait.\"\r\n              role=\"progressbar\"\r\n            ></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginInformation;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginOrder\\loginOrder.js",["221","222","223"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_loginOrder.scss\";\r\n\r\n// tools\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// reactstrap\r\nimport { Container, Col, Row, Input } from \"reactstrap\";\r\n\r\n// query\r\nimport { useQuery } from \"react-query\";\r\nimport { loginOrder, user } from \"../../queries/queries\";\r\n\r\n// jquery\r\nimport $ from \"jquery\";\r\n\r\n// helper\r\nimport { createDate, capitalize } from \"../../helper/helper\";\r\n\r\n// map\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\n// mapStyle\r\nimport mapStyle from \"../map/mapStyle\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// atoms\r\nimport { userInfo } from \"../../atoms/atoms\";\r\n\r\n// recoil\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nconst LoginOrder = () => {\r\n  let history = useHistory();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  let [userData, setUserData] = useRecoilState(userInfo);\r\n\r\n  useQuery([\"user\", \"\"], user, {\r\n    refetchOnWindowFocus: false,\r\n    cacheTime:\r\n      localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n        ? 0\r\n        : 5000,\r\n    onSuccess: function (succ) {\r\n      if (succ) {\r\n        setUserData(succ.data);\r\n      }\r\n    },\r\n    onError: function (err) {\r\n      if (err) {\r\n        history.push({\r\n          pathname: \"/signin\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  let { data, isLoading } = useQuery([\"loginOrder\", \"\"], loginOrder, {\r\n    refetchOnWindowFocus: false,\r\n    cacheTime:\r\n      localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n        ? 0\r\n        : 5000,\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    $(\".showPin\").on(\"click\", function () {\r\n      $(\".openMapPopup\").show();\r\n\r\n      $(\".infoPopup\").css({\r\n        opacity: 0,\r\n        zIndex: -1,\r\n      });\r\n\r\n      $(\".openMapPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 5555,\r\n      });\r\n    });\r\n\r\n    $(\".closeModalMap\").on(\"click\", function () {\r\n      $(\".infoPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 55555,\r\n      });\r\n\r\n      $(\".openMapPopup\").hide();\r\n    });\r\n\r\n    $(\".sendInfoMap\").on(\"click\", function () {\r\n      $(\".infoPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 55555,\r\n      });\r\n\r\n      $(\".openMapPopup\").hide();\r\n    });\r\n\r\n    $(\".orderLogin__top\").on(\"click\", function () {\r\n      $(this).next().stop().slideToggle();\r\n    });\r\n  }, [data]);\r\n\r\n  if (localStorage.getItem(\"token\") === null) {\r\n    history.push({\r\n      pathname: \"/signin\",\r\n    });\r\n  }\r\n\r\n  let [adress, setAdress] = useState();\r\n\r\n  let [lati, setLati] = useState(null);\r\n  let [lang, setLang] = useState(null);\r\n\r\n  // map\r\n\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: \"\",\r\n    zoomMap: 7,\r\n    selectedPlace: \"\",\r\n    center: {\r\n      lat: Number(lati),\r\n      lng: Number(lang),\r\n    },\r\n    show: false,\r\n    positions: \"\",\r\n    langlat: null,\r\n  });\r\n\r\n  const mapContainerStyle = {\r\n    height: \"409px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  // map style and checkking controls\r\n  const mapOptions = {\r\n    styles: mapStyle,\r\n    fullscreenControl: false,\r\n    streetViewControl: false,\r\n    mapTypeControl: false,\r\n    zoomControl: false,\r\n  };\r\n\r\n  return (\r\n    <main className=\"info order loginLocation\">\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t(\"ONLİNE SİFARİŞ\")}</h4>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <div className=\"info__top\">\r\n          <div className=\"info__topItem\">\r\n            <NavLink to={\"/loginorder\"} className=\"activeMenu\">\r\n              {t(\"Sifarişlərim\")}\r\n            </NavLink>\r\n            <NavLink to={\"/loginlocation\"}>{t(\"Ünvanlarım\")}</NavLink>\r\n            <NavLink to={\"/logininformation\"}>{t(\"Məlumatlarım\")}</NavLink>\r\n            <NavLink to={\"/passwordupdate\"}>{t(\"Şifrəni yenilə\")}</NavLink>\r\n            <NavLink\r\n              to={\"/index\"}\r\n              onClick={() => {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"user\");\r\n              }}\r\n            >\r\n              {t(\"Çıxış\")}\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        {/* map popup */}\r\n        <div className=\"infoPopup openMapPopup\">\r\n          <div className=\"info__WrapperModal\">\r\n            <button\r\n              className=\"closeModal closeModalMap\"\r\n              onClick={(event) => {\r\n                document.querySelector(\".openMapPopup\").style.display = \"none\";\r\n              }}\r\n            >\r\n              x\r\n            </button>\r\n            <h4>{t(\"Xəritə\")}</h4>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw\">\r\n              <GoogleMap\r\n                id=\"mapCoordinate\"\r\n                mapContainerStyle={mapContainerStyle}\r\n                zoom={state.zoomMap}\r\n                center={{\r\n                  lat: Number(lati),\r\n                  lng: Number(lang),\r\n                }}\r\n                options={mapOptions}\r\n              >\r\n                <Marker\r\n                  draggable={false}\r\n                  onDrag={(event) => {\r\n                    setLang(event.latLng.lng());\r\n                    setLati(event.latLng.lat());\r\n                  }}\r\n                  icon={{\r\n                    url: require(\"../../images/pin.png\").default,\r\n                    // size: { width: 30, height: 30, }\r\n                  }}\r\n                  position={{\r\n                    lat: Number(lati),\r\n                    lng: Number(lang),\r\n                  }}\r\n                  animation={2}\r\n                />\r\n              </GoogleMap>\r\n            </LoadScript>\r\n            <button className=\"sendInfoMap\">{t(\"Bağla\")}</button>\r\n          </div>\r\n        </div>\r\n        {/* info popup */}\r\n        <div className=\"infoPopup openUpdatedPopup\">\r\n          <div className=\"info__WrapperModal\">\r\n            <button\r\n              className=\"closeModal\"\r\n              onClick={(event) => {\r\n                document.querySelector(\".openUpdatedPopup\").style.display =\r\n                  \"none\";\r\n              }}\r\n            >\r\n              x\r\n            </button>\r\n            <h4>{t(\"TƏSLİMAT ÜNVANI\")}</h4>\r\n            <div className=\"formBox\">\r\n              <div className=\"formItem\">\r\n                <span>{t(\"Ad\")}</span>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={adress !== undefined ? adress.name : \"\"}\r\n                />\r\n              </div>\r\n              <div className=\"formItem\">\r\n                <span>{t(\"Telefon\")}</span>\r\n                <Input\r\n                  type=\"phone\"\r\n                  value={adress !== undefined ? adress.phone : \"\"}\r\n                />\r\n              </div>\r\n              <div className=\"formItem fromLocate\">\r\n                <span>{t(\"Ünvan\")}</span>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={adress !== undefined ? adress.address : \"\"}\r\n                />\r\n              </div>\r\n              <div className=\"formItem\">\r\n                <span>{t(\"Xəritədə göstər\")}</span>\r\n                <p className=\"showPin\">\r\n                  <img\r\n                    src={require(\"../../images/newPin.png\").default}\r\n                    alt=\"\"\r\n                  />\r\n                </p>\r\n              </div>\r\n              <div className=\"formItem\">\r\n                <span>{t(\"Şəhər\")}</span>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={adress !== undefined ? adress.city.data.name : \"\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isLoading === false && data != undefined ? (\r\n          data.order !== undefined ? (\r\n            \"\"\r\n          ) : (\r\n            data.data.map((item, index) => (\r\n              <div className=\"orderLogin__info\" key={index}>\r\n                <div className=\"orderLogin__top\">\r\n                  <p>\r\n                    {index + 1 + \" :\"}\r\n                    <span>\r\n                      {createDate(item.created_at).newDate +\r\n                        \" \" +\r\n                        capitalize(createDate(item.created_at).month) +\r\n                        \" \" +\r\n                        createDate(item.created_at).year}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    {t(\"MƏHSUL\")}\r\n                    <span>{item.items.data.length + \" ədəd\"}</span>\r\n                  </p>\r\n                  <p>\r\n                    {t(\"QİYMƏT\")}\r\n                    <span>{item.amount}</span>\r\n                  </p>\r\n                  <p>\r\n                    {t(\"STATUS\")}\r\n                    <span>{item.status}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"order__content\">\r\n                  <Row>\r\n                    {item.items.data.map((product, index) => (\r\n                      <Col md=\"6\" lg=\"2\" key={index}>\r\n                        <div className=\"order__itemBox\">\r\n                          <div className=\"order__itemBox--img\">\r\n                            <img\r\n                              src={\r\n                                product.product.data.img !== null &&\r\n                                product.product.data.img.length !== 0\r\n                                  ? product.product.data.img.order\r\n                                  : \"\"\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <strong>{product.product.data.name}</strong>\r\n                          {/* <span>qısa</span> */}\r\n                          <div className=\"flex\">\r\n                            <p className=\"priceBtn\">\r\n                              <span data-minus=\"-20%\">\r\n                                {product.product.data.price}\r\n                              </span>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                  <div className=\"order__buttonBox\">\r\n                    <NavLink\r\n                      data-index={index}\r\n                      to={\"#\"}\r\n                      onClick={(event) => {\r\n                        document.querySelector(\r\n                          \".openUpdatedPopup\"\r\n                        ).style.display = \"block\";\r\n                        setAdress(\r\n                          isLoading === false &&\r\n                            data !== undefined &&\r\n                            data.data[event.target.getAttribute(\"data-index\")]\r\n                              .address.data\r\n                        );\r\n                        setLati(\r\n                          isLoading === false &&\r\n                            data !== undefined &&\r\n                            data.data[event.target.getAttribute(\"data-index\")]\r\n                              .address.data.lat\r\n                        );\r\n                        setLang(\r\n                          isLoading === false &&\r\n                            data !== undefined &&\r\n                            data.data[event.target.getAttribute(\"data-index\")]\r\n                              .address.data.lang\r\n                        );\r\n                      }}\r\n                    >\r\n                      {t(\"TƏSLİMAT ÜNVANI\")}\r\n                    </NavLink>\r\n                    {/* <NavLink to={'#'}>\r\n                      SİFARİŞİ QIYMƏTLƏNDİR\r\n                  </NavLink> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )\r\n        ) : (\r\n          <div\r\n            style={{\r\n              height: 250,\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              id=\"preloader\"\r\n              aria-busy=\"true\"\r\n              aria-label=\"Loading, please wait.\"\r\n              role=\"progressbar\"\r\n            ></div>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginOrder;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\loginLocation\\loginLocation.js",["224","225"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_loginLocation.scss\";\r\n\r\n// tools\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// reactstrap\r\nimport { Container, Input } from \"reactstrap\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// react query\r\nimport { useQuery, useMutation } from \"react-query\";\r\n\r\n// api\r\nimport { baseUrl } from \"../../api/api\";\r\n\r\n// jquery\r\nimport $ from \"jquery\";\r\n\r\n// map\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\n// mapStyle\r\nimport mapStyle from \"../map/mapStyle\";\r\n\r\n// sweet alert\r\nimport swal from \"sweetalert\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst LoginLocation = () => {\r\n  const { t } = useTranslation();\r\n\r\n  let { data, isLoading } = useQuery(\r\n    [\"infoLocation\"],\r\n    async (key) => {\r\n      const res = axios.get(baseUrl + \"selectable?include=cities\");\r\n\r\n      return res;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const mutationUpdated = useMutation(\r\n    (update) => axios.put(baseUrl + \"address\", update),\r\n    {\r\n      onSuccess: function () {\r\n        $(\".formItem input\").val(\"\");\r\n      },\r\n    }\r\n  );\r\n\r\n  let [id, setId] = useState(null);\r\n  let [name, setName] = useState();\r\n  let [phone, setPhone] = useState();\r\n  let [address, setAddress] = useState();\r\n  let [lati, setLati] = useState(40.34126114625568);\r\n  let [lang, setLang] = useState(48.83849702929688);\r\n  let [city_id, setCity] = useState();\r\n  let [checkedCity, setCheckedCity] = useState();\r\n\r\n  let params = {\r\n    name: name,\r\n    phone: phone,\r\n    address: address,\r\n    city_id: city_id,\r\n    id: id,\r\n    lat: lati,\r\n    lang: lang,\r\n  };\r\n\r\n  // register\r\n  const mutationAdd = useMutation(\r\n    (add) => axios.post(baseUrl + \"address/add\", add),\r\n    {\r\n      onSuccess: function (succ) {\r\n        if (succ.status === 200) {\r\n          setId();\r\n          setName();\r\n          setPhone();\r\n          setAddress();\r\n          setLang();\r\n          setLati();\r\n          $(\".openAddPopup input\").val(\"\");\r\n        }\r\n      },\r\n      onError: function (error) {\r\n        swal({\r\n          title: \"Inputlari Doldurmaniz Lazimdir!\",\r\n          icon: \"error\",\r\n          button: \"Bağla\",\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  // address\r\n\r\n  let addressApi = useQuery(\r\n    [\"addressApi\", mutationAdd.data, mutationUpdated.data],\r\n    async (key) => {\r\n      const res = axios.get(baseUrl + \"address\");\r\n\r\n      return res;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      cacheTime:\r\n        localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n          ? 0\r\n          : 5000,\r\n    }\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    setCity(\r\n      isLoading === false &&\r\n        data !== undefined &&\r\n        data.data.data.cities.data[0].id\r\n    );\r\n\r\n    $(\".sendInfo\").on(\"click\", function () {\r\n      $(\".infoPopup\").hide();\r\n    });\r\n\r\n    $(\".sendInfoMap\").on(\"click\", function () {\r\n      $(\".infoPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 55555,\r\n      });\r\n\r\n      $(\".openMapPopup\").hide();\r\n    });\r\n\r\n    $(\".showPin\").on(\"click\", function () {\r\n      $(\".openMapPopup\").show();\r\n\r\n      $(\".infoPopup\").css({\r\n        opacity: 0,\r\n        zIndex: -1,\r\n      });\r\n\r\n      $(\".openMapPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 5555,\r\n      });\r\n    });\r\n\r\n    $(\".closeModalMap\").on(\"click\", function () {\r\n      $(\".infoPopup\").css({\r\n        opacity: 1,\r\n        zIndex: 55555,\r\n      });\r\n\r\n      $(\".openMapPopup\").hide();\r\n    });\r\n  }, [addressApi.data]);\r\n\r\n  // myMap\r\n\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: \"\",\r\n    zoomMap: 7,\r\n    selectedPlace: \"\",\r\n    center: {\r\n      lat: Number(lati),\r\n      lng: Number(lang),\r\n    },\r\n    show: false,\r\n    positions: \"\",\r\n    langlat: null,\r\n  });\r\n\r\n  const mapContainerStyle = {\r\n    height: \"409px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  // map style and checkking controls\r\n  const mapOptions = {\r\n    styles: mapStyle,\r\n    fullscreenControl: false,\r\n    streetViewControl: false,\r\n    mapTypeControl: false,\r\n    zoomControl: false,\r\n  };\r\n\r\n  return (\r\n    <main className=\"info loginLocation\">\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">ONLİNE SİFARİŞ</h4>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <div className=\"info__top\">\r\n          <div className=\"info__topItem\">\r\n            <NavLink to={\"/loginorder\"}>{t(\"Sifarişlərim\")}</NavLink>\r\n            <NavLink to={\"/loginlocation\"} className=\"activeMenu\">{t(\"Ünvanlarım\")}</NavLink>\r\n            <NavLink to={\"/logininformation\"}>{t(\"Məlumatlarım\")}</NavLink>\r\n            <NavLink to={\"/passwordupdate\"}>{t(\"Şifrəni yenilə\")}</NavLink>\r\n            <NavLink\r\n              to={\"/index\"}\r\n              onClick={() => {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"user\");\r\n              }}\r\n            >\r\n              {t(\"Çıxış\")}\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className=\"info__content\">\r\n          {/* map popup */}\r\n          <div className=\"infoPopup openMapPopup\">\r\n            <div className=\"info__WrapperModal\">\r\n              <button\r\n                className=\"closeModal closeModalMap\"\r\n                onClick={(event) => {\r\n                  document.querySelector(\".openMapPopup\").style.display =\r\n                    \"none\";\r\n                }}\r\n              >\r\n                x\r\n              </button>\r\n              <h4>Xəritə</h4>\r\n              <LoadScript googleMapsApiKey=\"AIzaSyANektuMKczEQdzMI82zHlFnMTVSmT55Vw\">\r\n                <GoogleMap\r\n                  id=\"mapCoordinate\"\r\n                  mapContainerStyle={mapContainerStyle}\r\n                  zoom={state.zoomMap}\r\n                  center={state.center}\r\n                  options={mapOptions}\r\n                >\r\n                  <Marker\r\n                    draggable={true}\r\n                    onDrag={(event) => {\r\n                      setLang(event.latLng.lng());\r\n                      setLati(event.latLng.lat());\r\n                    }}\r\n                    icon={{\r\n                      url: require(\"../../images/pin.png\").default,\r\n                      // size: { width: 30, height: 30, }\r\n                    }}\r\n                    position={{\r\n                      lat: Number(lati),\r\n                      lng: Number(lang),\r\n                    }}\r\n                    animation={2}\r\n                  />\r\n                </GoogleMap>\r\n              </LoadScript>\r\n              <div className=\"mapInp\">\r\n                <div>\r\n                  <p>Lat</p>\r\n                  <Input\r\n                    value={lati}\r\n                    onChange={(event) => {\r\n                      setLati(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Lang</p>\r\n                  <Input\r\n                    value={lang}\r\n                    onChange={(event) => {\r\n                      setLang(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"sendInfoMap\">Yadda Saxla</button>\r\n            </div>\r\n          </div>\r\n          {/* mupdated popup */}\r\n          <div className=\"infoPopup openUpdatedPopup\">\r\n            <div className=\"info__WrapperModal\">\r\n              <button\r\n                className=\"closeModal\"\r\n                onClick={(event) => {\r\n                  document.querySelector(\".openUpdatedPopup\").style.display =\r\n                    \"none\";\r\n                }}\r\n              >\r\n                x\r\n              </button>\r\n              <h4>YENILE</h4>\r\n              <div className=\"formBox\">\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Ad\")}:</span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(event) => {\r\n                      setName(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Telefon\")}:</span>\r\n                  <Input\r\n                    type=\"phone\"\r\n                    value={phone}\r\n                    onChange={(event) => {\r\n                      setPhone(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"formItem fromLocate\">\r\n                  <span>{t(\"Ünvan\")}:</span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(event) => {\r\n                      setAddress(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Xəritədə göstər\")}:</span>\r\n                  <p className=\"showPin\">\r\n                    <img\r\n                      src={require(\"../../images/newPin.png\").default}\r\n                      alt=\"\"\r\n                    />\r\n                  </p>\r\n                </div>\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Şəhər\")}:</span>\r\n                  <select\r\n                    onChange={(event) => {\r\n                      setCity(event.target.value);\r\n                    }}\r\n                  >\r\n                    {isLoading === false &&\r\n                      data !== undefined &&\r\n                      data.data.data.length !== 0 &&\r\n                      data.data.data.cities.data.map((item, index) => (\r\n                        <option\r\n                          key={item.id}\r\n                          value={item.id}\r\n                          defaultValue={city_id}\r\n                          selected={\r\n                            checkedCity !== undefined &&\r\n                            item.id === checkedCity.city.data.id\r\n                              ? \"selected\"\r\n                              : \"\"\r\n                          }\r\n                        >\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"sendInfo\"\r\n                onClick={(event) => {\r\n                  mutationUpdated.mutate(params);\r\n                }}\r\n              >\r\n                {t(\"ƏLAVƏ ET\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* add */}\r\n          <div className=\"infoPopup openAddPopup\">\r\n            <div className=\"info__WrapperModal\">\r\n              <button\r\n                className=\"closeModal\"\r\n                onClick={(event) => {\r\n                  document.querySelector(\".openAddPopup\").style.display =\r\n                    \"none\";\r\n                }}\r\n              >\r\n                x\r\n              </button>\r\n              <h4>{t(\"Yeni Ünvan Əlavə et\")}</h4>\r\n              <div className=\"formBox\">\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Ad\")}:</span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={(event) => {\r\n                      setName(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Telefon\")}:</span>\r\n                  <Input\r\n                    type=\"phone\"\r\n                    onChange={(event) => {\r\n                      setPhone(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"formItem fromLocate\">\r\n                  <span>{t(\"Ünvan\")}:</span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={(event) => {\r\n                      setAddress(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Xəritədə göstər\")}:</span>\r\n                  <p className=\"showPin\">\r\n                    <img\r\n                      src={require(\"../../images/newPin.png\").default}\r\n                      alt=\"\"\r\n                    />\r\n                  </p>\r\n                </div>\r\n                <div className=\"formItem\">\r\n                  <span>{t(\"Şəhər\")}:</span>\r\n                  <select\r\n                    onChange={(event) => {\r\n                      setCity(event.target.value);\r\n                    }}\r\n                  >\r\n                    {isLoading === false &&\r\n                      data !== undefined &&\r\n                      data.data.data.length !== 0 &&\r\n                      data.data.data.cities.data.map((item) => (\r\n                        <option key={item.id}>{item.name}</option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"sendInfo\"\r\n                onClick={() => {\r\n                  if (address !== undefined) {\r\n                    mutationAdd.mutate(params);\r\n                  } else {\r\n                    swal({\r\n                      title: t(\"Bütün inputları doldurmanız lazımdır!\"),\r\n                      icon: \"error\",\r\n                      button: t(\"Bağla\"),\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                {t(\"ƏLAVƏ ET\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"formBox\">\r\n            {addressApi.isLoading === false && addressApi.data !== undefined ? (\r\n              addressApi.data.data.address !== undefined ? (\r\n                \"\"\r\n              ) : (\r\n                addressApi.data.data.data.map((item, index) => (\r\n                  <div className=\"location__content\" key={item.id}>\r\n                    <div className=\"location__contentLeft\">\r\n                      <p>\r\n                        {t(\"Ev ünvanım\")}:<span>{item.address}</span>\r\n                      </p>\r\n                      {/* <p>\r\n                            <img src={require('../../images/newPin.png').default} alt='' />\r\n                        </p> */}\r\n                    </div>\r\n                    <div className=\"location__contentRight\">\r\n                      <span\r\n                        className=\"changeInfo\"\r\n                        data-id={item.id}\r\n                        data-index={index}\r\n                        onClick={(event) => {\r\n                          document.querySelector(\r\n                            \".openUpdatedPopup\"\r\n                          ).style.display = \"block\";\r\n                          setId(Number(event.target.getAttribute(\"data-id\")));\r\n                          setName(\r\n                            addressApi.isLoading === false\r\n                              ? addressApi.data.data.data[\r\n                                  event.target.getAttribute(\"data-index\")\r\n                                ].name\r\n                              : \"\"\r\n                          );\r\n                          setPhone(\r\n                            addressApi.isLoading === false\r\n                              ? addressApi.data.data.data[\r\n                                  event.target.getAttribute(\"data-index\")\r\n                                ].phone\r\n                              : \"\"\r\n                          );\r\n                          setAddress(\r\n                            addressApi.isLoading === false\r\n                              ? addressApi.data.data.data[\r\n                                  event.target.getAttribute(\"data-index\")\r\n                                ].address\r\n                              : \"\"\r\n                          );\r\n                          setCheckedCity(\r\n                            isLoading === false\r\n                              ? addressApi.data.data.data[\r\n                                  event.target.getAttribute(\"data-index\")\r\n                                ]\r\n                              : \"\"\r\n                          );\r\n                          setLang(\r\n                            addressApi.isLoading === false\r\n                              ? addressApi.data.data.data[\r\n                                  event.target.getAttribute(\"data-index\")\r\n                                ].lang\r\n                              : \"\"\r\n                          );\r\n                          setLati(\r\n                            addressApi.isLoading === false\r\n                              ? addressApi.data.data.data[\r\n                                  event.target.getAttribute(\"data-index\")\r\n                                ].lat\r\n                              : \"\"\r\n                          );\r\n                        }}\r\n                      >\r\n                        {t(\"DÜZƏLİŞ ET\")}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  height: 200,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div\r\n                  id=\"preloader\"\r\n                  aria-busy=\"true\"\r\n                  aria-label=\"Loading, please wait.\"\r\n                  role=\"progressbar\"\r\n                ></div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"login__sendBtn infoSend\">\r\n            <button\r\n              onClick={() => {\r\n                document.querySelector(\".openAddPopup\").style.display = \"block\";\r\n                setCity(\r\n                  isLoading === false ? data.data.data.cities.data[0].name : \"\"\r\n                );\r\n                setAddress();\r\n              }}\r\n            >\r\n              {t(\"ÜNVAN ƏLAVƏ ET\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginLocation;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\payment\\payment.js",["226","227","228"],"import React, { useLayoutEffect } from \"react\";\r\n\r\n// css\r\nimport \"./css/_payment.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container } from \"reactstrap\";\r\n\r\n// react router dom\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// map\r\n\r\nimport Map from \"../map/map\";\r\n\r\n// react router dom\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// query\r\nimport { useQuery } from \"react-query\";\r\n\r\n// baseUrl\r\nimport { baseUrl } from \"../../api/api\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n//  jquery\r\nimport $, { data } from \"jquery\";\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\n// atoms\r\nimport { order, orderstatus } from \"../../atoms/atoms\";\r\n\r\n// fontawesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// helper\r\nimport { decimalAdjust } from \"../../helper/helper\";\r\n\r\n// sweet alert\r\nimport swal from \"sweetalert\";\r\n\r\n// react i18 next\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Payment = () => {\r\n  const { t } = useTranslation();\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const locate =\r\n    settings.isLoading === false &&\r\n    settings.data.data.map_location.map((item) => [\r\n      Number(item.lat),\r\n      Number(item.long),\r\n    ]);\r\n\r\n  let history = useHistory();\r\n\r\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\r\n\r\n  const reducer = (accumulator, currentValue) =>\r\n    round10(accumulator + currentValue, -1);\r\n\r\n  if (JSON.parse(localStorage.getItem(\"items\")) === null) {\r\n    history.push({\r\n      pathname: \"/order\",\r\n    });\r\n  }\r\n\r\n  let [allOder, setOrder] = useRecoilState(order);\r\n\r\n  let [ordercheck, setOrderCheck] = useRecoilState(orderstatus);\r\n\r\n  let orderValue = useRecoilValue(order);\r\n\r\n  useLayoutEffect(() => {\r\n    if (orderValue === null) {\r\n      history.push({\r\n        pathname: \"/location\",\r\n      });\r\n    }\r\n\r\n    $(\".changeInfo\").on(\"click\", function () {\r\n      setOrder({\r\n        address_id: orderValue.address_id,\r\n        payment_method: $(this).attr(\"data-id\"),\r\n        amount:\r\n          JSON.parse(localStorage.getItem(\"total\")) != null\r\n            ? JSON.parse(localStorage.getItem(\"total\")).reduce(reducer)\r\n            : null,\r\n        is_express: 1,\r\n        items: JSON.parse(localStorage.getItem(\"items\")),\r\n        orderNotes: localStorage.getItem(\"ordernotes\"),\r\n      });\r\n\r\n      $(\".changeInfo\").show();\r\n      $(\".changeInfo\").find(\"input\").prop(\"checked\", false);\r\n      $(\".changeInfo\").next().css({\r\n        opacity: 0,\r\n      });\r\n\r\n      $(this).find(\"input\").prop(\"checked\", true);\r\n\r\n      $(this).hide();\r\n\r\n      $(this).next().css({\r\n        opacity: 1,\r\n      });\r\n    });\r\n\r\n    $.each($(\".changeInfo\"), function (index, item) {\r\n      if (orderValue !== null) {\r\n        if ($(item).attr(\"data-id\") === orderValue.payment_method) {\r\n          $(item).hide();\r\n          $(item).next().css({\r\n            opacity: 1,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  let sendOrder = async (params) => {\r\n    const res = axios.post(baseUrl + \"order/create\", params);\r\n\r\n    document.querySelector('.perloaderOrder').classList.add('showPerloader');\r\n\r\n    if (data !== undefined) {\r\n      if ((await res).data.status === 200) {\r\n        document.querySelector('.perloaderOrder').classList.remove('showPerloader');\r\n\r\n        history.push({\r\n          pathname: \"/ordercheckcash\",\r\n        });\r\n\r\n        localStorage.removeItem(\"total\");\r\n        localStorage.removeItem(\"items\");\r\n        localStorage.removeItem(\"ordernotes\");\r\n\r\n        setOrderCheck((await res).data.status);\r\n        \r\n      } else if ((await res).data.status === 302) {\r\n        window.location.href = (await res).data.url;\r\n      }\r\n    } else {\r\n      history.push({\r\n        pathname: \"/signin\",\r\n      });\r\n    }\r\n\r\n    return res.data;\r\n  };\r\n\r\n  return (\r\n    <main className=\"location payment\">\r\n      <div className=\"perloaderOrder\">\r\n        <div\r\n          style={{\r\n            height: 300,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            id=\"preloader\"\r\n            aria-busy=\"true\"\r\n            aria-label=\"Loading, please wait.\"\r\n            role=\"progressbar\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t('ONLİNE SİFARİŞ')}</h4>\r\n        </Container>\r\n      </div>\r\n      <div className=\"locationWrapper\">\r\n        <div className=\"order__breadCrumbs\">\r\n        <span>{t(\"SİFARİŞ\")}</span>\r\n            <span>{t(\"Sifarişlərim\")}</span>\r\n            <span >{t(\"ÜNVAN SEÇ\")}</span>\r\n          <span className=\"activCrumbs\">{t('ÖDƏNİŞ ET')}</span>\r\n        </div>\r\n        <Container>\r\n          <div className=\"payment__content\">\r\n            <div className=\"location__content\">\r\n              <div className=\"location__contentLeft\">\r\n                <p>{t('Qapida Ödəniş')}</p>\r\n              </div>\r\n              <div className=\"location__contentRight\">\r\n                <span className=\"changeInfo\" data-id={2}>\r\n                  {t('SEÇ')}\r\n                  <input name=\"address_id\" type=\"radio\" />\r\n                </span>\r\n                <i style={{ opacity: 0 }} className=\"checkedI\">\r\n                  <FontAwesomeIcon icon={faCheck} />\r\n                </i>\r\n              </div>\r\n            </div>\r\n            <div className=\"location__content\">\r\n              <div className=\"location__contentLeft\">\r\n                <p>{t('Online Ödəniş')}</p>\r\n              </div>\r\n              <div className=\"location__contentRight\">\r\n                <span className=\"changeInfo\" data-id={1}>\r\n                  {t('SEÇ')}\r\n                  <input name=\"payment_id\" type=\"radio\" />\r\n                </span>\r\n                <i style={{ opacity: 0 }} className=\"checkedI\">\r\n                  <FontAwesomeIcon icon={faCheck} />\r\n                </i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"order__result noBoxShadow\">\r\n            <p>\r\n              {t('ÜMUMİ MƏBLƏĞ')}:\r\n              <span className=\"res\">\r\n                {JSON.parse(localStorage.getItem(\"total\")) !== null &&\r\n                  JSON.parse(localStorage.getItem(\"total\")).reduce(reducer) +\r\n                    \" AZN\"}\r\n              </span>\r\n            </p>\r\n            <div className=\"btnBoxs\" style={{ marginTop: 15 }}>\r\n              <NavLink to={\"/location\"}>\r\n                <button className=\"success\">{t('Geri')}</button>\r\n              </NavLink>\r\n              <NavLink\r\n                to={\"/payment\"}\r\n                onClick={() => {\r\n                  if (orderValue.payment_method !== null) {\r\n                    sendOrder(orderValue);\r\n                  }\r\n                }}\r\n              >\r\n                <button\r\n                  className=\"success\"\r\n                  onClick={() => {\r\n                    if (orderValue.payment_method === null) {\r\n                      swal({\r\n                        title: t(\"Seçim etməmisiniz!\"),\r\n                        icon: \"error\",\r\n                        button: t('Bağla'),\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  {\r\n                    t('İrəli')\r\n                  }\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      {settings.isLoading === false && <Map locations={locate} />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\delivery\\delivery.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\static\\static.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\openMobMenu.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\queries\\queries.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\api.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\include.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\news\\newsSelf.js",["229"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// rectstrap\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\n// react router dom\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\n// react query\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../api/api\";\r\n\r\nconst NewsSelf = () => {\r\n  let { pathname } = useLocation();\r\n\r\n  useLayoutEffect(() => {\r\n    setPage(1);\r\n    setBlog([]);\r\n  }, [pathname]);\r\n\r\n  let [page, setPage] = useState(1);\r\n\r\n  let [blog, setBlog] = useState([]);\r\n\r\n  let { data, isLoading } = useQuery(\r\n    [\"blog\", pathname, page],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"blog\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          page: page,\r\n          number: 3,\r\n        },\r\n      });\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    if (isLoading === false) {\r\n      setBlog((oldArray) => [...oldArray, ...data.data]);\r\n    }\r\n  }, [data]);\r\n\r\n  window.onscroll = function () {\r\n    if (isLoading === false) {\r\n      if (data.data.length !== 0) {\r\n        setPage((page = page + 1));\r\n        if (isLoading === false) {\r\n          if (blog.includes(...data.data) === false) {\r\n            setBlog((oldArray) => [...oldArray, ...data.data]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"newsSelf\">\r\n      <div className=\"home__newsContent\">\r\n        <Container>\r\n          <Row>\r\n            {isLoading === true && blog.length === 0 ? (\r\n              <div\r\n                style={{\r\n                  height: 500,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div\r\n                  id=\"preloader\"\r\n                  aria-busy=\"true\"\r\n                  aria-label=\"Loading, please wait.\"\r\n                  role=\"progressbar\"\r\n                ></div>\r\n              </div>\r\n            ) : (\r\n              blog.map((item, index) => (\r\n                <Col lg=\"4\" className=\"mb-4\" key={index}>\r\n                  <NavLink to={\"/blogs/\" + item.slug}>\r\n                    <div className=\"home__newsInfo\" style={{ marginTop: 0 }}>\r\n                      <img src={item.cover.cover} alt=\"\" />\r\n                      <div className=\"layout\">\r\n                        <img\r\n                          src={require(\"../../images/layouts.png\").default}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"text\">\r\n                        <span>15 DEKABR</span>\r\n                        <h4>{item.title}</h4>\r\n                      </div>\r\n                    </div>\r\n                  </NavLink>\r\n                </Col>\r\n              ))\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NewsSelf;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\resize.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\helper\\helper.js",["230","231","232"],"import renderHTML from \"react-render-html\";\r\n\r\n// moment\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/az\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// baseUrl\r\nimport { baseUrl } from \"../api/api\";\r\nimport { data } from \"jquery\";\r\n\r\nexport const checkType = (data) => {\r\n  // endResult.push(data.replace(myRegex, `<img src=${item} />`))\r\n\r\n  if (data !== undefined) {\r\n    let myRegex = /<img.*?src=\"(.*?)\"[^>]+>/g;\r\n\r\n    let result = data.search(myRegex);\r\n\r\n    if (result > -1) {\r\n      let myData = data.replaceAll(\r\n        \"/storage/\",\r\n        \"http://apiecoline.gocreative.az/storage/\"\r\n      );\r\n\r\n      return renderHTML(myData);\r\n    } else {\r\n      return renderHTML(data);\r\n    }\r\n  }\r\n};\r\n\r\nexport function decimalAdjust(type, value, exp) {\r\n  if (typeof exp === \"undefined\" || +exp === 0) {\r\n    return Math[type](value);\r\n  }\r\n\r\n  value = +value;\r\n  exp = +exp;\r\n  if (isNaN(value) || !(typeof exp === \"number\" && exp % 1 === 0)) {\r\n    return NaN;\r\n  }\r\n\r\n  value = value.toString().split(\"e\");\r\n  value = Math[type](+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp)));\r\n\r\n  value = value.toString().split(\"e\");\r\n  return +(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp));\r\n}\r\n\r\nlet date = moment();\r\n\r\nlet month = date.format(\"MMMM\");\r\n\r\nlet year = date.format(\"YYYY\");\r\n\r\nexport function createDate(date) {\r\n  let day = date.split(\" \")[0].split(\"-\")[2];\r\n\r\n  let newDate = (() => {\r\n    if (day.split(\"\")[0] === \"0\") {\r\n      return day.split(\"\")[1];\r\n    } else {\r\n      return day;\r\n    }\r\n  })();\r\n\r\n  return {\r\n    newDate,\r\n    month,\r\n    year,\r\n  };\r\n}\r\n\r\nexport function capitalize(word) {\r\n  if (typeof word !== \"string\") return \"\";\r\n  return word.charAt(0).toUpperCase() + word.slice(1);\r\n}\r\n\r\nexport const checkedUrl = (type) => {\r\n  if (type.type === \"url\") {\r\n    return type.url;\r\n  } else if (type.type === \"header\") {\r\n    return \"#\";\r\n  } else if (type.type === \"static-page\") {\r\n    return `/${type.reference}`;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\atoms\\atoms.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderComplete.js",["233","234","235","236","237"],"import React, { useLayoutEffect, useRef, useState } from \"react\";\r\n\r\n// rectstrap\r\nimport { Col, Container, Row, Input } from \"reactstrap\";\r\n\r\n// map\r\nimport Map from \"../map/map\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// recoil\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n// atoms\r\nimport { basket, order, orderTotal } from \"../../atoms/atoms\";\r\n\r\n// query\r\nimport { useQuery, useMutation } from \"react-query\";\r\n\r\n// baseUrl\r\nimport { baseUrl, loginApi } from \"../../api/api\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// helper\r\nimport { decimalAdjust } from \"../../helper/helper\";\r\n\r\n// sweet alert\r\nimport swal from \"sweetalert\";\r\n\r\n// i18next\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// jquery\r\nimport $ from 'jquery';\r\n\r\nconst OrderComplete = () => {\r\n  const { t } = useTranslation();\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const locate =\r\n    settings.isLoading === false &&\r\n    settings.data.data.map_location.map((item) => [\r\n      Number(item.lat),\r\n      Number(item.long),\r\n    ]);\r\n\r\n  const minAmount =\r\n    settings.isLoading === false && settings.data.data.min_amount;\r\n\r\n  let [product, setProduct] = useState([]);\r\n\r\n  let [myBasket, setMyBasket] = useRecoilState(basket);\r\n\r\n  let [allOrderTotal, setAllOrderTotal] = useRecoilState(orderTotal);\r\n\r\n  let [allOder, setOrder] = useRecoilState(order);\r\n\r\n  let [total] = useState([]);\r\n\r\n  // determinet  basket value\r\n\r\n  let history = useHistory();\r\n\r\n  if (JSON.parse(localStorage.getItem(\"items\")) !== null) {\r\n    product = JSON.parse(JSON.stringify(myBasket));\r\n    total = JSON.parse(allOrderTotal);\r\n  }\r\n\r\n  function sendMinus(value, event) {\r\n    const endRes = product.filter((id) => id.id === value.id);\r\n\r\n    if (endRes[0] !== undefined) {\r\n      if (endRes[0].count > 0) {\r\n        endRes[0].count--;\r\n        localStorage.setItem(\r\n          \"items\",\r\n          JSON.stringify(product.filter((count) => count.count > 0))\r\n        );\r\n        event.target.nextElementSibling.nextElementSibling.style.display =\r\n          \"block\";\r\n        event.target.nextElementSibling.nextElementSibling.textContent =\r\n          endRes[0].count;\r\n\r\n        setMyBasket(JSON.parse(localStorage.getItem(\"items\")));\r\n\r\n        const index = total.indexOf(Number(value.price));\r\n        if (index > -1) {\r\n          total.splice(index, 1);\r\n          window.localStorage.setItem(\"total\", JSON.stringify(total));\r\n\r\n          setAllOrderTotal(JSON.stringify(total));\r\n\r\n          setOrder({\r\n            address_id: null,\r\n            payment_method: null,\r\n            amount: total.length !== 0 ? total.reduce(reducer) : null,\r\n            is_exspress: null,\r\n            items: JSON.parse(localStorage.getItem(\"items\")),\r\n          });\r\n        }\r\n\r\n        event.target.parentNode.parentNode.children[3].children[1].textContent =\r\n          endRes[0].count * Number(endRes[0].price);\r\n      }\r\n    }\r\n  }\r\n\r\n  function sendPlus(value, event) {\r\n    const res = product.some((id) => id.id === value.id);\r\n\r\n    if (res === false) {\r\n      product.push(value);\r\n\r\n      const endFinish = product.filter((id) => id.id === value.id);\r\n\r\n      localStorage.setItem(\"items\", JSON.stringify(product));\r\n      setMyBasket(JSON.parse(localStorage.getItem(\"items\")));\r\n\r\n      if (endFinish !== 0) {\r\n        event.target.nextElementSibling.style.display = \"block\";\r\n        event.target.nextElementSibling.textContent = endFinish[0].count;\r\n      }\r\n    } else {\r\n      const endRes = product.filter((id) => id.id === value.id);\r\n      endRes[0].count++;\r\n      localStorage.setItem(\"items\", JSON.stringify(product));\r\n      setMyBasket(JSON.parse(localStorage.getItem(\"items\")));\r\n      event.target.parentNode.parentNode.children[3].children[1].textContent =\r\n        endRes[0].count * Number(endRes[0].price);\r\n\r\n      if (endRes !== 0) {\r\n        event.target.nextElementSibling.style.display = \"block\";\r\n        event.target.nextElementSibling.textContent = endRes[0].count;\r\n      }\r\n    }\r\n\r\n    total.push(Number(value.price));\r\n    window.localStorage.setItem(\"total\", JSON.stringify(total));\r\n    setAllOrderTotal(JSON.stringify(total));\r\n\r\n    setOrder({\r\n      address_id: null,\r\n      payment_method: null,\r\n      amount: total.reduce(reducer),\r\n      is_exspress: null,\r\n      items: JSON.parse(localStorage.getItem(\"items\")),\r\n    });\r\n  }\r\n\r\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\r\n\r\n  const reducer = (accumulator, currentValue) =>\r\n    round10(accumulator + currentValue, -1);\r\n\r\n  let mathEmp = [];\r\n\r\n  useLayoutEffect(() => {\r\n    if (total.length === 0) {\r\n      history.push({\r\n        pathname: \"/order\",\r\n      });\r\n    }\r\n  });\r\n\r\n  // checked token\r\n  let loginPopup = useRef();\r\n\r\n  // function checkedToken() {\r\n  //   if (\r\n  //     localStorage.getItem(\"token\") !== null &&\r\n  //     localStorage.getItem(\"user\") !== null &&\r\n  //     localStorage.getItem(\"total\") !== \"\"\r\n  //   ) {\r\n  //     return \"/location\";\r\n  //   } else {\r\n  //     return \"/ordercomplete\";\r\n  //   }\r\n  // }\r\n\r\n  function checkedAmount() {\r\n    document.querySelector(\".openUpdatedPopup\").style.display = \"none\";\r\n\r\n    if (total.reduce(reducer) < minAmount) {\r\n      swal({\r\n        title: t(\"Sifariş Məbləği 30 Azn -dan az ola bilməz\"),\r\n        icon: \"error\",\r\n        button: \"Bağla\",\r\n      });\r\n    }\r\n\r\n    return \"/ordercomplete\";\r\n  }\r\n\r\n  function nextPageButton() {\r\n    if (loginPopup.current !== undefined) {\r\n      loginPopup.current.style.display = \"block\";\r\n    }\r\n\r\n    if (JSON.stringify(myBasket) !== localStorage.getItem(\"items\")) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  let [email, setEmail] = useState();\r\n  let [password, setPassword] = useState();\r\n\r\n  let params = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n\r\n  // register\r\n  const mutation = useMutation((regi) => axios.post(loginApi, params), {\r\n    onSuccess: (login) => {\r\n      window.localStorage.setItem(\"user\", JSON.stringify(login.data.user));\r\n      window.localStorage.setItem(\"token\", JSON.stringify(login.data.token));\r\n\r\n      if (login.status === 200) {\r\n        history.push({\r\n          pathname: \"/ordercomplete\",\r\n        });\r\n\r\n        document.querySelector(\".openUpdatedPopup\").style.display = \"none\";\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      history.push({\r\n        pathname: \"/ordercomplete\",\r\n      });\r\n\r\n      document.querySelector(\".loginAlertBox\").style.display = \"block\";\r\n    },\r\n  });\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    $(\".oder__content nav\").css({\r\n      position: \"sticky\",\r\n      top: 20,\r\n      zIndex: 5555,\r\n    });\r\n\r\n    $(\".order__result \").css({\r\n      position: \"sticky\",\r\n      bottom: 0,\r\n      zIndex: 5555,\r\n      backgroundColor: \"#fff\",\r\n      padding: 15,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"complete loginLocation\">\r\n      <div className=\"checkedLoginPopup info__content\">\r\n        <div className=\"infoPopup openUpdatedPopup\" ref={loginPopup}>\r\n          <div className=\"info__WrapperModal\">\r\n            <button\r\n              className=\"closeModal\"\r\n              onClick={(event) => {\r\n                document.querySelector(\".openUpdatedPopup\").style.display =\r\n                  \"none\";\r\n              }}\r\n            >\r\n              x\r\n            </button>\r\n            <div className=\"complete__popupItems\">\r\n              <div className=\"login__info\">\r\n                <h4 className=\"complete__popupItems--title\">{t('Daxil ol')}</h4>\r\n                <div className=\"login__formBox\">\r\n                  <Input\r\n                    placeholder=\"EMAIL\"\r\n                    type=\"text\"\r\n                    onChange={(event) => {\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    placeholder=\"ŞİFRƏ\"\r\n                    type=\"password\"\r\n                    onChange={(event) => {\r\n                      setPassword(event.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"loginAlertBox\">\r\n                   {t('Parol və login məlumatları səhvdir')}\r\n                  </p>\r\n                </div>\r\n                <div className=\"login__formBoxEnd\">\r\n                  {/* <NavLink to={''}>\r\n                                    ŞİFRƏMİ UNUTDUM\r\n                                </NavLink> */}\r\n                  <NavLink to={\"/register\"}>{t('QEYDİYYATDAN KEÇ')}</NavLink>\r\n                </div>\r\n                <div className=\"login__sendBtn\">\r\n                  <button\r\n                    onClick={() => {\r\n                      mutation.mutate(params);\r\n                    }}\r\n                  >\r\n                   {t('Daxil ol')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t('ONLİNE SİFARİŞ')}</h4>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <div className=\"order__breadCrumbs\">\r\n          <span>{t('ORDER')}</span>\r\n          <span className=\"activCrumbs\">{t('Sifarişlərim')}</span>\r\n        </div>\r\n        <div className=\"oder__content home__priceBox\">\r\n          <Row>\r\n            {JSON.parse(window.localStorage.getItem(\"items\")) !== null &&\r\n              JSON.parse(window.localStorage.getItem(\"items\")).map((pro) => (\r\n                <Col xs=\"4\" lg=\"2\" key={pro.id}>\r\n                  <div className=\"order__itemBox\">\r\n                    <div className=\"order__itemBox--img\">\r\n                      <img\r\n                        src={\r\n                          pro.img !== null && pro.img.length !== 0\r\n                            ? pro.img\r\n                            : \"\"\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                      <button\r\n                        className=\"minus\"\r\n                        data-id={pro.id}\r\n                        onClick={(event) => {\r\n                          sendMinus(\r\n                            {\r\n                              id: pro.id,\r\n                              name: pro.name,\r\n                              app_name: pro.app_name,\r\n                              price: pro.price,\r\n                              img: pro.img,\r\n                              count: 0,\r\n                            },\r\n                            event\r\n                          );\r\n                        }}\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <button\r\n                        className=\"plus\"\r\n                        data-id={pro.id}\r\n                        onClick={(event) => {\r\n                          sendPlus(\r\n                            {\r\n                              id: pro.id,\r\n                              price: pro.price,\r\n                              app_name: pro.app_name,\r\n                              name: pro.name,\r\n                              img: pro.img.cover,\r\n                              count: 1,\r\n                            },\r\n                            event\r\n                          );\r\n                        }}\r\n                      >\r\n                        +\r\n                      </button>\r\n                      <div\r\n                        className=\"show\"\r\n                        style={{\r\n                          display:\r\n                            product.filter((id) => id.id === pro.id).length !==\r\n                            0\r\n                              ? \"block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        {product.filter((id) => id.id === pro.id).length !== 0\r\n                          ? product.filter((id) => id.id === pro.id)[0].count\r\n                          : \"\"}\r\n                      </div>\r\n                    </div>\r\n                    <strong>{pro.name}</strong>\r\n                    <span>{pro.category}</span>\r\n                    <div className=\"flex\">\r\n                      <p className=\"priceBtn\">\r\n                        <span style={{ width: 100 + \"%\" }}>{pro.price}</span>\r\n                        {/* <i>\r\n                            13%\r\n                        </i> */}\r\n                      </p>\r\n                      <p className=\"setCount\">\r\n                        {round10(\r\n                          pro.price *\r\n                            Number(\r\n                              product.filter((id) => id.id === pro.id)[0].count\r\n                            ),\r\n                          -2\r\n                        ) + \" AZN\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <Row>\r\n            <div className=\"order__noteBox\">\r\n              <h4>{t(\"Qeyd\")}</h4>\r\n              <textarea\r\n                className=\"order__note\"\r\n                onKeyUp={(event) => {\r\n                  localStorage.setItem(\"ordernotes\", event.target.value);\r\n                }}\r\n                onChange={(event) => {\r\n                  localStorage.setItem(\"ordernotes\", event.target.value);\r\n                }}\r\n              ></textarea>\r\n            </div>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n      <div className=\"order__result\">\r\n          <p>\r\n            {t('ÜMUMİ MƏBLƏĞ')}:\r\n            <span className=\"res\">\r\n              {total.length !== 0 && total.reduce(reducer) + \" AZN\"}\r\n            </span>\r\n          </p>\r\n          <div className=\"btnBoxs\">\r\n            <NavLink to={\"/order\"}>\r\n              <button className=\"success\">{t('Geri')}</button>\r\n            </NavLink>\r\n            <NavLink\r\n              to={\r\n                total.length !== 0 && total.reduce(reducer) >= minAmount\r\n                  ? \"/location\"\r\n                  : \"/ordercomplete\"\r\n              }\r\n              onClick={() => {\r\n                nextPageButton();\r\n                checkedAmount();\r\n              }}\r\n            >\r\n              <button className=\"success\">{t(\"İrəli\")}</button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      {/* <div id=\"map\">\r\n        {settings.isLoading === false && <Map locations={locate} />}\r\n      </div> */}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderComplete;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\signIn\\signIn.js",["238","239"],"import React, { useState } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_signIn.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container, Input } from \"reactstrap\";\r\n\r\n// components\r\nimport WhyUs from \"../whyUs/whyUs\";\r\nimport News from \"../news/news\";\r\nimport MapContainer from \"../map/map\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faGlassMartiniAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n// ract router dom\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// react query\r\nimport { useMutation, useQuery } from \"react-query\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// api\r\nimport { loginApi, baseUrl, loginSosial } from \"../../api/api\";\r\n\r\n// queries\r\nimport { user } from \"../../queries/queries\";\r\n\r\n// recoil\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n// atoms\r\nimport { userInfo } from \"../../atoms/atoms\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SignIn = () => {\r\n  const { t } = useTranslation();\r\n\r\n  let [email, setEmail] = useState();\r\n  let [password, setPassword] = useState();\r\n\r\n  let params = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  let { pathname } = useLocation();\r\n\r\n  // register\r\n  const mutation = useMutation((regi) => axios.post(loginApi, regi), {\r\n    onSuccess: function (login) {\r\n      window.localStorage.setItem(\"user\", JSON.stringify(login.data.user));\r\n      window.localStorage.setItem(\"token\", JSON.stringify(login.data.token));\r\n      document\r\n        .querySelector(\".perloaderOrder\")\r\n        .classList.remove(\"showPerloader\");\r\n\r\n      if (login.status === 200 && pathname === \"/signin\") {\r\n        history.push({\r\n          pathname: \"/loginorder\",\r\n        });\r\n      } else {\r\n        history.push({\r\n          pathname: pathname,\r\n        });\r\n      }\r\n    },\r\n    onError: function (error) {\r\n      document\r\n        .querySelector(\".perloaderOrder\")\r\n        .classList.remove(\"showPerloader\");\r\n      document.querySelector(\".loginAlertBox\").style.display = \"block\";\r\n    },\r\n  });\r\n\r\n  // settings\r\n  let settings = useQuery(\r\n    [\"settings\", \"\"],\r\n    async () => {\r\n      const res = await axios.get(baseUrl + \"setting\");\r\n\r\n      return res.data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const locate =\r\n    settings.isLoading === false &&\r\n    settings.data !== undefined &&\r\n    settings.data.data.map_location.map((item) => [\r\n      Number(item.lat),\r\n      Number(item.long),\r\n    ]);\r\n\r\n  // signin\r\n\r\n  let [userData, setUserData] = useRecoilState(userInfo);\r\n\r\n  useQuery([\"user\", \"\"], user, {\r\n    refetchOnWindowFocus: false,\r\n    cacheTime:\r\n      localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n        ? 0\r\n        : 5000,\r\n    onSuccess: function (succ) {\r\n      if (succ) {\r\n        setUserData(succ.data);\r\n      }\r\n    },\r\n    onError: function (err) {\r\n      if (err) {\r\n        history.push({\r\n          pathname: \"/signin\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <main className=\"signIn rules login\">\r\n      <div className=\"perloaderOrder\">\r\n        <div\r\n          style={{\r\n            height: 300,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            id=\"preloader\"\r\n            aria-busy=\"true\"\r\n            aria-label=\"Loading, please wait.\"\r\n            role=\"progressbar\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">Login</h4>\r\n        </Container>\r\n      </div>\r\n      <div className=\"rules__content login__content\">\r\n        <Container>\r\n          <div className=\"login__info\">\r\n            {/* <div className='login__social'>\r\n                            <a href='2#'>\r\n                                <FontAwesomeIcon icon={faEnvelope} />\r\n                                Log in Email\r\n                            </a>\r\n                            <a href='2#'>\r\n                                <FontAwesomeIcon icon={faFacebookF} />\r\n                                Connect to facebook\r\n                            </a>\r\n                        </div> */}\r\n            <div className=\"login__info\">\r\n              <h4>{t(\"Daxil ol\")}</h4>\r\n              <div className=\"login__formBox\">\r\n                <Input\r\n                  placeholder=\"EMAIL\"\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setEmail(event.target.value);\r\n                  }}\r\n                />\r\n                <Input\r\n                  placeholder=\"ŞİFRƏ\"\r\n                  type=\"password\"\r\n                  onChange={(event) => {\r\n                    setPassword(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"loginAlertBox\">\r\n                  Parol və login məlumatları səhvdir\r\n                </p>\r\n              </div>\r\n              <div className=\"login__formBoxEnd\">\r\n                {/* <NavLink to={''}>\r\n                                    ŞİFRƏMİ UNUTDUM\r\n                                </NavLink> */}\r\n                <NavLink to={\"/register\"}>{t(\"Qeydiyyat\")}</NavLink>\r\n              </div>\r\n              <div className=\"login__sendBtn\">\r\n                <button\r\n                  onClick={() => {\r\n                    mutation.mutate(params);\r\n                    document\r\n                      .querySelector(\".perloaderOrder\")\r\n                      .classList.add(\"showPerloader\");\r\n                  }}\r\n                >\r\n                 {t(\"Daxil ol\")}\r\n                </button>\r\n              </div>\r\n              <div className=\"login__social\" style={{ marginBottom: 50 }}>\r\n                <a href={loginSosial + \"/flynsarmy/sociallogin/Google\"}>\r\n                  <FontAwesomeIcon icon={faEnvelope} />\r\n                  Email\r\n                </a>\r\n                <a href={loginSosial + \"/flynsarmy/sociallogin/Facebook\"}>\r\n                  <FontAwesomeIcon icon={faFacebookF} />\r\n                  Facebook\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <WhyUs />\r\n      <News />\r\n      <div id=\"map\">\r\n        {settings.isLoading === false && <MapContainer locations={locate} />}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\api\\token.js",["240","241"],"// axios\r\nimport axios from \"axios\";\r\n\r\n// router dom\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// query\r\nimport { useQuery } from \"react-query\";\r\n\r\n// atoms\r\nimport { userInfo } from \"../atoms/atoms\";\r\n\r\n// recoil\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n// queries\r\nimport { user } from \"../queries/queries\";\r\n\r\n// atoms\r\nimport { error } from \"../atoms/atoms\";\r\n\r\nfunction useQueryData() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport function SetToken() {\r\n  let [err, setError] = useRecoilState(error);\r\n\r\n  let history = useHistory();\r\n\r\n  let { pathname } = useLocation();\r\n\r\n  let query = useQueryData();\r\n\r\n  let [userData, setUserData] = useRecoilState(userInfo);\r\n\r\n  useQuery([\"user\", \"\"], user, {\r\n    refetchOnWindowFocus: false,\r\n    cacheTime:\r\n      localStorage.getItem(\"token\") && localStorage.getItem(\"user\") === null\r\n        ? 0\r\n        : 5000,\r\n    onSuccess: function (succ) {\r\n      if (succ) {\r\n        setUserData(succ.data);\r\n      }\r\n    },\r\n  });\r\n\r\n  if (query.get(\"token\") !== null) {\r\n    localStorage.setItem(\"token\", query.get(\"token\"));\r\n  }\r\n\r\n  axios.interceptors.request.use(function (config) {\r\n    let token =\r\n      localStorage.getItem(\"token\") === null\r\n        ? query.get(\"token\")\r\n        : localStorage.getItem(\"token\");\r\n\r\n    config.headers[\"locale\"] = localStorage.getItem(\"i18nextLng\");\r\n\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = \"Bearer \" + JSON.parse(token);\r\n    } else {\r\n      delete config.headers[\"Authorization\"];\r\n    }\r\n    return config;\r\n  });\r\n\r\n  axios.interceptors.response.use(\r\n    function (response) {\r\n      return response;\r\n    },\r\n    function (error) {\r\n      setError(error);\r\n\r\n      // localStorage.removeItem(\"token\");\r\n      // localStorage.removeItem(\"user\");\r\n      // history.push({\r\n      //   pathname: \"/\",\r\n      // });\r\n\r\n      // location.reload()\r\n\r\n      if (error.response !== undefined) {\r\n        if (error.response.status === 401) {\r\n          window.localStorage.removeItem(\"token\");\r\n          window.localStorage.removeItem(\"user\");\r\n\r\n          if (\r\n            pathname === \"loginorder\" ||\r\n            pathname === \"loginlocation\" ||\r\n            pathname === \"logininformation\" ||\r\n            pathname === \"passwordupdate\"\r\n          ) {\r\n            history.push({\r\n              pathname: \"/signin\",\r\n            });\r\n          }\r\n        }\r\n\r\n        if (error.response.status === 400) {\r\n          window.localStorage.removeItem(\"token\");\r\n          window.localStorage.removeItem(\"user\");\r\n\r\n          if (\r\n            pathname === \"loginorder\" ||\r\n            pathname === \"loginlocation\" ||\r\n            pathname === \"logininformation\" ||\r\n            pathname === \"passwordupdate\"\r\n          ) {\r\n            history.push({\r\n              pathname: \"/signin\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\contact\\contact.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\passwordUpdated\\passwordUpdated.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\register\\register.js",["242","243"],"import React, { useLayoutEffect, useState } from \"react\";\r\n\r\n// css\r\n\r\nimport \"./css/_login.scss\";\r\n\r\n// tools\r\n\r\n// rectstrap\r\nimport { Container, Input } from \"reactstrap\";\r\n\r\n// components\r\nimport WhyUs from \"../whyUs/whyUs\";\r\nimport News from \"../news/news\";\r\nimport Map from \"../map/map\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faGlassMartiniAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n// ract router dom\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// react query\r\nimport { useMutation } from \"react-query\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// apis\r\n\r\nimport { loginSosial, registerApi } from \"../../api/api\";\r\n\r\n// token\r\nimport { error } from \"../../atoms/atoms\";\r\n\r\n// recoil\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\n// sweet alert\r\nimport swal from \"sweetalert\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst mapLocate = [[41.015137, 28.97953]];\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n\r\n  let [name, setName] = useState();\r\n  let [surname, setSurname] = useState();\r\n  let [email, setEmail] = useState();\r\n  let [phone, setPhone] = useState();\r\n  let [password, setPassword] = useState();\r\n  let [passwordRepeat, setPasswordRepeat] = useState();\r\n\r\n  let isValid = true;\r\n\r\n  let history = useHistory();\r\n\r\n  let params = {\r\n    name: name,\r\n    phone: phone,\r\n    surname: surname,\r\n    email: email,\r\n    password: password,\r\n    password_confirmation: passwordRepeat,\r\n  };\r\n\r\n  const err = useRecoilValue(error);\r\n\r\n  // // register\r\n  const mutation = useMutation((regi) => axios.post(registerApi, regi), {\r\n    onSuccess: function (token) {\r\n      document\r\n        .querySelector(\".perloaderOrder\")\r\n        .classList.remove(\"showPerloader\");\r\n      window.localStorage.setItem(\"token\", JSON.stringify(token.data.token));\r\n      window.localStorage.setItem(\"user\", JSON.stringify(token.data.user));\r\n\r\n      history.push({\r\n        pathname: \"/logininformation\",\r\n      });\r\n    },\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    if (err !== null && mutation.isError === true) {\r\n      swal({\r\n        title: err.response.data.error,\r\n        icon: \"error\",\r\n        button: \"Bağla\",\r\n      });\r\n    }\r\n  }, [mutation.isError]);\r\n\r\n  return (\r\n    <main className=\"rules login\">\r\n      <div className=\"perloaderOrder\">\r\n        <div\r\n          style={{\r\n            height: 300,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            id=\"preloader\"\r\n            aria-busy=\"true\"\r\n            aria-label=\"Loading, please wait.\"\r\n            role=\"progressbar\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rules__banner\">\r\n        <img src={require(\"../../images/rules.png\").default} alt=\"\" />\r\n        <Container>\r\n          <h4 className=\"rules__title\">{t(\"Daxil ol\")}</h4>\r\n        </Container>\r\n      </div>\r\n      <div className=\"rules__content login__content\">\r\n        <Container>\r\n          <h4>{t(\"QEYDİYYATDAN KEÇ VƏ YA DAXİL OL\")}</h4>\r\n          <div className=\"login__info\">\r\n            <div className=\"login__social\">\r\n              <a href={loginSosial + \"/flynsarmy/sociallogin/Google\"}>\r\n                <FontAwesomeIcon icon={faEnvelope} />\r\n                Email\r\n              </a>\r\n              <a href={loginSosial + \"/flynsarmy/sociallogin/Facebook\"}>\r\n                <FontAwesomeIcon icon={faFacebookF} />\r\n                Facebook\r\n              </a>\r\n            </div>\r\n            <div className=\"login__info\">\r\n              <h4>{t(\"XÜSUSİ QEYDİYYAT\")}</h4>\r\n              <div className=\"login__formBox\">\r\n                <Input\r\n                  placeholder={t(\"AD\")}\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"alertLogin\">Ad Daxil Edin</p>\r\n                <Input\r\n                  placeholder={t(\"SOYAD\")}\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setSurname(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"alertLogin\">{t(\"Soyad Daxil Edin\")}</p>\r\n                <Input\r\n                  placeholder={t(\"Telefon\")}\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setPhone(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"alertLogin\">\r\n                  {t(\"Telefon Nömrənizi Daxil Edin\")}\r\n                </p>\r\n                <Input\r\n                  placeholder={t(\"EMAIL\")}\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setEmail(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"alertLogin\">{t(\"Emaili Daxil Edin\")}</p>\r\n                <Input\r\n                  placeholder={t(\"ŞİFRƏ\")}\r\n                  type=\"password\"\r\n                  onChange={(event) => {\r\n                    setPassword(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"alertLogin\">{t(\"Şifrə Daxil Edin\")}</p>\r\n                <Input\r\n                  placeholder={t(\"ŞİFRƏ TƏKRAR\")}\r\n                  type=\"password\"\r\n                  onChange={(event) => {\r\n                    setPasswordRepeat(event.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"alertLogin\">{t(\"Şifrəni Təkrar Daxil Edin\")}</p>\r\n              </div>\r\n              <div className=\"login__formBoxEnd\">\r\n                {/* <NavLink to={''}>\r\n                                    ŞİFRƏMİ UNUTDUM\r\n                                </NavLink> */}\r\n                <NavLink to={\"/signin\"}>{t(\"DAXİL OL\")}</NavLink>\r\n              </div>\r\n              <div className=\"login__sendBtn\">\r\n                <button\r\n                  onClick={() => {\r\n                    document\r\n                      .querySelectorAll(\".login__formBox input\")\r\n                      .forEach((item) => {\r\n                        if (item.value !== \"\") {\r\n                          item.nextElementSibling.style.display = \"none\";\r\n                          item.nextElementSibling.classList.remove(\r\n                            \"framesAlert\"\r\n                          );\r\n                        } else {\r\n                          item.nextElementSibling.style.display = \"block\";\r\n                          item.nextElementSibling.classList.remove(\r\n                            \"framesAlert\"\r\n                          );\r\n\r\n                          setTimeout(() => {\r\n                            item.nextElementSibling.classList.add(\r\n                              \"framesAlert\"\r\n                            );\r\n                          }, 100);\r\n\r\n                          isValid = false;\r\n                        }\r\n                      });\r\n\r\n                    if (isValid === true) {\r\n                      mutation.mutate(params);\r\n                      document\r\n                        .querySelector(\".perloaderOrder\")\r\n                        .classList.add(\"showPerloader\");\r\n                    }\r\n                  }}\r\n                >\r\n                  {t(\"Qeydiyyat\")}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <WhyUs />\r\n      <News />\r\n      <div id=\"map\">\r\n        <Map locations={mapLocate} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\hooks\\checkedPhoneInput.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\i18next\\i18n.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\map\\mapCoordinate.js",["244","245","246","247","248","249","250","251"],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\services\\services.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\404\\404.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\helmet\\helmet.js",[],"C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderCheck.js",["252","253","254","255","256"],"import React, { useLayoutEffect } from \"react\";\r\n\r\n// tools\r\n// reactstrap\r\nimport { Container } from \"reactstrap\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// react router rom\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// atoms\r\nimport { order, orderstatus } from \"../../atoms/atoms\";\r\n\r\n// recoil\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\n// query\r\nimport { useQuery } from \"react-query\";\r\n\r\n// baseUrl\r\nimport { azerTurkReturn } from \"../../api/api\";\r\n\r\n// axios\r\nimport axios from \"axios\";\r\n\r\nconst OrderCheck = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const orderStatusValue = useRecoilValue(orderstatus);\r\n\r\n  const history = useHistory();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  function useQueryData() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n  let query = useQueryData();\r\n\r\n  let params = {\r\n    orderId: query.get(\"orderId\"),\r\n  };\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [\"orderstatus\", \"\"],\r\n    async () => {\r\n      const res = axios.get(azerTurkReturn, {\r\n        params: params,\r\n      });\r\n\r\n      return (await res).data;\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      onSuccess: function (succ) {\r\n        if (succ.status === 200) {\r\n          localStorage.removeItem(\"total\");\r\n          localStorage.removeItem(\"items\");\r\n          localStorage.removeItem(\"ordernotes\");\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <main className=\"orderSuccess\">\r\n      <Container>\r\n        {isLoading === false && data.status === 200 && (\r\n          <h1 className=\"orderSuccess__title\">{t(\"Sifarişiniz Alındı\")}</h1>\r\n        )}\r\n        {isLoading === false && data.status === 400 && (\r\n          <h1 className=\"orderSuccess__title\">{data.ErrorMessage}</h1>\r\n        )}\r\n\r\n        {isLoading === false && data.status === 200 && (\r\n          <div className=\"success-animation\">\r\n            <svg\r\n              className=\"checkmark\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 52 52\"\r\n            >\r\n              <circle\r\n                className=\"checkmark__circle\"\r\n                cx=\"26\"\r\n                cy=\"26\"\r\n                r=\"25\"\r\n                fill=\"none\"\r\n              />\r\n              <path\r\n                className=\"checkmark__check\"\r\n                fill=\"none\"\r\n                d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        )}\r\n\r\n        {isLoading === false && data.status === 400 && (\r\n          <div className=\"ui-error\">\r\n            <svg viewBox=\"0 0 87 87\" version=\"1.1\">\r\n              <g\r\n                id=\"Page-1\"\r\n                stroke=\"none\"\r\n                strokeWidth=\"1\"\r\n                fill=\"none\"\r\n                fill-rule=\"evenodd\"\r\n              >\r\n                <g id=\"Group-2\" transform=\"translate(2.000000, 2.000000)\">\r\n                  <circle\r\n                    id=\"Oval-2\"\r\n                    stroke=\"rgba(252, 191, 191, .5)\"\r\n                    strokeWidth=\"4\"\r\n                    cx=\"41.5\"\r\n                    cy=\"41.5\"\r\n                    r=\"41.5\"\r\n                  ></circle>\r\n                  <circle\r\n                    className=\"ui-error-circle\"\r\n                    stroke=\"#F74444\"\r\n                    strokeWidth=\"4\"\r\n                    cx=\"41.5\"\r\n                    cy=\"41.5\"\r\n                    r=\"41.5\"\r\n                  ></circle>\r\n                  <path\r\n                    className=\"ui-error-line1\"\r\n                    d=\"M22.244224,22 L60.4279902,60.1837662\"\r\n                    id=\"Line\"\r\n                    stroke=\"#F74444\"\r\n                    strokeWidth=\"3\"\r\n                    strokeLinecap=\"square\"\r\n                  ></path>\r\n                  <path\r\n                    className=\"ui-error-line2\"\r\n                    d=\"M60.755776,21 L23.244224,59.8443492\"\r\n                    id=\"Line\"\r\n                    stroke=\"#F74444\"\r\n                    strokeWidth=\"3\"\r\n                    strokeLinecap=\"square\"\r\n                  ></path>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"orderNavItem\">\r\n          <NavLink to={\"/loginorder\"}>{t(\"Sifarişlərim\")}</NavLink>\r\n        </div>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderCheck;\r\n","C:\\xampp\\htdocs\\frontend\\E\\ecoline\\src\\components\\main\\order\\orderCheckCash.js",["257","258","259","260"],"import React, { useLayoutEffect } from \"react\";\r\n\r\n// tools\r\n// reactstrap\r\nimport { CardBody, Container } from \"reactstrap\";\r\n\r\n// react i18\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// react router rom\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// atoms\r\nimport { order, orderstatus } from \"../../atoms/atoms\";\r\n\r\n// recoil\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst OrderCheckCash = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const history = useHistory();\r\n\r\n  const orderStatusValue = useRecoilValue(orderstatus);\r\n\r\n  window.addEventListener(\"load\", function (e) {\r\n    if (orderStatusValue === null) {\r\n      history.push({\r\n        pathname: \"/\",\r\n      });\r\n\r\n      localStorage.removeItem(\"total\");\r\n      localStorage.removeItem(\"items\");\r\n      localStorage.removeItem(\"ordernotes\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <main className=\"orderSuccess\">\r\n      <Container>\r\n        {orderStatusValue === 200 && (\r\n          <h1 className=\"orderSuccess__title\">{t(\"Sifarişiniz Alındı\")}</h1>\r\n        )}\r\n\r\n        {orderStatusValue === 200 && (\r\n          <div className=\"success-animation\">\r\n            <svg\r\n              className=\"checkmark\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 52 52\"\r\n            >\r\n              <circle\r\n                className=\"checkmark__circle\"\r\n                cx=\"26\"\r\n                cy=\"26\"\r\n                r=\"25\"\r\n                fill=\"none\"\r\n              />\r\n              <path\r\n                className=\"checkmark__check\"\r\n                fill=\"none\"\r\n                d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"orderNavItem\">\r\n          <NavLink to={\"/loginorder\"}>{t(\"Sifarişlərim\")}</NavLink>\r\n        </div>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderCheckCash;\r\n",{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":129,"column":6,"nodeType":"267","endLine":129,"endColumn":12,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":159,"column":8,"nodeType":"271","messageId":"272","endLine":159,"endColumn":16},{"ruleId":"269","severity":1,"message":"273","line":159,"column":18,"nodeType":"271","messageId":"272","endLine":159,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":207,"column":13,"nodeType":"276","endLine":207,"endColumn":24},{"ruleId":"274","severity":1,"message":"275","line":210,"column":13,"nodeType":"276","endLine":210,"endColumn":24},{"ruleId":"274","severity":1,"message":"275","line":213,"column":13,"nodeType":"276","endLine":213,"endColumn":24},{"ruleId":"274","severity":1,"message":"275","line":216,"column":13,"nodeType":"276","endLine":216,"endColumn":24},{"ruleId":"269","severity":1,"message":"277","line":50,"column":9,"nodeType":"271","messageId":"272","endLine":50,"endColumn":15},{"ruleId":"269","severity":1,"message":"278","line":21,"column":8,"nodeType":"271","messageId":"272","endLine":21,"endColumn":11},{"ruleId":"269","severity":1,"message":"279","line":22,"column":8,"nodeType":"271","messageId":"272","endLine":22,"endColumn":12},{"ruleId":"269","severity":1,"message":"280","line":52,"column":10,"nodeType":"271","messageId":"272","endLine":52,"endColumn":16},{"ruleId":"265","severity":1,"message":"281","line":66,"column":8,"nodeType":"267","endLine":66,"endColumn":14,"suggestions":"282"},{"ruleId":"269","severity":1,"message":"283","line":6,"column":10,"nodeType":"271","messageId":"272","endLine":6,"endColumn":13},{"ruleId":"269","severity":1,"message":"284","line":6,"column":26,"nodeType":"271","messageId":"272","endLine":6,"endColumn":29},{"ruleId":"269","severity":1,"message":"285","line":17,"column":8,"nodeType":"271","messageId":"272","endLine":17,"endColumn":11},{"ruleId":"269","severity":1,"message":"286","line":55,"column":9,"nodeType":"271","messageId":"272","endLine":55,"endColumn":16},{"ruleId":"269","severity":1,"message":"277","line":70,"column":9,"nodeType":"271","messageId":"272","endLine":70,"endColumn":15},{"ruleId":"269","severity":1,"message":"287","line":84,"column":17,"nodeType":"271","messageId":"272","endLine":84,"endColumn":27},{"ruleId":"269","severity":1,"message":"288","line":88,"column":8,"nodeType":"271","messageId":"272","endLine":88,"endColumn":16},{"ruleId":"269","severity":1,"message":"289","line":90,"column":8,"nodeType":"271","messageId":"272","endLine":90,"endColumn":17},{"ruleId":"269","severity":1,"message":"290","line":90,"column":19,"nodeType":"271","messageId":"272","endLine":90,"endColumn":31},{"ruleId":"269","severity":1,"message":"291","line":181,"column":7,"nodeType":"271","messageId":"272","endLine":181,"endColumn":14},{"ruleId":"269","severity":1,"message":"292","line":85,"column":8,"nodeType":"271","messageId":"272","endLine":85,"endColumn":19},{"ruleId":"269","severity":1,"message":"293","line":172,"column":8,"nodeType":"271","messageId":"272","endLine":172,"endColumn":15},{"ruleId":"265","severity":1,"message":"294","line":262,"column":6,"nodeType":"267","endLine":262,"endColumn":23,"suggestions":"295"},{"ruleId":"269","severity":1,"message":"296","line":266,"column":17,"nodeType":"271","messageId":"272","endLine":266,"endColumn":25},{"ruleId":"269","severity":1,"message":"297","line":46,"column":8,"nodeType":"271","messageId":"272","endLine":46,"endColumn":15},{"ruleId":"269","severity":1,"message":"298","line":46,"column":17,"nodeType":"271","messageId":"272","endLine":46,"endColumn":27},{"ruleId":"269","severity":1,"message":"299","line":113,"column":8,"nodeType":"271","messageId":"272","endLine":113,"endColumn":16},{"ruleId":"269","severity":1,"message":"299","line":43,"column":8,"nodeType":"271","messageId":"272","endLine":43,"endColumn":16},{"ruleId":"269","severity":1,"message":"296","line":124,"column":17,"nodeType":"271","messageId":"272","endLine":124,"endColumn":25},{"ruleId":"300","severity":1,"message":"301","line":278,"column":38,"nodeType":"302","messageId":"303","endLine":278,"endColumn":40},{"ruleId":"265","severity":1,"message":"304","line":165,"column":6,"nodeType":"267","endLine":165,"endColumn":23,"suggestions":"305"},{"ruleId":"269","severity":1,"message":"296","line":169,"column":17,"nodeType":"271","messageId":"272","endLine":169,"endColumn":25},{"ruleId":"269","severity":1,"message":"293","line":88,"column":8,"nodeType":"271","messageId":"272","endLine":88,"endColumn":15},{"ruleId":"269","severity":1,"message":"306","line":90,"column":8,"nodeType":"271","messageId":"272","endLine":90,"endColumn":18},{"ruleId":"265","severity":1,"message":"307","line":139,"column":6,"nodeType":"267","endLine":139,"endColumn":8,"suggestions":"308"},{"ruleId":"265","severity":1,"message":"309","line":48,"column":6,"nodeType":"267","endLine":48,"endColumn":12,"suggestions":"310"},{"ruleId":"269","severity":1,"message":"311","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":13},{"ruleId":"269","severity":1,"message":"312","line":11,"column":10,"nodeType":"271","messageId":"272","endLine":11,"endColumn":17},{"ruleId":"269","severity":1,"message":"313","line":12,"column":10,"nodeType":"271","messageId":"272","endLine":12,"endColumn":14},{"ruleId":"269","severity":1,"message":"285","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":11},{"ruleId":"269","severity":1,"message":"277","line":53,"column":9,"nodeType":"271","messageId":"272","endLine":53,"endColumn":15},{"ruleId":"269","severity":1,"message":"287","line":63,"column":17,"nodeType":"271","messageId":"272","endLine":63,"endColumn":27},{"ruleId":"269","severity":1,"message":"293","line":69,"column":8,"nodeType":"271","messageId":"272","endLine":69,"endColumn":15},{"ruleId":"269","severity":1,"message":"291","line":168,"column":7,"nodeType":"271","messageId":"272","endLine":168,"endColumn":14},{"ruleId":"269","severity":1,"message":"314","line":19,"column":3,"nodeType":"271","messageId":"272","endLine":19,"endColumn":20},{"ruleId":"269","severity":1,"message":"299","line":112,"column":8,"nodeType":"271","messageId":"272","endLine":112,"endColumn":16},{"ruleId":"269","severity":1,"message":"315","line":27,"column":8,"nodeType":"271","messageId":"272","endLine":27,"endColumn":11},{"ruleId":"269","severity":1,"message":"299","line":35,"column":8,"nodeType":"271","messageId":"272","endLine":35,"endColumn":16},{"ruleId":"269","severity":1,"message":"314","line":19,"column":3,"nodeType":"271","messageId":"272","endLine":19,"endColumn":20},{"ruleId":"265","severity":1,"message":"316","line":98,"column":6,"nodeType":"267","endLine":98,"endColumn":24,"suggestions":"317"},{"ruleId":"269","severity":1,"message":"285","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":13},{"ruleId":"269","severity":1,"message":"318","line":3,"column":15,"nodeType":"271","messageId":"272","endLine":3,"endColumn":25},{"ruleId":"269","severity":1,"message":"319","line":3,"column":27,"nodeType":"271","messageId":"272","endLine":3,"endColumn":33},{"ruleId":"269","severity":1,"message":"320","line":3,"column":35,"nodeType":"271","messageId":"272","endLine":3,"endColumn":51},{"ruleId":"269","severity":1,"message":"321","line":40,"column":11,"nodeType":"271","messageId":"272","endLine":40,"endColumn":18},{"ruleId":"269","severity":1,"message":"322","line":51,"column":11,"nodeType":"271","messageId":"272","endLine":51,"endColumn":28},{"ruleId":"269","severity":1,"message":"323","line":59,"column":11,"nodeType":"271","messageId":"272","endLine":59,"endColumn":21},{"ruleId":"269","severity":1,"message":"324","line":83,"column":11,"nodeType":"271","messageId":"272","endLine":83,"endColumn":21},{"ruleId":"269","severity":1,"message":"325","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":32},{"ruleId":"269","severity":1,"message":"326","line":14,"column":10,"nodeType":"271","messageId":"272","endLine":14,"endColumn":15},{"ruleId":"269","severity":1,"message":"327","line":31,"column":9,"nodeType":"271","messageId":"272","endLine":31,"endColumn":25},{"ruleId":"269","severity":1,"message":"286","line":33,"column":9,"nodeType":"271","messageId":"272","endLine":33,"endColumn":16},{"ruleId":"269","severity":1,"message":"328","line":35,"column":11,"nodeType":"271","messageId":"272","endLine":35,"endColumn":19},{"ruleId":"269","severity":1,"message":"325","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":32},{"ruleId":"269","severity":1,"message":"329","line":5,"column":10,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"330","line":11,"column":31,"nodeType":"271","messageId":"272","endLine":11,"endColumn":42},{"ruleId":"269","severity":1,"message":"326","line":14,"column":10,"nodeType":"271","messageId":"272","endLine":14,"endColumn":15},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'pathname'. Either include it or remove the dependency array.","ArrayExpression",["333"],"no-unused-vars","'titleHel' is assigned a value but never used.","Identifier","unusedVar","'setTitle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'locate' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'tabKey' is assigned a value but never used.","React Hook useLayoutEffect has a missing dependency: 'setTabKey'. Either include it or remove the dependency array.",["334"],"'Col' is defined but never used.","'Row' is defined but never used.","'Map' is defined but never used.","'history' is assigned a value but never used.","'setProduct' is assigned a value but never used.","'allOrder' is assigned a value but never used.","'changeTab' is assigned a value but never used.","'setChangeTab' is assigned a value but never used.","'mathEmp' is assigned a value but never used.","'updatedPage' is assigned a value but never used.","'allOder' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'data', 'isLoading', 'orderValue', and 'setOrder'. Either include them or remove the dependency array.",["335"],"'setState' is assigned a value but never used.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","'userData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useLayoutEffect has missing dependencies: 'data' and 'isLoading'. Either include them or remove the dependency array.",["336"],"'ordercheck' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'history', 'orderValue', 'reducer', and 'setOrder'. Either include them or remove the dependency array.",["337"],"React Hook useLayoutEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array.",["338"],"'axios' is defined but never used.","'baseUrl' is defined but never used.","'data' is defined but never used.","'faGlassMartiniAlt' is defined but never used.","'err' is assigned a value but never used.","React Hook useLayoutEffect has a missing dependency: 'err'. Either include it or remove the dependency array.",["339"],"'InfoWindow' is defined but never used.","'Marker' is defined but never used.","'GoogleApiWrapper' is defined but never used.","'onClose' is assigned a value but never used.","'mapContainerStyle' is assigned a value but never used.","'mapOptions' is assigned a value but never used.","'changeCoor' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'order' is defined but never used.","'orderStatusValue' is assigned a value but never used.","'pathname' is assigned a value but never used.","'CardBody' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},"Update the dependencies array to be: [data, pathname]",{"range":"354","text":"355"},"Update the dependencies array to be: [data, setTabKey]",{"range":"356","text":"357"},"Update the dependencies array to be: [addressApi.data, data, isLoading, orderValue, setOrder]",{"range":"358","text":"359"},"Update the dependencies array to be: [addressApi.data, data, isLoading]",{"range":"360","text":"361"},"Update the dependencies array to be: [history, orderValue, reducer, setOrder]",{"range":"362","text":"363"},"Update the dependencies array to be: [data, isLoading]",{"range":"364","text":"365"},"Update the dependencies array to be: [err, mutation.isError]",{"range":"366","text":"367"},[3033,3039],"[data, pathname]",[1024,1030],"[data, setTabKey]",[5948,5965],"[addressApi.data, data, isLoading, orderValue, setOrder]",[3560,3577],"[addressApi.data, data, isLoading]",[3213,3215],"[history, orderValue, reducer, setOrder]",[1068,1074],"[data, isLoading]",[2330,2348],"[err, mutation.isError]"]